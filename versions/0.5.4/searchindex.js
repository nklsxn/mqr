Search.setIndex({"alltitles": {"1. Changing rc_params and stylesheets": [[345, "changing-rc-params-and-stylesheets"]], "2. Changing mqr.plot.defaults.Defaults": [[345, "changing-mqr-plot-defaults-defaults"]], "3. Overriding defaults: **kwargs": [[345, "overriding-defaults-kwargs"]], "A note on wrapped interfaces": [[1, "a-note-on-wrapped-interfaces"]], "A screening design that checks for curvature": [[341, "a-screening-design-that-checks-for-curvature"]], "ANOVA/regression tables": [[347, "anova-regression-tables"]], "API Reference": [[0, null]], "Affine": [[10, null]], "Alarm rules": [[348, "alarm-rules"]], "Analysing categorical data": [[347, "analysing-categorical-data"]], "Analysing residuals": [[347, "analysing-residuals"]], "Analysing results": [[343, "analysing-results"]], "Analysis of Variance (mqr.anova)": [[293, null]], "Analysis of variance (mqr.plot.anova)": [[332, null]], "Axial points": [[341, "axial-points"]], "Background": [[348, "background"]], "Basic Statistical Inference": [[342, null]], "Basic statistical inference (mqr.inference)": [[295, null]], "Basic statistical inference (mqr.inference.nonparametric)": [[296, null]], "Basics": [[344, "basics"]], "Box Plots": [[346, "box-plots"]], "Capability": [[153, null]], "Central composite design": [[341, "central-composite-design"]], "Checking the regression model": [[343, "checking-the-regression-model"]], "Colours": [[346, "colours"]], "Combining Elements": [[346, "combining-elements"]], "Combining rules": [[348, "combining-rules"]], "Confidence intervals": [[342, "confidence-intervals"]], "ConfidenceInterval": [[36, null]], "Control charts": [[348, "control-charts"]], "Control parameters": [[348, "control-parameters"]], "ControlParams": [[197, null]], "ControlStatistic": [[203, null]], "Controlling process": [[339, "controlling-process"]], "Correlation": [[349, "correlation"]], "Correlation matrix (mqr.plot.correlation)": [[333, null]], "Credit": [[2, "credit"]], "Custom designs": [[341, "custom-designs"]], "Custom rules": [[348, "custom-rules"]], "Customising MQR plots": [[345, null]], "Data Analysis": [[340, null]], "Data Handling": [[348, "data-handling"]], "Data transforms (mqr.transforms)": [[304, null]], "Defining a problem": [[339, "defining-a-problem"]], "Design": [[15, null]], "Design of Experiments": [[341, null]], "Design of Experiments (mqr.doe)": [[294, null]], "Directory": [[344, "directory"]], "Efficieny of estimates of process standard deviation": [[4, null]], "Elements": [[346, "elements"]], "Elements on the same axes": [[346, "elements-on-the-same-axes"]], "EwmaParams": [[206, null]], "Examples": [[295, "examples"], [336, "examples"]], "Experimental designs": [[341, "experimental-designs"]], "Experimental workflow": [[341, "experimental-workflow"]], "Figure": [[150, null]], "Figure context manager": [[344, "figure-context-manager"]], "Fishbone diagram": [[349, "fishbone-diagram"]], "Fractional factorial designs": [[341, "fractional-factorial-designs"]], "Full factorial designs": [[341, "full-factorial-designs"]], "GRR": [[126, null]], "Getting Started": [[1, null]], "Getting help": [[344, "getting-help"]], "Graphical summaries": [[349, "graphical-summaries"]], "Histograms": [[346, "histograms"]], "Historical vs. live data": [[348, "historical-vs-live-data"]], "Hypothesis testing and confidence intervals": [[340, "hypothesis-testing-and-confidence-intervals"]], "Hypothesis tests": [[342, "hypothesis-tests"]], "HypothesisTest": [[50, null]], "Imports": [[339, "imports"]], "Installation": [[1, "installation"]], "Interactions": [[347, "interactions"]], "Introduction": [[341, "introduction"]], "Legends": [[346, "legends"]], "License": [[2, "license"]], "Lines": [[346, "lines"], [346, "id1"]], "MQR": [[2, null]], "MQR notebook tools": [[344, "mqr-notebook-tools"]], "Main effects": [[347, "main-effects"]], "Making improvements": [[339, "making-improvements"]], "Markers": [[346, "markers"]], "Matplotlib figures and axes": [[344, "matplotlib-figures-and-axes"]], "Measurement System Analysis": [[343, null]], "Measurement and analysis": [[339, "measurement-and-analysis"]], "Measurement system analysis": [[340, "measurement-system-analysis"]], "Measurement system analysis (mqr.msa)": [[297, null]], "Measurement system analysis (mqr.plot.msa)": [[334, null]], "MewmaParams": [[220, null]], "Model means": [[347, "model-means"]], "Multiple axes": [[346, "multiple-axes"]], "Multiple plots": [[346, "multiple-plots"]], "NameMapping": [[137, null]], "Namespaces": [[0, "namespaces"]], "Notebook tools (mqr.nbtools)": [[298, null]], "Notes": [[3, null], [295, "notes"]], "Others": [[346, "others"]], "Plots": [[344, null]], "Plots (mqr.plot)": [[299, null]], "Plotting and notebook tools": [[339, "plotting-and-notebook-tools"]], "Plotting primer": [[346, null]], "Plotting tools (mqr.plot.tools)": [[338, null]], "Practicalities": [[341, "practicalities"]], "Predefined control parameters": [[348, "predefined-control-parameters"]], "Process Summary and Capability": [[349, null]], "Process and capability (mqr.plot.process)": [[335, null]], "Process summary and capability (mqr.process)": [[300, null]], "RParams": [[232, null]], "Randomisation": [[341, "randomisation"]], "References": [[4, "references"], [295, "references"], [341, "references"], [348, "references"]], "Regression analysis (mqr.plot.regression)": [[336, null]], "Regression and ANOVA": [[340, "regression-and-anova"], [347, null]], "Related classes": [[4, "related-classes"]], "Related plotting tools": [[0, "related-plotting-tools"]], "Replication": [[341, "replication"]], "Result types": [[342, "result-types"]], "SPC alarm rules (mqr.spc.rules)": [[302, null]], "SPC utilities (mqr.spc.util)": [[303, null]], "SParams": [[245, null]], "Sample": [[160, null]], "Sample size": [[342, "sample-size"]], "Saving ControlParams": [[348, "saving-controlparams"]], "Saving to a file": [[341, "saving-to-a-file"]], "Scales": [[346, "scales"]], "Setting up a problem": [[343, "setting-up-a-problem"]], "ShewhartParams": [[256, null]], "Specification": [[188, null]], "Specifications and capability": [[349, "specifications-and-capability"]], "Statistical Process Control": [[348, null]], "Statistical Process Control (mqr.spc)": [[301, null]], "Statistical process control (mqr.plot.spc)": [[337, null]], "Structure of the <tt>inference</tt> module": [[342, "structure-of-the-inference-module"]], "Styling": [[346, "styling"]], "Summary": [[192, null], [349, "summary"]], "Summary statistics": [[349, "summary-statistics"]], "TestPower": [[84, null]], "Titles, labels, ticks, limits and grids": [[346, "titles-labels-ticks-limits-and-grids"]], "Transform": [[34, null]], "Transforms": [[341, "transforms"]], "User Guide": [[339, null]], "VarianceTable": [[141, null]], "What MQR does": [[1, "what-mqr-does"]], "What\u2019s in MQR": [[1, "whats-in-mqr"]], "XBarParams": [[263, null]], "__call__": [[11, null]], "__getitem__": [[193, null]], "__len__": [[16, null]], "adequacy": [[5, null]], "alarm_subsets": [[282, null]], "alarms": [[327, null]], "aofb_nsigma": [[277, null]], "as_block": [[17, null]], "asdict": [[198, null], [208, null], [221, null], [233, null], [246, null], [257, null], [264, null]], "bar_var_pct": [[309, null]], "box_measurement_by_operator": [[310, null]], "box_measurement_by_part": [[311, null]], "c4": [[283, null]], "c4_fn": [[284, null]], "capability": [[316, null]], "chart": [[328, null]], "coeffs": [[6, null]], "combine": [[278, null]], "confint": [[45, null], [151, null]], "confint_1sample": [[62, null], [80, null], [93, null], [102, null], [111, null], [118, null]], "confint_2sample": [[63, null], [94, null], [103, null], [112, null], [119, null]], "confint_paired": [[64, null]], "correlation": [[44, null], [71, null]], "d2": [[285, null]], "d2_integral": [[286, null]], "d3": [[287, null]], "d3_integral": [[288, null]], "dist": [[48, null], [73, null]], "from_axial": [[19, null]], "from_ccdesign": [[20, null]], "from_centrepoints": [[21, null]], "from_data": [[209, null], [223, null], [235, null], [248, null], [266, null]], "from_fracfact": [[22, null]], "from_fullfact": [[23, null]], "from_levels": [[24, null]], "from_map": [[12, null], [35, null]], "from_range": [[236, null], [267, null]], "from_stddev": [[210, null], [268, null]], "get_factor_df": [[25, null]], "grab_figure": [[147, null]], "group_consecutives": [[289, null]], "groups": [[7, null]], "grr": [[312, null]], "hstack": [[148, null]], "influence": [[320, null]], "interactions": [[8, null], [305, null]], "ishikawa": [[152, null]], "lcl": [[199, null], [211, null], [224, null], [237, null], [249, null], [258, null], [269, null]], "limits": [[279, null]], "line_part_operator_intn": [[313, null]], "main_effects": [[306, null]], "matrix": [[308, null]], "mean": [[61, null]], "median": [[76, null]], "model_means": [[307, null]], "mqr.doe.Affine.scale": [[13, null]], "mqr.doe.Affine.translate": [[14, null]], "mqr.doe.Design.blocks": [[18, null]], "mqr.doe.Design.levels": [[26, null]], "mqr.doe.Design.names": [[27, null]], "mqr.doe.Design.pttypes": [[28, null]], "mqr.doe.Design.runs": [[31, null]], "mqr.inference.confint.ConfidenceInterval.bounded": [[37, null]], "mqr.inference.confint.ConfidenceInterval.conf": [[38, null]], "mqr.inference.confint.ConfidenceInterval.lower": [[39, null]], "mqr.inference.confint.ConfidenceInterval.method": [[40, null]], "mqr.inference.confint.ConfidenceInterval.name": [[41, null]], "mqr.inference.confint.ConfidenceInterval.upper": [[42, null]], "mqr.inference.confint.ConfidenceInterval.value": [[43, null]], "mqr.inference.hyptest.HypothesisTest.alt": [[51, null]], "mqr.inference.hyptest.HypothesisTest.alternative": [[52, null]], "mqr.inference.hyptest.HypothesisTest.description": [[53, null]], "mqr.inference.hyptest.HypothesisTest.method": [[54, null]], "mqr.inference.hyptest.HypothesisTest.null": [[55, null]], "mqr.inference.hyptest.HypothesisTest.pvalue": [[56, null]], "mqr.inference.hyptest.HypothesisTest.sample_stat": [[57, null]], "mqr.inference.hyptest.HypothesisTest.sample_stat_target": [[58, null]], "mqr.inference.hyptest.HypothesisTest.sample_stat_value": [[59, null]], "mqr.inference.hyptest.HypothesisTest.stat": [[60, null]], "mqr.inference.power.TestPower.alpha": [[85, null]], "mqr.inference.power.TestPower.alternative": [[86, null]], "mqr.inference.power.TestPower.beta": [[87, null]], "mqr.inference.power.TestPower.effect": [[88, null]], "mqr.inference.power.TestPower.method": [[89, null]], "mqr.inference.power.TestPower.name": [[90, null]], "mqr.inference.power.TestPower.sample_size": [[91, null]], "mqr.msa.GRR.counts": [[127, null]], "mqr.msa.GRR.data": [[128, null]], "mqr.msa.GRR.formula": [[129, null]], "mqr.msa.GRR.include_interaction": [[130, null]], "mqr.msa.GRR.include_intercept": [[131, null]], "mqr.msa.GRR.model": [[132, null]], "mqr.msa.GRR.names": [[133, null]], "mqr.msa.GRR.nsigma": [[134, null]], "mqr.msa.GRR.regression_result": [[135, null]], "mqr.msa.GRR.tolerance": [[136, null]], "mqr.msa.NameMapping.measurement": [[138, null]], "mqr.msa.NameMapping.operator": [[139, null]], "mqr.msa.NameMapping.part": [[140, null]], "mqr.msa.VarianceTable.anova_table": [[142, null]], "mqr.msa.VarianceTable.discrimination": [[143, null]], "mqr.msa.VarianceTable.grr": [[144, null]], "mqr.msa.VarianceTable.num_distinct_cats": [[145, null]], "mqr.msa.VarianceTable.table": [[146, null]], "mqr.process.Capability.cp": [[154, null]], "mqr.process.Capability.cpk": [[155, null]], "mqr.process.Capability.defects_lt": [[156, null]], "mqr.process.Capability.defects_st": [[157, null]], "mqr.process.Capability.sample": [[158, null]], "mqr.process.Capability.spec": [[159, null]], "mqr.process.Sample.ad_pvalue": [[161, null]], "mqr.process.Sample.ad_stat": [[162, null]], "mqr.process.Sample.conf": [[163, null]], "mqr.process.Sample.conf_mean": [[164, null]], "mqr.process.Sample.conf_median": [[165, null]], "mqr.process.Sample.conf_quartile1": [[166, null]], "mqr.process.Sample.conf_quartile3": [[167, null]], "mqr.process.Sample.conf_std": [[168, null]], "mqr.process.Sample.conf_var": [[169, null]], "mqr.process.Sample.data": [[170, null]], "mqr.process.Sample.iqr": [[171, null]], "mqr.process.Sample.ks_pvalue": [[172, null]], "mqr.process.Sample.ks_stat": [[173, null]], "mqr.process.Sample.kurtosis": [[174, null]], "mqr.process.Sample.maximum": [[175, null]], "mqr.process.Sample.mean": [[176, null]], "mqr.process.Sample.median": [[177, null]], "mqr.process.Sample.minimum": [[178, null]], "mqr.process.Sample.name": [[179, null]], "mqr.process.Sample.nobs": [[180, null]], "mqr.process.Sample.outliers": [[181, null]], "mqr.process.Sample.quartile1": [[182, null]], "mqr.process.Sample.quartile3": [[183, null]], "mqr.process.Sample.sem": [[184, null]], "mqr.process.Sample.skewness": [[185, null]], "mqr.process.Sample.std": [[186, null]], "mqr.process.Sample.var": [[187, null]], "mqr.process.Specification.lsl": [[189, null]], "mqr.process.Specification.target": [[190, null]], "mqr.process.Specification.usl": [[191, null]], "mqr.process.Summary.capabilities": [[194, null]], "mqr.process.Summary.data": [[195, null]], "mqr.process.Summary.samples": [[196, null]], "mqr.spc.ControlStatistic.nobs": [[204, null]], "mqr.spc.ControlStatistic.stat": [[205, null]], "mqr.spc.EwmaParams.L": [[207, null]], "mqr.spc.EwmaParams.lmda": [[212, null]], "mqr.spc.EwmaParams.mu_0": [[213, null]], "mqr.spc.EwmaParams.name": [[214, null]], "mqr.spc.EwmaParams.sigma": [[215, null]], "mqr.spc.EwmaParams.steady_state": [[217, null]], "mqr.spc.MewmaParams.cov": [[222, null]], "mqr.spc.MewmaParams.limit": [[225, null]], "mqr.spc.MewmaParams.lmda": [[226, null]], "mqr.spc.MewmaParams.mu": [[227, null]], "mqr.spc.MewmaParams.name": [[228, null]], "mqr.spc.RParams.centre": [[234, null]], "mqr.spc.RParams.name": [[238, null]], "mqr.spc.RParams.nsigma": [[239, null]], "mqr.spc.RParams.sigma": [[241, null]], "mqr.spc.SParams.centre": [[247, null]], "mqr.spc.SParams.name": [[250, null]], "mqr.spc.SParams.nsigma": [[251, null]], "mqr.spc.XBarParams.centre": [[265, null]], "mqr.spc.XBarParams.name": [[270, null]], "mqr.spc.XBarParams.nsigma": [[271, null]], "mqr.spc.XBarParams.sigma": [[273, null]], "n_1side": [[280, null]], "n_trending": [[281, null]], "oc": [[329, null]], "pdf": [[317, null]], "power_1sample": [[95, null], [104, null], [120, null]], "power_2sample": [[96, null], [105, null], [121, null]], "proportion": [[92, null]], "quantile": [[79, null]], "r_operator": [[314, null]], "randomise_runs": [[29, null]], "rate": [[101, null]], "replicate": [[30, null]], "res_histogram": [[321, null]], "res_probplot": [[322, null]], "res_v_factor": [[323, null]], "res_v_fit": [[324, null]], "res_v_obs": [[325, null]], "residuals": [[326, null]], "se": [[240, null], [252, null], [259, null], [272, null]], "sharex": [[330, null]], "sharey": [[331, null]], "size_1sample": [[65, null], [97, null], [106, null], [113, null], [122, null]], "size_2sample": [[66, null], [98, null], [107, null], [114, null], [123, null]], "size_paired": [[67, null]], "solve_arl": [[290, null]], "solve_h4": [[291, null]], "statistic": [[200, null], [216, null], [229, null], [242, null], [253, null], [260, null], [274, null]], "stddev": [[110, null]], "summary": [[9, null], [318, null]], "target": [[201, null], [218, null], [230, null], [243, null], [254, null], [261, null], [275, null]], "test": [[46, null], [72, null]], "test_1sample": [[49, null], [68, null], [74, null], [77, null], [81, null], [99, null], [108, null], [115, null], [124, null]], "test_2sample": [[69, null], [75, null], [100, null], [109, null], [116, null], [125, null]], "test_diff": [[47, null]], "test_nsample": [[78, null], [83, null]], "test_paired": [[70, null]], "to_df": [[32, null]], "tolerance": [[319, null]], "transform": [[33, null]], "ucl": [[202, null], [219, null], [231, null], [244, null], [255, null], [262, null], [276, null]], "variance": [[82, null], [117, null]], "vstack": [[149, null]], "xbar_operator": [[315, null]], "zscore": [[292, null]]}, "docnames": ["api-ref", "getting-started", "index", "notes/notes", "notes/stddev-efficiency", "reference/generated/mqr.anova.adequacy", "reference/generated/mqr.anova.coeffs", "reference/generated/mqr.anova.groups", "reference/generated/mqr.anova.interactions", "reference/generated/mqr.anova.summary", "reference/generated/mqr.doe.Affine", "reference/generated/mqr.doe.Affine.__call__", "reference/generated/mqr.doe.Affine.from_map", "reference/generated/mqr.doe.Affine.scale", "reference/generated/mqr.doe.Affine.translate", "reference/generated/mqr.doe.Design", "reference/generated/mqr.doe.Design.__len__", "reference/generated/mqr.doe.Design.as_block", "reference/generated/mqr.doe.Design.blocks", "reference/generated/mqr.doe.Design.from_axial", "reference/generated/mqr.doe.Design.from_ccdesign", "reference/generated/mqr.doe.Design.from_centrepoints", "reference/generated/mqr.doe.Design.from_fracfact", "reference/generated/mqr.doe.Design.from_fullfact", "reference/generated/mqr.doe.Design.from_levels", "reference/generated/mqr.doe.Design.get_factor_df", "reference/generated/mqr.doe.Design.levels", "reference/generated/mqr.doe.Design.names", "reference/generated/mqr.doe.Design.pttypes", "reference/generated/mqr.doe.Design.randomise_runs", "reference/generated/mqr.doe.Design.replicate", "reference/generated/mqr.doe.Design.runs", "reference/generated/mqr.doe.Design.to_df", "reference/generated/mqr.doe.Design.transform", "reference/generated/mqr.doe.Transform", "reference/generated/mqr.doe.Transform.from_map", "reference/generated/mqr.inference.confint.ConfidenceInterval", "reference/generated/mqr.inference.confint.ConfidenceInterval.bounded", "reference/generated/mqr.inference.confint.ConfidenceInterval.conf", "reference/generated/mqr.inference.confint.ConfidenceInterval.lower", "reference/generated/mqr.inference.confint.ConfidenceInterval.method", "reference/generated/mqr.inference.confint.ConfidenceInterval.name", "reference/generated/mqr.inference.confint.ConfidenceInterval.upper", "reference/generated/mqr.inference.confint.ConfidenceInterval.value", "reference/generated/mqr.inference.correlation", "reference/generated/mqr.inference.correlation.confint", "reference/generated/mqr.inference.correlation.test", "reference/generated/mqr.inference.correlation.test_diff", "reference/generated/mqr.inference.dist", "reference/generated/mqr.inference.dist.test_1sample", "reference/generated/mqr.inference.hyptest.HypothesisTest", "reference/generated/mqr.inference.hyptest.HypothesisTest.alt", "reference/generated/mqr.inference.hyptest.HypothesisTest.alternative", "reference/generated/mqr.inference.hyptest.HypothesisTest.description", "reference/generated/mqr.inference.hyptest.HypothesisTest.method", "reference/generated/mqr.inference.hyptest.HypothesisTest.null", "reference/generated/mqr.inference.hyptest.HypothesisTest.pvalue", "reference/generated/mqr.inference.hyptest.HypothesisTest.sample_stat", "reference/generated/mqr.inference.hyptest.HypothesisTest.sample_stat_target", "reference/generated/mqr.inference.hyptest.HypothesisTest.sample_stat_value", "reference/generated/mqr.inference.hyptest.HypothesisTest.stat", "reference/generated/mqr.inference.mean", "reference/generated/mqr.inference.mean.confint_1sample", "reference/generated/mqr.inference.mean.confint_2sample", "reference/generated/mqr.inference.mean.confint_paired", "reference/generated/mqr.inference.mean.size_1sample", "reference/generated/mqr.inference.mean.size_2sample", "reference/generated/mqr.inference.mean.size_paired", "reference/generated/mqr.inference.mean.test_1sample", "reference/generated/mqr.inference.mean.test_2sample", "reference/generated/mqr.inference.mean.test_paired", "reference/generated/mqr.inference.nonparametric.correlation", "reference/generated/mqr.inference.nonparametric.correlation.test", "reference/generated/mqr.inference.nonparametric.dist", "reference/generated/mqr.inference.nonparametric.dist.test_1sample", "reference/generated/mqr.inference.nonparametric.dist.test_2sample", "reference/generated/mqr.inference.nonparametric.median", "reference/generated/mqr.inference.nonparametric.median.test_1sample", "reference/generated/mqr.inference.nonparametric.median.test_nsample", "reference/generated/mqr.inference.nonparametric.quantile", "reference/generated/mqr.inference.nonparametric.quantile.confint_1sample", "reference/generated/mqr.inference.nonparametric.quantile.test_1sample", "reference/generated/mqr.inference.nonparametric.variance", "reference/generated/mqr.inference.nonparametric.variance.test_nsample", "reference/generated/mqr.inference.power.TestPower", "reference/generated/mqr.inference.power.TestPower.alpha", "reference/generated/mqr.inference.power.TestPower.alternative", "reference/generated/mqr.inference.power.TestPower.beta", "reference/generated/mqr.inference.power.TestPower.effect", "reference/generated/mqr.inference.power.TestPower.method", "reference/generated/mqr.inference.power.TestPower.name", "reference/generated/mqr.inference.power.TestPower.sample_size", "reference/generated/mqr.inference.proportion", "reference/generated/mqr.inference.proportion.confint_1sample", "reference/generated/mqr.inference.proportion.confint_2sample", "reference/generated/mqr.inference.proportion.power_1sample", "reference/generated/mqr.inference.proportion.power_2sample", "reference/generated/mqr.inference.proportion.size_1sample", "reference/generated/mqr.inference.proportion.size_2sample", "reference/generated/mqr.inference.proportion.test_1sample", "reference/generated/mqr.inference.proportion.test_2sample", "reference/generated/mqr.inference.rate", "reference/generated/mqr.inference.rate.confint_1sample", "reference/generated/mqr.inference.rate.confint_2sample", "reference/generated/mqr.inference.rate.power_1sample", "reference/generated/mqr.inference.rate.power_2sample", "reference/generated/mqr.inference.rate.size_1sample", "reference/generated/mqr.inference.rate.size_2sample", "reference/generated/mqr.inference.rate.test_1sample", "reference/generated/mqr.inference.rate.test_2sample", "reference/generated/mqr.inference.stddev", "reference/generated/mqr.inference.stddev.confint_1sample", "reference/generated/mqr.inference.stddev.confint_2sample", "reference/generated/mqr.inference.stddev.size_1sample", "reference/generated/mqr.inference.stddev.size_2sample", "reference/generated/mqr.inference.stddev.test_1sample", "reference/generated/mqr.inference.stddev.test_2sample", "reference/generated/mqr.inference.variance", "reference/generated/mqr.inference.variance.confint_1sample", "reference/generated/mqr.inference.variance.confint_2sample", "reference/generated/mqr.inference.variance.power_1sample", "reference/generated/mqr.inference.variance.power_2sample", "reference/generated/mqr.inference.variance.size_1sample", "reference/generated/mqr.inference.variance.size_2sample", "reference/generated/mqr.inference.variance.test_1sample", "reference/generated/mqr.inference.variance.test_2sample", "reference/generated/mqr.msa.GRR", "reference/generated/mqr.msa.GRR.counts", "reference/generated/mqr.msa.GRR.data", "reference/generated/mqr.msa.GRR.formula", "reference/generated/mqr.msa.GRR.include_interaction", "reference/generated/mqr.msa.GRR.include_intercept", "reference/generated/mqr.msa.GRR.model", "reference/generated/mqr.msa.GRR.names", "reference/generated/mqr.msa.GRR.nsigma", "reference/generated/mqr.msa.GRR.regression_result", "reference/generated/mqr.msa.GRR.tolerance", "reference/generated/mqr.msa.NameMapping", "reference/generated/mqr.msa.NameMapping.measurement", "reference/generated/mqr.msa.NameMapping.operator", "reference/generated/mqr.msa.NameMapping.part", "reference/generated/mqr.msa.VarianceTable", "reference/generated/mqr.msa.VarianceTable.anova_table", "reference/generated/mqr.msa.VarianceTable.discrimination", "reference/generated/mqr.msa.VarianceTable.grr", "reference/generated/mqr.msa.VarianceTable.num_distinct_cats", "reference/generated/mqr.msa.VarianceTable.table", "reference/generated/mqr.nbtools.grab_figure", "reference/generated/mqr.nbtools.hstack", "reference/generated/mqr.nbtools.vstack", "reference/generated/mqr.plot.Figure", "reference/generated/mqr.plot.confint", "reference/generated/mqr.plot.ishikawa", "reference/generated/mqr.process.Capability", "reference/generated/mqr.process.Capability.cp", "reference/generated/mqr.process.Capability.cpk", "reference/generated/mqr.process.Capability.defects_lt", "reference/generated/mqr.process.Capability.defects_st", "reference/generated/mqr.process.Capability.sample", "reference/generated/mqr.process.Capability.spec", "reference/generated/mqr.process.Sample", "reference/generated/mqr.process.Sample.ad_pvalue", "reference/generated/mqr.process.Sample.ad_stat", "reference/generated/mqr.process.Sample.conf", "reference/generated/mqr.process.Sample.conf_mean", "reference/generated/mqr.process.Sample.conf_median", "reference/generated/mqr.process.Sample.conf_quartile1", "reference/generated/mqr.process.Sample.conf_quartile3", "reference/generated/mqr.process.Sample.conf_std", "reference/generated/mqr.process.Sample.conf_var", "reference/generated/mqr.process.Sample.data", "reference/generated/mqr.process.Sample.iqr", "reference/generated/mqr.process.Sample.ks_pvalue", "reference/generated/mqr.process.Sample.ks_stat", "reference/generated/mqr.process.Sample.kurtosis", "reference/generated/mqr.process.Sample.maximum", "reference/generated/mqr.process.Sample.mean", "reference/generated/mqr.process.Sample.median", "reference/generated/mqr.process.Sample.minimum", "reference/generated/mqr.process.Sample.name", "reference/generated/mqr.process.Sample.nobs", "reference/generated/mqr.process.Sample.outliers", "reference/generated/mqr.process.Sample.quartile1", "reference/generated/mqr.process.Sample.quartile3", "reference/generated/mqr.process.Sample.sem", "reference/generated/mqr.process.Sample.skewness", "reference/generated/mqr.process.Sample.std", "reference/generated/mqr.process.Sample.var", "reference/generated/mqr.process.Specification", "reference/generated/mqr.process.Specification.lsl", "reference/generated/mqr.process.Specification.target", "reference/generated/mqr.process.Specification.usl", "reference/generated/mqr.process.Summary", "reference/generated/mqr.process.Summary.__getitem__", "reference/generated/mqr.process.Summary.capabilities", "reference/generated/mqr.process.Summary.data", "reference/generated/mqr.process.Summary.samples", "reference/generated/mqr.spc.ControlParams", "reference/generated/mqr.spc.ControlParams.asdict", "reference/generated/mqr.spc.ControlParams.lcl", "reference/generated/mqr.spc.ControlParams.statistic", "reference/generated/mqr.spc.ControlParams.target", "reference/generated/mqr.spc.ControlParams.ucl", "reference/generated/mqr.spc.ControlStatistic", "reference/generated/mqr.spc.ControlStatistic.nobs", "reference/generated/mqr.spc.ControlStatistic.stat", "reference/generated/mqr.spc.EwmaParams", "reference/generated/mqr.spc.EwmaParams.L", "reference/generated/mqr.spc.EwmaParams.asdict", "reference/generated/mqr.spc.EwmaParams.from_data", "reference/generated/mqr.spc.EwmaParams.from_stddev", "reference/generated/mqr.spc.EwmaParams.lcl", "reference/generated/mqr.spc.EwmaParams.lmda", "reference/generated/mqr.spc.EwmaParams.mu_0", "reference/generated/mqr.spc.EwmaParams.name", "reference/generated/mqr.spc.EwmaParams.sigma", "reference/generated/mqr.spc.EwmaParams.statistic", "reference/generated/mqr.spc.EwmaParams.steady_state", "reference/generated/mqr.spc.EwmaParams.target", "reference/generated/mqr.spc.EwmaParams.ucl", "reference/generated/mqr.spc.MewmaParams", "reference/generated/mqr.spc.MewmaParams.asdict", "reference/generated/mqr.spc.MewmaParams.cov", "reference/generated/mqr.spc.MewmaParams.from_data", "reference/generated/mqr.spc.MewmaParams.lcl", "reference/generated/mqr.spc.MewmaParams.limit", "reference/generated/mqr.spc.MewmaParams.lmda", "reference/generated/mqr.spc.MewmaParams.mu", "reference/generated/mqr.spc.MewmaParams.name", "reference/generated/mqr.spc.MewmaParams.statistic", "reference/generated/mqr.spc.MewmaParams.target", "reference/generated/mqr.spc.MewmaParams.ucl", "reference/generated/mqr.spc.RParams", "reference/generated/mqr.spc.RParams.asdict", "reference/generated/mqr.spc.RParams.centre", "reference/generated/mqr.spc.RParams.from_data", "reference/generated/mqr.spc.RParams.from_range", "reference/generated/mqr.spc.RParams.lcl", "reference/generated/mqr.spc.RParams.name", "reference/generated/mqr.spc.RParams.nsigma", "reference/generated/mqr.spc.RParams.se", "reference/generated/mqr.spc.RParams.sigma", "reference/generated/mqr.spc.RParams.statistic", "reference/generated/mqr.spc.RParams.target", "reference/generated/mqr.spc.RParams.ucl", "reference/generated/mqr.spc.SParams", "reference/generated/mqr.spc.SParams.asdict", "reference/generated/mqr.spc.SParams.centre", "reference/generated/mqr.spc.SParams.from_data", "reference/generated/mqr.spc.SParams.lcl", "reference/generated/mqr.spc.SParams.name", "reference/generated/mqr.spc.SParams.nsigma", "reference/generated/mqr.spc.SParams.se", "reference/generated/mqr.spc.SParams.statistic", "reference/generated/mqr.spc.SParams.target", "reference/generated/mqr.spc.SParams.ucl", "reference/generated/mqr.spc.ShewhartParams", "reference/generated/mqr.spc.ShewhartParams.asdict", "reference/generated/mqr.spc.ShewhartParams.lcl", "reference/generated/mqr.spc.ShewhartParams.se", "reference/generated/mqr.spc.ShewhartParams.statistic", "reference/generated/mqr.spc.ShewhartParams.target", "reference/generated/mqr.spc.ShewhartParams.ucl", "reference/generated/mqr.spc.XBarParams", "reference/generated/mqr.spc.XBarParams.asdict", "reference/generated/mqr.spc.XBarParams.centre", "reference/generated/mqr.spc.XBarParams.from_data", "reference/generated/mqr.spc.XBarParams.from_range", "reference/generated/mqr.spc.XBarParams.from_stddev", "reference/generated/mqr.spc.XBarParams.lcl", "reference/generated/mqr.spc.XBarParams.name", "reference/generated/mqr.spc.XBarParams.nsigma", "reference/generated/mqr.spc.XBarParams.se", "reference/generated/mqr.spc.XBarParams.sigma", "reference/generated/mqr.spc.XBarParams.statistic", "reference/generated/mqr.spc.XBarParams.target", "reference/generated/mqr.spc.XBarParams.ucl", "reference/generated/mqr.spc.rules.aofb_nsigma", "reference/generated/mqr.spc.rules.combine", "reference/generated/mqr.spc.rules.limits", "reference/generated/mqr.spc.rules.n_1side", "reference/generated/mqr.spc.rules.n_trending", "reference/generated/mqr.spc.util.alarm_subsets", "reference/generated/mqr.spc.util.c4", "reference/generated/mqr.spc.util.c4_fn", "reference/generated/mqr.spc.util.d2", "reference/generated/mqr.spc.util.d2_integral", "reference/generated/mqr.spc.util.d3", "reference/generated/mqr.spc.util.d3_integral", "reference/generated/mqr.spc.util.group_consecutives", "reference/generated/mqr.spc.util.solve_arl", "reference/generated/mqr.spc.util.solve_h4", "reference/generated/mqr.transforms.zscore", "reference/mqr.anova", "reference/mqr.doe", "reference/mqr.inference", "reference/mqr.inference.nonparametric", "reference/mqr.msa", "reference/mqr.nbtools", "reference/mqr.plot", "reference/mqr.process", "reference/mqr.spc", "reference/mqr.spc.rules", "reference/mqr.spc.util", "reference/mqr.transforms", "reference/plot/generated/mqr.plot.anova.interactions", "reference/plot/generated/mqr.plot.anova.main_effects", "reference/plot/generated/mqr.plot.anova.model_means", "reference/plot/generated/mqr.plot.correlation.matrix", "reference/plot/generated/mqr.plot.msa.bar_var_pct", "reference/plot/generated/mqr.plot.msa.box_measurement_by_operator", "reference/plot/generated/mqr.plot.msa.box_measurement_by_part", "reference/plot/generated/mqr.plot.msa.grr", "reference/plot/generated/mqr.plot.msa.line_part_operator_intn", "reference/plot/generated/mqr.plot.msa.r_operator", "reference/plot/generated/mqr.plot.msa.xbar_operator", "reference/plot/generated/mqr.plot.process.capability", "reference/plot/generated/mqr.plot.process.pdf", "reference/plot/generated/mqr.plot.process.summary", "reference/plot/generated/mqr.plot.process.tolerance", "reference/plot/generated/mqr.plot.regression.influence", "reference/plot/generated/mqr.plot.regression.res_histogram", "reference/plot/generated/mqr.plot.regression.res_probplot", "reference/plot/generated/mqr.plot.regression.res_v_factor", "reference/plot/generated/mqr.plot.regression.res_v_fit", "reference/plot/generated/mqr.plot.regression.res_v_obs", "reference/plot/generated/mqr.plot.regression.residuals", "reference/plot/generated/mqr.plot.spc.alarms", "reference/plot/generated/mqr.plot.spc.chart", "reference/plot/generated/mqr.plot.spc.oc", "reference/plot/generated/mqr.plot.tools.sharex", "reference/plot/generated/mqr.plot.tools.sharey", "reference/plot/mqr.plot.anova", "reference/plot/mqr.plot.correlation", "reference/plot/mqr.plot.msa", "reference/plot/mqr.plot.process", "reference/plot/mqr.plot.regression", "reference/plot/mqr.plot.spc", "reference/plot/mqr.plot.tools", "user-guide", "user_guide/data-analysis", "user_guide/design-of-experiments", "user_guide/inference", "user_guide/measurement-system-analysis", "user_guide/plots", "user_guide/plotting-customisation", "user_guide/plotting-primer", "user_guide/regression-anova", "user_guide/statistical-process-control", "user_guide/summary-capability"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api-ref.rst", "getting-started.md", "index.rst", "notes/notes.md", "notes/stddev-efficiency.md", "reference/generated/mqr.anova.adequacy.rst", "reference/generated/mqr.anova.coeffs.rst", "reference/generated/mqr.anova.groups.rst", "reference/generated/mqr.anova.interactions.rst", "reference/generated/mqr.anova.summary.rst", "reference/generated/mqr.doe.Affine.rst", "reference/generated/mqr.doe.Affine.__call__.rst", "reference/generated/mqr.doe.Affine.from_map.rst", "reference/generated/mqr.doe.Affine.scale.rst", "reference/generated/mqr.doe.Affine.translate.rst", "reference/generated/mqr.doe.Design.rst", "reference/generated/mqr.doe.Design.__len__.rst", "reference/generated/mqr.doe.Design.as_block.rst", "reference/generated/mqr.doe.Design.blocks.rst", "reference/generated/mqr.doe.Design.from_axial.rst", "reference/generated/mqr.doe.Design.from_ccdesign.rst", "reference/generated/mqr.doe.Design.from_centrepoints.rst", "reference/generated/mqr.doe.Design.from_fracfact.rst", "reference/generated/mqr.doe.Design.from_fullfact.rst", "reference/generated/mqr.doe.Design.from_levels.rst", "reference/generated/mqr.doe.Design.get_factor_df.rst", "reference/generated/mqr.doe.Design.levels.rst", "reference/generated/mqr.doe.Design.names.rst", "reference/generated/mqr.doe.Design.pttypes.rst", "reference/generated/mqr.doe.Design.randomise_runs.rst", "reference/generated/mqr.doe.Design.replicate.rst", "reference/generated/mqr.doe.Design.runs.rst", "reference/generated/mqr.doe.Design.to_df.rst", "reference/generated/mqr.doe.Design.transform.rst", "reference/generated/mqr.doe.Transform.rst", "reference/generated/mqr.doe.Transform.from_map.rst", "reference/generated/mqr.inference.confint.ConfidenceInterval.rst", "reference/generated/mqr.inference.confint.ConfidenceInterval.bounded.rst", "reference/generated/mqr.inference.confint.ConfidenceInterval.conf.rst", "reference/generated/mqr.inference.confint.ConfidenceInterval.lower.rst", "reference/generated/mqr.inference.confint.ConfidenceInterval.method.rst", "reference/generated/mqr.inference.confint.ConfidenceInterval.name.rst", "reference/generated/mqr.inference.confint.ConfidenceInterval.upper.rst", "reference/generated/mqr.inference.confint.ConfidenceInterval.value.rst", "reference/generated/mqr.inference.correlation.rst", "reference/generated/mqr.inference.correlation.confint.rst", "reference/generated/mqr.inference.correlation.test.rst", "reference/generated/mqr.inference.correlation.test_diff.rst", "reference/generated/mqr.inference.dist.rst", "reference/generated/mqr.inference.dist.test_1sample.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.alt.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.alternative.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.description.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.method.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.null.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.pvalue.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.sample_stat.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.sample_stat_target.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.sample_stat_value.rst", "reference/generated/mqr.inference.hyptest.HypothesisTest.stat.rst", "reference/generated/mqr.inference.mean.rst", "reference/generated/mqr.inference.mean.confint_1sample.rst", "reference/generated/mqr.inference.mean.confint_2sample.rst", "reference/generated/mqr.inference.mean.confint_paired.rst", "reference/generated/mqr.inference.mean.size_1sample.rst", "reference/generated/mqr.inference.mean.size_2sample.rst", "reference/generated/mqr.inference.mean.size_paired.rst", "reference/generated/mqr.inference.mean.test_1sample.rst", "reference/generated/mqr.inference.mean.test_2sample.rst", "reference/generated/mqr.inference.mean.test_paired.rst", "reference/generated/mqr.inference.nonparametric.correlation.rst", "reference/generated/mqr.inference.nonparametric.correlation.test.rst", "reference/generated/mqr.inference.nonparametric.dist.rst", "reference/generated/mqr.inference.nonparametric.dist.test_1sample.rst", "reference/generated/mqr.inference.nonparametric.dist.test_2sample.rst", "reference/generated/mqr.inference.nonparametric.median.rst", "reference/generated/mqr.inference.nonparametric.median.test_1sample.rst", "reference/generated/mqr.inference.nonparametric.median.test_nsample.rst", "reference/generated/mqr.inference.nonparametric.quantile.rst", "reference/generated/mqr.inference.nonparametric.quantile.confint_1sample.rst", "reference/generated/mqr.inference.nonparametric.quantile.test_1sample.rst", "reference/generated/mqr.inference.nonparametric.variance.rst", "reference/generated/mqr.inference.nonparametric.variance.test_nsample.rst", "reference/generated/mqr.inference.power.TestPower.rst", "reference/generated/mqr.inference.power.TestPower.alpha.rst", "reference/generated/mqr.inference.power.TestPower.alternative.rst", "reference/generated/mqr.inference.power.TestPower.beta.rst", "reference/generated/mqr.inference.power.TestPower.effect.rst", "reference/generated/mqr.inference.power.TestPower.method.rst", "reference/generated/mqr.inference.power.TestPower.name.rst", "reference/generated/mqr.inference.power.TestPower.sample_size.rst", "reference/generated/mqr.inference.proportion.rst", "reference/generated/mqr.inference.proportion.confint_1sample.rst", "reference/generated/mqr.inference.proportion.confint_2sample.rst", "reference/generated/mqr.inference.proportion.power_1sample.rst", "reference/generated/mqr.inference.proportion.power_2sample.rst", "reference/generated/mqr.inference.proportion.size_1sample.rst", "reference/generated/mqr.inference.proportion.size_2sample.rst", "reference/generated/mqr.inference.proportion.test_1sample.rst", "reference/generated/mqr.inference.proportion.test_2sample.rst", "reference/generated/mqr.inference.rate.rst", "reference/generated/mqr.inference.rate.confint_1sample.rst", "reference/generated/mqr.inference.rate.confint_2sample.rst", "reference/generated/mqr.inference.rate.power_1sample.rst", "reference/generated/mqr.inference.rate.power_2sample.rst", "reference/generated/mqr.inference.rate.size_1sample.rst", "reference/generated/mqr.inference.rate.size_2sample.rst", "reference/generated/mqr.inference.rate.test_1sample.rst", "reference/generated/mqr.inference.rate.test_2sample.rst", "reference/generated/mqr.inference.stddev.rst", "reference/generated/mqr.inference.stddev.confint_1sample.rst", "reference/generated/mqr.inference.stddev.confint_2sample.rst", "reference/generated/mqr.inference.stddev.size_1sample.rst", "reference/generated/mqr.inference.stddev.size_2sample.rst", "reference/generated/mqr.inference.stddev.test_1sample.rst", "reference/generated/mqr.inference.stddev.test_2sample.rst", "reference/generated/mqr.inference.variance.rst", "reference/generated/mqr.inference.variance.confint_1sample.rst", "reference/generated/mqr.inference.variance.confint_2sample.rst", "reference/generated/mqr.inference.variance.power_1sample.rst", "reference/generated/mqr.inference.variance.power_2sample.rst", "reference/generated/mqr.inference.variance.size_1sample.rst", "reference/generated/mqr.inference.variance.size_2sample.rst", "reference/generated/mqr.inference.variance.test_1sample.rst", "reference/generated/mqr.inference.variance.test_2sample.rst", "reference/generated/mqr.msa.GRR.rst", "reference/generated/mqr.msa.GRR.counts.rst", "reference/generated/mqr.msa.GRR.data.rst", "reference/generated/mqr.msa.GRR.formula.rst", "reference/generated/mqr.msa.GRR.include_interaction.rst", "reference/generated/mqr.msa.GRR.include_intercept.rst", "reference/generated/mqr.msa.GRR.model.rst", "reference/generated/mqr.msa.GRR.names.rst", "reference/generated/mqr.msa.GRR.nsigma.rst", "reference/generated/mqr.msa.GRR.regression_result.rst", "reference/generated/mqr.msa.GRR.tolerance.rst", "reference/generated/mqr.msa.NameMapping.rst", "reference/generated/mqr.msa.NameMapping.measurement.rst", "reference/generated/mqr.msa.NameMapping.operator.rst", "reference/generated/mqr.msa.NameMapping.part.rst", "reference/generated/mqr.msa.VarianceTable.rst", "reference/generated/mqr.msa.VarianceTable.anova_table.rst", "reference/generated/mqr.msa.VarianceTable.discrimination.rst", "reference/generated/mqr.msa.VarianceTable.grr.rst", "reference/generated/mqr.msa.VarianceTable.num_distinct_cats.rst", "reference/generated/mqr.msa.VarianceTable.table.rst", "reference/generated/mqr.nbtools.grab_figure.rst", "reference/generated/mqr.nbtools.hstack.rst", "reference/generated/mqr.nbtools.vstack.rst", "reference/generated/mqr.plot.Figure.rst", "reference/generated/mqr.plot.confint.rst", "reference/generated/mqr.plot.ishikawa.rst", "reference/generated/mqr.process.Capability.rst", "reference/generated/mqr.process.Capability.cp.rst", "reference/generated/mqr.process.Capability.cpk.rst", "reference/generated/mqr.process.Capability.defects_lt.rst", "reference/generated/mqr.process.Capability.defects_st.rst", "reference/generated/mqr.process.Capability.sample.rst", "reference/generated/mqr.process.Capability.spec.rst", "reference/generated/mqr.process.Sample.rst", "reference/generated/mqr.process.Sample.ad_pvalue.rst", "reference/generated/mqr.process.Sample.ad_stat.rst", "reference/generated/mqr.process.Sample.conf.rst", "reference/generated/mqr.process.Sample.conf_mean.rst", "reference/generated/mqr.process.Sample.conf_median.rst", "reference/generated/mqr.process.Sample.conf_quartile1.rst", "reference/generated/mqr.process.Sample.conf_quartile3.rst", "reference/generated/mqr.process.Sample.conf_std.rst", "reference/generated/mqr.process.Sample.conf_var.rst", "reference/generated/mqr.process.Sample.data.rst", "reference/generated/mqr.process.Sample.iqr.rst", "reference/generated/mqr.process.Sample.ks_pvalue.rst", "reference/generated/mqr.process.Sample.ks_stat.rst", "reference/generated/mqr.process.Sample.kurtosis.rst", "reference/generated/mqr.process.Sample.maximum.rst", "reference/generated/mqr.process.Sample.mean.rst", "reference/generated/mqr.process.Sample.median.rst", "reference/generated/mqr.process.Sample.minimum.rst", "reference/generated/mqr.process.Sample.name.rst", "reference/generated/mqr.process.Sample.nobs.rst", "reference/generated/mqr.process.Sample.outliers.rst", "reference/generated/mqr.process.Sample.quartile1.rst", "reference/generated/mqr.process.Sample.quartile3.rst", "reference/generated/mqr.process.Sample.sem.rst", "reference/generated/mqr.process.Sample.skewness.rst", "reference/generated/mqr.process.Sample.std.rst", "reference/generated/mqr.process.Sample.var.rst", "reference/generated/mqr.process.Specification.rst", "reference/generated/mqr.process.Specification.lsl.rst", "reference/generated/mqr.process.Specification.target.rst", "reference/generated/mqr.process.Specification.usl.rst", "reference/generated/mqr.process.Summary.rst", "reference/generated/mqr.process.Summary.__getitem__.rst", "reference/generated/mqr.process.Summary.capabilities.rst", "reference/generated/mqr.process.Summary.data.rst", "reference/generated/mqr.process.Summary.samples.rst", "reference/generated/mqr.spc.ControlParams.rst", "reference/generated/mqr.spc.ControlParams.asdict.rst", "reference/generated/mqr.spc.ControlParams.lcl.rst", "reference/generated/mqr.spc.ControlParams.statistic.rst", "reference/generated/mqr.spc.ControlParams.target.rst", "reference/generated/mqr.spc.ControlParams.ucl.rst", "reference/generated/mqr.spc.ControlStatistic.rst", "reference/generated/mqr.spc.ControlStatistic.nobs.rst", "reference/generated/mqr.spc.ControlStatistic.stat.rst", "reference/generated/mqr.spc.EwmaParams.rst", "reference/generated/mqr.spc.EwmaParams.L.rst", "reference/generated/mqr.spc.EwmaParams.asdict.rst", "reference/generated/mqr.spc.EwmaParams.from_data.rst", "reference/generated/mqr.spc.EwmaParams.from_stddev.rst", "reference/generated/mqr.spc.EwmaParams.lcl.rst", "reference/generated/mqr.spc.EwmaParams.lmda.rst", "reference/generated/mqr.spc.EwmaParams.mu_0.rst", "reference/generated/mqr.spc.EwmaParams.name.rst", "reference/generated/mqr.spc.EwmaParams.sigma.rst", "reference/generated/mqr.spc.EwmaParams.statistic.rst", "reference/generated/mqr.spc.EwmaParams.steady_state.rst", "reference/generated/mqr.spc.EwmaParams.target.rst", "reference/generated/mqr.spc.EwmaParams.ucl.rst", "reference/generated/mqr.spc.MewmaParams.rst", "reference/generated/mqr.spc.MewmaParams.asdict.rst", "reference/generated/mqr.spc.MewmaParams.cov.rst", "reference/generated/mqr.spc.MewmaParams.from_data.rst", "reference/generated/mqr.spc.MewmaParams.lcl.rst", "reference/generated/mqr.spc.MewmaParams.limit.rst", "reference/generated/mqr.spc.MewmaParams.lmda.rst", "reference/generated/mqr.spc.MewmaParams.mu.rst", "reference/generated/mqr.spc.MewmaParams.name.rst", "reference/generated/mqr.spc.MewmaParams.statistic.rst", "reference/generated/mqr.spc.MewmaParams.target.rst", "reference/generated/mqr.spc.MewmaParams.ucl.rst", "reference/generated/mqr.spc.RParams.rst", "reference/generated/mqr.spc.RParams.asdict.rst", "reference/generated/mqr.spc.RParams.centre.rst", "reference/generated/mqr.spc.RParams.from_data.rst", "reference/generated/mqr.spc.RParams.from_range.rst", "reference/generated/mqr.spc.RParams.lcl.rst", "reference/generated/mqr.spc.RParams.name.rst", "reference/generated/mqr.spc.RParams.nsigma.rst", "reference/generated/mqr.spc.RParams.se.rst", "reference/generated/mqr.spc.RParams.sigma.rst", "reference/generated/mqr.spc.RParams.statistic.rst", "reference/generated/mqr.spc.RParams.target.rst", "reference/generated/mqr.spc.RParams.ucl.rst", "reference/generated/mqr.spc.SParams.rst", "reference/generated/mqr.spc.SParams.asdict.rst", "reference/generated/mqr.spc.SParams.centre.rst", "reference/generated/mqr.spc.SParams.from_data.rst", "reference/generated/mqr.spc.SParams.lcl.rst", "reference/generated/mqr.spc.SParams.name.rst", "reference/generated/mqr.spc.SParams.nsigma.rst", "reference/generated/mqr.spc.SParams.se.rst", "reference/generated/mqr.spc.SParams.statistic.rst", "reference/generated/mqr.spc.SParams.target.rst", "reference/generated/mqr.spc.SParams.ucl.rst", "reference/generated/mqr.spc.ShewhartParams.rst", "reference/generated/mqr.spc.ShewhartParams.asdict.rst", "reference/generated/mqr.spc.ShewhartParams.lcl.rst", "reference/generated/mqr.spc.ShewhartParams.se.rst", "reference/generated/mqr.spc.ShewhartParams.statistic.rst", "reference/generated/mqr.spc.ShewhartParams.target.rst", "reference/generated/mqr.spc.ShewhartParams.ucl.rst", "reference/generated/mqr.spc.XBarParams.rst", "reference/generated/mqr.spc.XBarParams.asdict.rst", "reference/generated/mqr.spc.XBarParams.centre.rst", "reference/generated/mqr.spc.XBarParams.from_data.rst", "reference/generated/mqr.spc.XBarParams.from_range.rst", "reference/generated/mqr.spc.XBarParams.from_stddev.rst", "reference/generated/mqr.spc.XBarParams.lcl.rst", "reference/generated/mqr.spc.XBarParams.name.rst", "reference/generated/mqr.spc.XBarParams.nsigma.rst", "reference/generated/mqr.spc.XBarParams.se.rst", "reference/generated/mqr.spc.XBarParams.sigma.rst", "reference/generated/mqr.spc.XBarParams.statistic.rst", "reference/generated/mqr.spc.XBarParams.target.rst", "reference/generated/mqr.spc.XBarParams.ucl.rst", "reference/generated/mqr.spc.rules.aofb_nsigma.rst", "reference/generated/mqr.spc.rules.combine.rst", "reference/generated/mqr.spc.rules.limits.rst", "reference/generated/mqr.spc.rules.n_1side.rst", "reference/generated/mqr.spc.rules.n_trending.rst", "reference/generated/mqr.spc.util.alarm_subsets.rst", "reference/generated/mqr.spc.util.c4.rst", "reference/generated/mqr.spc.util.c4_fn.rst", "reference/generated/mqr.spc.util.d2.rst", "reference/generated/mqr.spc.util.d2_integral.rst", "reference/generated/mqr.spc.util.d3.rst", "reference/generated/mqr.spc.util.d3_integral.rst", "reference/generated/mqr.spc.util.group_consecutives.rst", "reference/generated/mqr.spc.util.solve_arl.rst", "reference/generated/mqr.spc.util.solve_h4.rst", "reference/generated/mqr.transforms.zscore.rst", "reference/mqr.anova.rst", "reference/mqr.doe.rst", "reference/mqr.inference.rst", "reference/mqr.inference.nonparametric.rst", "reference/mqr.msa.rst", "reference/mqr.nbtools.rst", "reference/mqr.plot.rst", "reference/mqr.process.rst", "reference/mqr.spc.rst", "reference/mqr.spc.rules.rst", "reference/mqr.spc.util.rst", "reference/mqr.transforms.rst", "reference/plot/generated/mqr.plot.anova.interactions.rst", "reference/plot/generated/mqr.plot.anova.main_effects.rst", "reference/plot/generated/mqr.plot.anova.model_means.rst", "reference/plot/generated/mqr.plot.correlation.matrix.rst", "reference/plot/generated/mqr.plot.msa.bar_var_pct.rst", "reference/plot/generated/mqr.plot.msa.box_measurement_by_operator.rst", "reference/plot/generated/mqr.plot.msa.box_measurement_by_part.rst", "reference/plot/generated/mqr.plot.msa.grr.rst", "reference/plot/generated/mqr.plot.msa.line_part_operator_intn.rst", "reference/plot/generated/mqr.plot.msa.r_operator.rst", "reference/plot/generated/mqr.plot.msa.xbar_operator.rst", "reference/plot/generated/mqr.plot.process.capability.rst", "reference/plot/generated/mqr.plot.process.pdf.rst", "reference/plot/generated/mqr.plot.process.summary.rst", "reference/plot/generated/mqr.plot.process.tolerance.rst", "reference/plot/generated/mqr.plot.regression.influence.rst", "reference/plot/generated/mqr.plot.regression.res_histogram.rst", "reference/plot/generated/mqr.plot.regression.res_probplot.rst", "reference/plot/generated/mqr.plot.regression.res_v_factor.rst", "reference/plot/generated/mqr.plot.regression.res_v_fit.rst", "reference/plot/generated/mqr.plot.regression.res_v_obs.rst", "reference/plot/generated/mqr.plot.regression.residuals.rst", "reference/plot/generated/mqr.plot.spc.alarms.rst", "reference/plot/generated/mqr.plot.spc.chart.rst", "reference/plot/generated/mqr.plot.spc.oc.rst", "reference/plot/generated/mqr.plot.tools.sharex.rst", "reference/plot/generated/mqr.plot.tools.sharey.rst", "reference/plot/mqr.plot.anova.rst", "reference/plot/mqr.plot.correlation.rst", "reference/plot/mqr.plot.msa.rst", "reference/plot/mqr.plot.process.rst", "reference/plot/mqr.plot.regression.rst", "reference/plot/mqr.plot.spc.rst", "reference/plot/mqr.plot.tools.rst", "user-guide.md", "user_guide/data-analysis.md", "user_guide/design-of-experiments.md", "user_guide/inference.md", "user_guide/measurement-system-analysis.md", "user_guide/plots.md", "user_guide/plotting-customisation.md", "user_guide/plotting-primer.md", "user_guide/regression-anova.md", "user_guide/statistical-process-control.md", "user_guide/summary-capability.md"], "indexentries": {"__call__() (mqr.doe.affine method)": [[11, "mqr.doe.Affine.__call__", false]], "__getitem__() (mqr.process.summary method)": [[193, "mqr.process.Summary.__getitem__", false]], "__len__() (mqr.doe.design method)": [[16, "mqr.doe.Design.__len__", false]], "ad_pvalue (mqr.process.sample attribute)": [[161, "mqr.process.Sample.ad_pvalue", false]], "ad_stat (mqr.process.sample attribute)": [[162, "mqr.process.Sample.ad_stat", false]], "adequacy() (in module mqr.anova)": [[5, "mqr.anova.adequacy", false]], "affine (class in mqr.doe)": [[10, "mqr.doe.Affine", false]], "alarm_subsets() (in module mqr.spc.util)": [[282, "mqr.spc.util.alarm_subsets", false]], "alarms() (in module mqr.plot.spc)": [[327, "mqr.plot.spc.alarms", false]], "alpha (mqr.inference.power.testpower attribute)": [[85, "mqr.inference.power.TestPower.alpha", false]], "alt (mqr.inference.hyptest.hypothesistest attribute)": [[51, "mqr.inference.hyptest.HypothesisTest.alt", false]], "alternative (mqr.inference.hyptest.hypothesistest attribute)": [[52, "mqr.inference.hyptest.HypothesisTest.alternative", false]], "alternative (mqr.inference.power.testpower attribute)": [[86, "mqr.inference.power.TestPower.alternative", false]], "anova_table (mqr.msa.variancetable attribute)": [[142, "mqr.msa.VarianceTable.anova_table", false]], "aofb_nsigma() (in module mqr.spc.rules)": [[277, "mqr.spc.rules.aofb_nsigma", false]], "as_block() (mqr.doe.design method)": [[17, "mqr.doe.Design.as_block", false]], "asdict() (mqr.spc.controlparams method)": [[198, "mqr.spc.ControlParams.asdict", false]], "asdict() (mqr.spc.ewmaparams method)": [[208, "mqr.spc.EwmaParams.asdict", false]], "asdict() (mqr.spc.mewmaparams method)": [[221, "mqr.spc.MewmaParams.asdict", false]], "asdict() (mqr.spc.rparams method)": [[233, "mqr.spc.RParams.asdict", false]], "asdict() (mqr.spc.shewhartparams method)": [[257, "mqr.spc.ShewhartParams.asdict", false]], "asdict() (mqr.spc.sparams method)": [[246, "mqr.spc.SParams.asdict", false]], "asdict() (mqr.spc.xbarparams method)": [[264, "mqr.spc.XBarParams.asdict", false]], "bar_var_pct() (in module mqr.plot.msa)": [[309, "mqr.plot.msa.bar_var_pct", false]], "beta (mqr.inference.power.testpower attribute)": [[87, "mqr.inference.power.TestPower.beta", false]], "blocks (mqr.doe.design attribute)": [[18, "mqr.doe.Design.blocks", false]], "bounded (mqr.inference.confint.confidenceinterval attribute)": [[37, "mqr.inference.confint.ConfidenceInterval.bounded", false]], "box_measurement_by_operator() (in module mqr.plot.msa)": [[310, "mqr.plot.msa.box_measurement_by_operator", false]], "box_measurement_by_part() (in module mqr.plot.msa)": [[311, "mqr.plot.msa.box_measurement_by_part", false]], "c4() (in module mqr.spc.util)": [[283, "mqr.spc.util.c4", false]], "c4_fn() (in module mqr.spc.util)": [[284, "mqr.spc.util.c4_fn", false]], "capabilities (mqr.process.summary attribute)": [[194, "mqr.process.Summary.capabilities", false]], "capability (class in mqr.process)": [[153, "mqr.process.Capability", false]], "capability() (in module mqr.plot.process)": [[316, "mqr.plot.process.capability", false]], "centre (mqr.spc.rparams attribute)": [[234, "mqr.spc.RParams.centre", false]], "centre (mqr.spc.sparams attribute)": [[247, "mqr.spc.SParams.centre", false]], "centre (mqr.spc.xbarparams attribute)": [[265, "mqr.spc.XBarParams.centre", false]], "chart() (in module mqr.plot.spc)": [[328, "mqr.plot.spc.chart", false]], "coeffs() (in module mqr.anova)": [[6, "mqr.anova.coeffs", false]], "combine() (in module mqr.spc.rules)": [[278, "mqr.spc.rules.combine", false]], "conf (mqr.inference.confint.confidenceinterval attribute)": [[38, "mqr.inference.confint.ConfidenceInterval.conf", false]], "conf (mqr.process.sample attribute)": [[163, "mqr.process.Sample.conf", false]], "conf_mean (mqr.process.sample attribute)": [[164, "mqr.process.Sample.conf_mean", false]], "conf_median (mqr.process.sample attribute)": [[165, "mqr.process.Sample.conf_median", false]], "conf_quartile1 (mqr.process.sample attribute)": [[166, "mqr.process.Sample.conf_quartile1", false]], "conf_quartile3 (mqr.process.sample attribute)": [[167, "mqr.process.Sample.conf_quartile3", false]], "conf_std (mqr.process.sample attribute)": [[168, "mqr.process.Sample.conf_std", false]], "conf_var (mqr.process.sample attribute)": [[169, "mqr.process.Sample.conf_var", false]], "confidenceinterval (class in mqr.inference.confint)": [[36, "mqr.inference.confint.ConfidenceInterval", false]], "confint() (in module mqr.inference.correlation)": [[45, "mqr.inference.correlation.confint", false]], "confint() (in module mqr.plot)": [[151, "mqr.plot.confint", false]], "confint_1sample() (in module mqr.inference.mean)": [[62, "mqr.inference.mean.confint_1sample", false]], "confint_1sample() (in module mqr.inference.nonparametric.quantile)": [[80, "mqr.inference.nonparametric.quantile.confint_1sample", false]], "confint_1sample() (in module mqr.inference.proportion)": [[93, "mqr.inference.proportion.confint_1sample", false]], "confint_1sample() (in module mqr.inference.rate)": [[102, "mqr.inference.rate.confint_1sample", false]], "confint_1sample() (in module mqr.inference.stddev)": [[111, "mqr.inference.stddev.confint_1sample", false]], "confint_1sample() (in module mqr.inference.variance)": [[118, "mqr.inference.variance.confint_1sample", false]], "confint_2sample() (in module mqr.inference.mean)": [[63, "mqr.inference.mean.confint_2sample", false]], "confint_2sample() (in module mqr.inference.proportion)": [[94, "mqr.inference.proportion.confint_2sample", false]], "confint_2sample() (in module mqr.inference.rate)": [[103, "mqr.inference.rate.confint_2sample", false]], "confint_2sample() (in module mqr.inference.stddev)": [[112, "mqr.inference.stddev.confint_2sample", false]], "confint_2sample() (in module mqr.inference.variance)": [[119, "mqr.inference.variance.confint_2sample", false]], "confint_paired() (in module mqr.inference.mean)": [[64, "mqr.inference.mean.confint_paired", false]], "controlparams (class in mqr.spc)": [[197, "mqr.spc.ControlParams", false]], "controlstatistic (class in mqr.spc)": [[203, "mqr.spc.ControlStatistic", false]], "counts (mqr.msa.grr attribute)": [[127, "mqr.msa.GRR.counts", false]], "cov (mqr.spc.mewmaparams attribute)": [[222, "mqr.spc.MewmaParams.cov", false]], "cp (mqr.process.capability attribute)": [[154, "mqr.process.Capability.cp", false]], "cpk (mqr.process.capability attribute)": [[155, "mqr.process.Capability.cpk", false]], "d2() (in module mqr.spc.util)": [[285, "mqr.spc.util.d2", false]], "d2_integral() (in module mqr.spc.util)": [[286, "mqr.spc.util.d2_integral", false]], "d3() (in module mqr.spc.util)": [[287, "mqr.spc.util.d3", false]], "d3_integral() (in module mqr.spc.util)": [[288, "mqr.spc.util.d3_integral", false]], "data (mqr.msa.grr attribute)": [[128, "mqr.msa.GRR.data", false]], "data (mqr.process.sample attribute)": [[170, "mqr.process.Sample.data", false]], "data (mqr.process.summary attribute)": [[195, "mqr.process.Summary.data", false]], "defects_lt (mqr.process.capability attribute)": [[156, "mqr.process.Capability.defects_lt", false]], "defects_st (mqr.process.capability attribute)": [[157, "mqr.process.Capability.defects_st", false]], "description (mqr.inference.hyptest.hypothesistest attribute)": [[53, "mqr.inference.hyptest.HypothesisTest.description", false]], "design (class in mqr.doe)": [[15, "mqr.doe.Design", false]], "discrimination (mqr.msa.variancetable attribute)": [[143, "mqr.msa.VarianceTable.discrimination", false]], "effect (mqr.inference.power.testpower attribute)": [[88, "mqr.inference.power.TestPower.effect", false]], "ewmaparams (class in mqr.spc)": [[206, "mqr.spc.EwmaParams", false]], "figure (class in mqr.plot)": [[150, "mqr.plot.Figure", false]], "formula (mqr.msa.grr attribute)": [[129, "mqr.msa.GRR.formula", false]], "from_axial() (mqr.doe.design static method)": [[19, "mqr.doe.Design.from_axial", false]], "from_ccdesign() (mqr.doe.design static method)": [[20, "mqr.doe.Design.from_ccdesign", false]], "from_centrepoints() (mqr.doe.design static method)": [[21, "mqr.doe.Design.from_centrepoints", false]], "from_data() (mqr.spc.ewmaparams static method)": [[209, "mqr.spc.EwmaParams.from_data", false]], "from_data() (mqr.spc.mewmaparams static method)": [[223, "mqr.spc.MewmaParams.from_data", false]], "from_data() (mqr.spc.rparams static method)": [[235, "mqr.spc.RParams.from_data", false]], "from_data() (mqr.spc.sparams static method)": [[248, "mqr.spc.SParams.from_data", false]], "from_data() (mqr.spc.xbarparams static method)": [[266, "mqr.spc.XBarParams.from_data", false]], "from_fracfact() (mqr.doe.design static method)": [[22, "mqr.doe.Design.from_fracfact", false]], "from_fullfact() (mqr.doe.design static method)": [[23, "mqr.doe.Design.from_fullfact", false]], "from_levels() (mqr.doe.design static method)": [[24, "mqr.doe.Design.from_levels", false]], "from_map() (mqr.doe.affine static method)": [[12, "mqr.doe.Affine.from_map", false]], "from_map() (mqr.doe.transform static method)": [[35, "mqr.doe.Transform.from_map", false]], "from_range() (mqr.spc.rparams static method)": [[236, "mqr.spc.RParams.from_range", false]], "from_range() (mqr.spc.xbarparams static method)": [[267, "mqr.spc.XBarParams.from_range", false]], "from_stddev() (mqr.spc.ewmaparams static method)": [[210, "mqr.spc.EwmaParams.from_stddev", false]], "from_stddev() (mqr.spc.xbarparams static method)": [[268, "mqr.spc.XBarParams.from_stddev", false]], "get_factor_df() (mqr.doe.design method)": [[25, "mqr.doe.Design.get_factor_df", false]], "grab_figure() (in module mqr.nbtools)": [[147, "mqr.nbtools.grab_figure", false]], "group_consecutives() (in module mqr.spc.util)": [[289, "mqr.spc.util.group_consecutives", false]], "groups() (in module mqr.anova)": [[7, "mqr.anova.groups", false]], "grr (class in mqr.msa)": [[126, "mqr.msa.GRR", false]], "grr (mqr.msa.variancetable attribute)": [[144, "mqr.msa.VarianceTable.grr", false]], "grr() (in module mqr.plot.msa)": [[312, "mqr.plot.msa.grr", false]], "hstack() (in module mqr.nbtools)": [[148, "mqr.nbtools.hstack", false]], "hypothesistest (class in mqr.inference.hyptest)": [[50, "mqr.inference.hyptest.HypothesisTest", false]], "include_interaction (mqr.msa.grr attribute)": [[130, "mqr.msa.GRR.include_interaction", false]], "include_intercept (mqr.msa.grr attribute)": [[131, "mqr.msa.GRR.include_intercept", false]], "influence() (in module mqr.plot.regression)": [[320, "mqr.plot.regression.influence", false]], "interactions() (in module mqr.anova)": [[8, "mqr.anova.interactions", false]], "interactions() (in module mqr.plot.anova)": [[305, "mqr.plot.anova.interactions", false]], "iqr (mqr.process.sample attribute)": [[171, "mqr.process.Sample.iqr", false]], "ishikawa() (in module mqr.plot)": [[152, "mqr.plot.ishikawa", false]], "ks_pvalue (mqr.process.sample attribute)": [[172, "mqr.process.Sample.ks_pvalue", false]], "ks_stat (mqr.process.sample attribute)": [[173, "mqr.process.Sample.ks_stat", false]], "kurtosis (mqr.process.sample attribute)": [[174, "mqr.process.Sample.kurtosis", false]], "l (mqr.spc.ewmaparams attribute)": [[207, "mqr.spc.EwmaParams.L", false]], "lcl() (mqr.spc.controlparams method)": [[199, "mqr.spc.ControlParams.lcl", false]], "lcl() (mqr.spc.ewmaparams method)": [[211, "mqr.spc.EwmaParams.lcl", false]], "lcl() (mqr.spc.mewmaparams method)": [[224, "mqr.spc.MewmaParams.lcl", false]], "lcl() (mqr.spc.rparams method)": [[237, "mqr.spc.RParams.lcl", false]], "lcl() (mqr.spc.shewhartparams method)": [[258, "mqr.spc.ShewhartParams.lcl", false]], "lcl() (mqr.spc.sparams method)": [[249, "mqr.spc.SParams.lcl", false]], "lcl() (mqr.spc.xbarparams method)": [[269, "mqr.spc.XBarParams.lcl", false]], "levels (mqr.doe.design attribute)": [[26, "mqr.doe.Design.levels", false]], "limit (mqr.spc.mewmaparams attribute)": [[225, "mqr.spc.MewmaParams.limit", false]], "limits() (in module mqr.spc.rules)": [[279, "mqr.spc.rules.limits", false]], "line_part_operator_intn() (in module mqr.plot.msa)": [[313, "mqr.plot.msa.line_part_operator_intn", false]], "lmda (mqr.spc.ewmaparams attribute)": [[212, "mqr.spc.EwmaParams.lmda", false]], "lmda (mqr.spc.mewmaparams attribute)": [[226, "mqr.spc.MewmaParams.lmda", false]], "lower (mqr.inference.confint.confidenceinterval attribute)": [[39, "mqr.inference.confint.ConfidenceInterval.lower", false]], "lsl (mqr.process.specification attribute)": [[189, "mqr.process.Specification.lsl", false]], "main_effects() (in module mqr.plot.anova)": [[306, "mqr.plot.anova.main_effects", false]], "matrix() (in module mqr.plot.correlation)": [[308, "mqr.plot.correlation.matrix", false]], "maximum (mqr.process.sample attribute)": [[175, "mqr.process.Sample.maximum", false]], "mean (mqr.process.sample attribute)": [[176, "mqr.process.Sample.mean", false]], "measurement (mqr.msa.namemapping attribute)": [[138, "mqr.msa.NameMapping.measurement", false]], "median (mqr.process.sample attribute)": [[177, "mqr.process.Sample.median", false]], "method (mqr.inference.confint.confidenceinterval attribute)": [[40, "mqr.inference.confint.ConfidenceInterval.method", false]], "method (mqr.inference.hyptest.hypothesistest attribute)": [[54, "mqr.inference.hyptest.HypothesisTest.method", false]], "method (mqr.inference.power.testpower attribute)": [[89, "mqr.inference.power.TestPower.method", false]], "mewmaparams (class in mqr.spc)": [[220, "mqr.spc.MewmaParams", false]], "minimum (mqr.process.sample attribute)": [[178, "mqr.process.Sample.minimum", false]], "model (mqr.msa.grr attribute)": [[132, "mqr.msa.GRR.model", false]], "model_means() (in module mqr.plot.anova)": [[307, "mqr.plot.anova.model_means", false]], "module": [[44, "module-mqr.inference.correlation", false], [48, "module-mqr.inference.dist", false], [61, "module-mqr.inference.mean", false], [71, "module-mqr.inference.nonparametric.correlation", false], [73, "module-mqr.inference.nonparametric.dist", false], [76, "module-mqr.inference.nonparametric.median", false], [79, "module-mqr.inference.nonparametric.quantile", false], [82, "module-mqr.inference.nonparametric.variance", false], [92, "module-mqr.inference.proportion", false], [101, "module-mqr.inference.rate", false], [110, "module-mqr.inference.stddev", false], [117, "module-mqr.inference.variance", false], [293, "module-mqr.anova", false], [294, "module-mqr.doe", false], [295, "module-mqr.inference", false], [296, "module-mqr.inference.nonparametric", false], [297, "module-mqr.msa", false], [298, "module-mqr.nbtools", false], [299, "module-mqr.plot", false], [300, "module-mqr.process", false], [301, "module-mqr.spc", false], [302, "module-mqr.spc.rules", false], [303, "module-mqr.spc.util", false], [304, "module-mqr.transforms", false], [332, "module-mqr.plot.anova", false], [333, "module-mqr.plot.correlation", false], [334, "module-mqr.plot.msa", false], [335, "module-mqr.plot.process", false], [336, "module-mqr.plot.regression", false], [337, "module-mqr.plot.spc", false], [338, "module-mqr.plot.tools", false]], "mqr.anova": [[293, "module-mqr.anova", false]], "mqr.doe": [[294, "module-mqr.doe", false]], "mqr.inference": [[295, "module-mqr.inference", false]], "mqr.inference.correlation": [[44, "module-mqr.inference.correlation", false]], "mqr.inference.dist": [[48, "module-mqr.inference.dist", false]], "mqr.inference.mean": [[61, "module-mqr.inference.mean", false]], "mqr.inference.nonparametric": [[296, "module-mqr.inference.nonparametric", false]], "mqr.inference.nonparametric.correlation": [[71, "module-mqr.inference.nonparametric.correlation", false]], "mqr.inference.nonparametric.dist": [[73, "module-mqr.inference.nonparametric.dist", false]], "mqr.inference.nonparametric.median": [[76, "module-mqr.inference.nonparametric.median", false]], "mqr.inference.nonparametric.quantile": [[79, "module-mqr.inference.nonparametric.quantile", false]], "mqr.inference.nonparametric.variance": [[82, "module-mqr.inference.nonparametric.variance", false]], "mqr.inference.proportion": [[92, "module-mqr.inference.proportion", false]], "mqr.inference.rate": [[101, "module-mqr.inference.rate", false]], "mqr.inference.stddev": [[110, "module-mqr.inference.stddev", false]], "mqr.inference.variance": [[117, "module-mqr.inference.variance", false]], "mqr.msa": [[297, "module-mqr.msa", false]], "mqr.nbtools": [[298, "module-mqr.nbtools", false]], "mqr.plot": [[299, "module-mqr.plot", false]], "mqr.plot.anova": [[332, "module-mqr.plot.anova", false]], "mqr.plot.correlation": [[333, "module-mqr.plot.correlation", false]], "mqr.plot.msa": [[334, "module-mqr.plot.msa", false]], "mqr.plot.process": [[335, "module-mqr.plot.process", false]], "mqr.plot.regression": [[336, "module-mqr.plot.regression", false]], "mqr.plot.spc": [[337, "module-mqr.plot.spc", false]], "mqr.plot.tools": [[338, "module-mqr.plot.tools", false]], "mqr.process": [[300, "module-mqr.process", false]], "mqr.spc": [[301, "module-mqr.spc", false]], "mqr.spc.rules": [[302, "module-mqr.spc.rules", false]], "mqr.spc.util": [[303, "module-mqr.spc.util", false]], "mqr.transforms": [[304, "module-mqr.transforms", false]], "mu (mqr.spc.mewmaparams attribute)": [[227, "mqr.spc.MewmaParams.mu", false]], "mu_0 (mqr.spc.ewmaparams attribute)": [[213, "mqr.spc.EwmaParams.mu_0", false]], "n_1side() (in module mqr.spc.rules)": [[280, "mqr.spc.rules.n_1side", false]], "n_trending() (in module mqr.spc.rules)": [[281, "mqr.spc.rules.n_trending", false]], "name (mqr.inference.confint.confidenceinterval attribute)": [[41, "mqr.inference.confint.ConfidenceInterval.name", false]], "name (mqr.inference.power.testpower attribute)": [[90, "mqr.inference.power.TestPower.name", false]], "name (mqr.process.sample attribute)": [[179, "mqr.process.Sample.name", false]], "name (mqr.spc.ewmaparams attribute)": [[214, "mqr.spc.EwmaParams.name", false]], "name (mqr.spc.mewmaparams attribute)": [[228, "mqr.spc.MewmaParams.name", false]], "name (mqr.spc.rparams attribute)": [[238, "mqr.spc.RParams.name", false]], "name (mqr.spc.sparams attribute)": [[250, "mqr.spc.SParams.name", false]], "name (mqr.spc.xbarparams attribute)": [[270, "mqr.spc.XBarParams.name", false]], "namemapping (class in mqr.msa)": [[137, "mqr.msa.NameMapping", false]], "names (mqr.doe.design attribute)": [[27, "mqr.doe.Design.names", false]], "names (mqr.msa.grr attribute)": [[133, "mqr.msa.GRR.names", false]], "nobs (mqr.process.sample attribute)": [[180, "mqr.process.Sample.nobs", false]], "nobs (mqr.spc.controlstatistic attribute)": [[204, "mqr.spc.ControlStatistic.nobs", false]], "nsigma (mqr.msa.grr attribute)": [[134, "mqr.msa.GRR.nsigma", false]], "nsigma (mqr.spc.rparams attribute)": [[239, "mqr.spc.RParams.nsigma", false]], "nsigma (mqr.spc.sparams attribute)": [[251, "mqr.spc.SParams.nsigma", false]], "nsigma (mqr.spc.xbarparams attribute)": [[271, "mqr.spc.XBarParams.nsigma", false]], "null (mqr.inference.hyptest.hypothesistest attribute)": [[55, "mqr.inference.hyptest.HypothesisTest.null", false]], "num_distinct_cats (mqr.msa.variancetable attribute)": [[145, "mqr.msa.VarianceTable.num_distinct_cats", false]], "oc() (in module mqr.plot.spc)": [[329, "mqr.plot.spc.oc", false]], "operator (mqr.msa.namemapping attribute)": [[139, "mqr.msa.NameMapping.operator", false]], "outliers (mqr.process.sample attribute)": [[181, "mqr.process.Sample.outliers", false]], "part (mqr.msa.namemapping attribute)": [[140, "mqr.msa.NameMapping.part", false]], "pdf() (in module mqr.plot.process)": [[317, "mqr.plot.process.pdf", false]], "power_1sample() (in module mqr.inference.proportion)": [[95, "mqr.inference.proportion.power_1sample", false]], "power_1sample() (in module mqr.inference.rate)": [[104, "mqr.inference.rate.power_1sample", false]], "power_1sample() (in module mqr.inference.variance)": [[120, "mqr.inference.variance.power_1sample", false]], "power_2sample() (in module mqr.inference.proportion)": [[96, "mqr.inference.proportion.power_2sample", false]], "power_2sample() (in module mqr.inference.rate)": [[105, "mqr.inference.rate.power_2sample", false]], "power_2sample() (in module mqr.inference.variance)": [[121, "mqr.inference.variance.power_2sample", false]], "pttypes (mqr.doe.design attribute)": [[28, "mqr.doe.Design.pttypes", false]], "pvalue (mqr.inference.hyptest.hypothesistest attribute)": [[56, "mqr.inference.hyptest.HypothesisTest.pvalue", false]], "quartile1 (mqr.process.sample attribute)": [[182, "mqr.process.Sample.quartile1", false]], "quartile3 (mqr.process.sample attribute)": [[183, "mqr.process.Sample.quartile3", false]], "r_operator() (in module mqr.plot.msa)": [[314, "mqr.plot.msa.r_operator", false]], "randomise_runs() (mqr.doe.design method)": [[29, "mqr.doe.Design.randomise_runs", false]], "regression_result (mqr.msa.grr attribute)": [[135, "mqr.msa.GRR.regression_result", false]], "replicate() (mqr.doe.design method)": [[30, "mqr.doe.Design.replicate", false]], "res_histogram() (in module mqr.plot.regression)": [[321, "mqr.plot.regression.res_histogram", false]], "res_probplot() (in module mqr.plot.regression)": [[322, "mqr.plot.regression.res_probplot", false]], "res_v_factor() (in module mqr.plot.regression)": [[323, "mqr.plot.regression.res_v_factor", false]], "res_v_fit() (in module mqr.plot.regression)": [[324, "mqr.plot.regression.res_v_fit", false]], "res_v_obs() (in module mqr.plot.regression)": [[325, "mqr.plot.regression.res_v_obs", false]], "residuals() (in module mqr.plot.regression)": [[326, "mqr.plot.regression.residuals", false]], "rparams (class in mqr.spc)": [[232, "mqr.spc.RParams", false]], "runs (mqr.doe.design attribute)": [[31, "mqr.doe.Design.runs", false]], "sample (class in mqr.process)": [[160, "mqr.process.Sample", false]], "sample (mqr.process.capability attribute)": [[158, "mqr.process.Capability.sample", false]], "sample_size (mqr.inference.power.testpower attribute)": [[91, "mqr.inference.power.TestPower.sample_size", false]], "sample_stat (mqr.inference.hyptest.hypothesistest attribute)": [[57, "mqr.inference.hyptest.HypothesisTest.sample_stat", false]], "sample_stat_target (mqr.inference.hyptest.hypothesistest attribute)": [[58, "mqr.inference.hyptest.HypothesisTest.sample_stat_target", false]], "sample_stat_value (mqr.inference.hyptest.hypothesistest attribute)": [[59, "mqr.inference.hyptest.HypothesisTest.sample_stat_value", false]], "samples (mqr.process.summary attribute)": [[196, "mqr.process.Summary.samples", false]], "scale (mqr.doe.affine attribute)": [[13, "mqr.doe.Affine.scale", false]], "se() (mqr.spc.rparams method)": [[240, "mqr.spc.RParams.se", false]], "se() (mqr.spc.shewhartparams method)": [[259, "mqr.spc.ShewhartParams.se", false]], "se() (mqr.spc.sparams method)": [[252, "mqr.spc.SParams.se", false]], "se() (mqr.spc.xbarparams method)": [[272, "mqr.spc.XBarParams.se", false]], "sem (mqr.process.sample attribute)": [[184, "mqr.process.Sample.sem", false]], "sharex() (in module mqr.plot.tools)": [[330, "mqr.plot.tools.sharex", false]], "sharey() (in module mqr.plot.tools)": [[331, "mqr.plot.tools.sharey", false]], "shewhartparams (class in mqr.spc)": [[256, "mqr.spc.ShewhartParams", false]], "sigma (mqr.spc.ewmaparams attribute)": [[215, "mqr.spc.EwmaParams.sigma", false]], "sigma (mqr.spc.rparams attribute)": [[241, "mqr.spc.RParams.sigma", false]], "sigma (mqr.spc.xbarparams attribute)": [[273, "mqr.spc.XBarParams.sigma", false]], "size_1sample() (in module mqr.inference.mean)": [[65, "mqr.inference.mean.size_1sample", false]], "size_1sample() (in module mqr.inference.proportion)": [[97, "mqr.inference.proportion.size_1sample", false]], "size_1sample() (in module mqr.inference.rate)": [[106, "mqr.inference.rate.size_1sample", false]], "size_1sample() (in module mqr.inference.stddev)": [[113, "mqr.inference.stddev.size_1sample", false]], "size_1sample() (in module mqr.inference.variance)": [[122, "mqr.inference.variance.size_1sample", false]], "size_2sample() (in module mqr.inference.mean)": [[66, "mqr.inference.mean.size_2sample", false]], "size_2sample() (in module mqr.inference.proportion)": [[98, "mqr.inference.proportion.size_2sample", false]], "size_2sample() (in module mqr.inference.rate)": [[107, "mqr.inference.rate.size_2sample", false]], "size_2sample() (in module mqr.inference.stddev)": [[114, "mqr.inference.stddev.size_2sample", false]], "size_2sample() (in module mqr.inference.variance)": [[123, "mqr.inference.variance.size_2sample", false]], "size_paired() (in module mqr.inference.mean)": [[67, "mqr.inference.mean.size_paired", false]], "skewness (mqr.process.sample attribute)": [[185, "mqr.process.Sample.skewness", false]], "solve_arl() (in module mqr.spc.util)": [[290, "mqr.spc.util.solve_arl", false]], "solve_h4() (in module mqr.spc.util)": [[291, "mqr.spc.util.solve_h4", false]], "sparams (class in mqr.spc)": [[245, "mqr.spc.SParams", false]], "spec (mqr.process.capability attribute)": [[159, "mqr.process.Capability.spec", false]], "specification (class in mqr.process)": [[188, "mqr.process.Specification", false]], "stat (mqr.inference.hyptest.hypothesistest attribute)": [[60, "mqr.inference.hyptest.HypothesisTest.stat", false]], "stat (mqr.spc.controlstatistic attribute)": [[205, "mqr.spc.ControlStatistic.stat", false]], "statistic() (mqr.spc.controlparams method)": [[200, "mqr.spc.ControlParams.statistic", false]], "statistic() (mqr.spc.ewmaparams method)": [[216, "mqr.spc.EwmaParams.statistic", false]], "statistic() (mqr.spc.mewmaparams method)": [[229, "mqr.spc.MewmaParams.statistic", false]], "statistic() (mqr.spc.rparams method)": [[242, "mqr.spc.RParams.statistic", false]], "statistic() (mqr.spc.shewhartparams method)": [[260, "mqr.spc.ShewhartParams.statistic", false]], "statistic() (mqr.spc.sparams method)": [[253, "mqr.spc.SParams.statistic", false]], "statistic() (mqr.spc.xbarparams method)": [[274, "mqr.spc.XBarParams.statistic", false]], "std (mqr.process.sample attribute)": [[186, "mqr.process.Sample.std", false]], "steady_state (mqr.spc.ewmaparams attribute)": [[217, "mqr.spc.EwmaParams.steady_state", false]], "summary (class in mqr.process)": [[192, "mqr.process.Summary", false]], "summary() (in module mqr.anova)": [[9, "mqr.anova.summary", false]], "summary() (in module mqr.plot.process)": [[318, "mqr.plot.process.summary", false]], "table (mqr.msa.variancetable attribute)": [[146, "mqr.msa.VarianceTable.table", false]], "target (mqr.process.specification attribute)": [[190, "mqr.process.Specification.target", false]], "target() (mqr.spc.controlparams method)": [[201, "mqr.spc.ControlParams.target", false]], "target() (mqr.spc.ewmaparams method)": [[218, "mqr.spc.EwmaParams.target", false]], "target() (mqr.spc.mewmaparams method)": [[230, "mqr.spc.MewmaParams.target", false]], "target() (mqr.spc.rparams method)": [[243, "mqr.spc.RParams.target", false]], "target() (mqr.spc.shewhartparams method)": [[261, "mqr.spc.ShewhartParams.target", false]], "target() (mqr.spc.sparams method)": [[254, "mqr.spc.SParams.target", false]], "target() (mqr.spc.xbarparams method)": [[275, "mqr.spc.XBarParams.target", false]], "test() (in module mqr.inference.correlation)": [[46, "mqr.inference.correlation.test", false]], "test() (in module mqr.inference.nonparametric.correlation)": [[72, "mqr.inference.nonparametric.correlation.test", false]], "test_1sample() (in module mqr.inference.dist)": [[49, "mqr.inference.dist.test_1sample", false]], "test_1sample() (in module mqr.inference.mean)": [[68, "mqr.inference.mean.test_1sample", false]], "test_1sample() (in module mqr.inference.nonparametric.dist)": [[74, "mqr.inference.nonparametric.dist.test_1sample", false]], "test_1sample() (in module mqr.inference.nonparametric.median)": [[77, "mqr.inference.nonparametric.median.test_1sample", false]], "test_1sample() (in module mqr.inference.nonparametric.quantile)": [[81, "mqr.inference.nonparametric.quantile.test_1sample", false]], "test_1sample() (in module mqr.inference.proportion)": [[99, "mqr.inference.proportion.test_1sample", false]], "test_1sample() (in module mqr.inference.rate)": [[108, "mqr.inference.rate.test_1sample", false]], "test_1sample() (in module mqr.inference.stddev)": [[115, "mqr.inference.stddev.test_1sample", false]], "test_1sample() (in module mqr.inference.variance)": [[124, "mqr.inference.variance.test_1sample", false]], "test_2sample() (in module mqr.inference.mean)": [[69, "mqr.inference.mean.test_2sample", false]], "test_2sample() (in module mqr.inference.nonparametric.dist)": [[75, "mqr.inference.nonparametric.dist.test_2sample", false]], "test_2sample() (in module mqr.inference.proportion)": [[100, "mqr.inference.proportion.test_2sample", false]], "test_2sample() (in module mqr.inference.rate)": [[109, "mqr.inference.rate.test_2sample", false]], "test_2sample() (in module mqr.inference.stddev)": [[116, "mqr.inference.stddev.test_2sample", false]], "test_2sample() (in module mqr.inference.variance)": [[125, "mqr.inference.variance.test_2sample", false]], "test_diff() (in module mqr.inference.correlation)": [[47, "mqr.inference.correlation.test_diff", false]], "test_nsample() (in module mqr.inference.nonparametric.median)": [[78, "mqr.inference.nonparametric.median.test_nsample", false]], "test_nsample() (in module mqr.inference.nonparametric.variance)": [[83, "mqr.inference.nonparametric.variance.test_nsample", false]], "test_paired() (in module mqr.inference.mean)": [[70, "mqr.inference.mean.test_paired", false]], "testpower (class in mqr.inference.power)": [[84, "mqr.inference.power.TestPower", false]], "to_df() (mqr.doe.design method)": [[32, "mqr.doe.Design.to_df", false]], "tolerance (mqr.msa.grr attribute)": [[136, "mqr.msa.GRR.tolerance", false]], "tolerance() (in module mqr.plot.process)": [[319, "mqr.plot.process.tolerance", false]], "transform (class in mqr.doe)": [[34, "mqr.doe.Transform", false]], "transform() (mqr.doe.design method)": [[33, "mqr.doe.Design.transform", false]], "translate (mqr.doe.affine attribute)": [[14, "mqr.doe.Affine.translate", false]], "ucl() (mqr.spc.controlparams method)": [[202, "mqr.spc.ControlParams.ucl", false]], "ucl() (mqr.spc.ewmaparams method)": [[219, "mqr.spc.EwmaParams.ucl", false]], "ucl() (mqr.spc.mewmaparams method)": [[231, "mqr.spc.MewmaParams.ucl", false]], "ucl() (mqr.spc.rparams method)": [[244, "mqr.spc.RParams.ucl", false]], "ucl() (mqr.spc.shewhartparams method)": [[262, "mqr.spc.ShewhartParams.ucl", false]], "ucl() (mqr.spc.sparams method)": [[255, "mqr.spc.SParams.ucl", false]], "ucl() (mqr.spc.xbarparams method)": [[276, "mqr.spc.XBarParams.ucl", false]], "upper (mqr.inference.confint.confidenceinterval attribute)": [[42, "mqr.inference.confint.ConfidenceInterval.upper", false]], "usl (mqr.process.specification attribute)": [[191, "mqr.process.Specification.usl", false]], "value (mqr.inference.confint.confidenceinterval attribute)": [[43, "mqr.inference.confint.ConfidenceInterval.value", false]], "var (mqr.process.sample attribute)": [[187, "mqr.process.Sample.var", false]], "variancetable (class in mqr.msa)": [[141, "mqr.msa.VarianceTable", false]], "vstack() (in module mqr.nbtools)": [[149, "mqr.nbtools.vstack", false]], "xbar_operator() (in module mqr.plot.msa)": [[315, "mqr.plot.msa.xbar_operator", false]], "xbarparams (class in mqr.spc)": [[263, "mqr.spc.XBarParams", false]], "zscore() (in module mqr.transforms)": [[292, "mqr.transforms.zscore", false]]}, "objects": {"mqr": [[293, 0, 0, "-", "anova"], [294, 0, 0, "-", "doe"], [295, 0, 0, "-", "inference"], [297, 0, 0, "-", "msa"], [298, 0, 0, "-", "nbtools"], [299, 0, 0, "-", "plot"], [300, 0, 0, "-", "process"], [301, 0, 0, "-", "spc"], [304, 0, 0, "-", "transforms"]], "mqr.anova": [[5, 1, 1, "", "adequacy"], [6, 1, 1, "", "coeffs"], [7, 1, 1, "", "groups"], [8, 1, 1, "", "interactions"], [9, 1, 1, "", "summary"]], "mqr.doe": [[10, 2, 1, "", "Affine"], [15, 2, 1, "", "Design"], [34, 2, 1, "", "Transform"]], "mqr.doe.Affine": [[11, 3, 1, "", "__call__"], [12, 3, 1, "", "from_map"], [13, 4, 1, "", "scale"], [14, 4, 1, "", "translate"]], "mqr.doe.Design": [[16, 3, 1, "", "__len__"], [17, 3, 1, "", "as_block"], [18, 4, 1, "", "blocks"], [19, 3, 1, "", "from_axial"], [20, 3, 1, "", "from_ccdesign"], [21, 3, 1, "", "from_centrepoints"], [22, 3, 1, "", "from_fracfact"], [23, 3, 1, "", "from_fullfact"], [24, 3, 1, "", "from_levels"], [25, 3, 1, "", "get_factor_df"], [26, 4, 1, "", "levels"], [27, 4, 1, "", "names"], [28, 4, 1, "", "pttypes"], [29, 3, 1, "", "randomise_runs"], [30, 3, 1, "", "replicate"], [31, 4, 1, "", "runs"], [32, 3, 1, "", "to_df"], [33, 3, 1, "", "transform"]], "mqr.doe.Transform": [[35, 3, 1, "", "from_map"]], "mqr.inference": [[44, 0, 0, "-", "correlation"], [48, 0, 0, "-", "dist"], [61, 0, 0, "-", "mean"], [296, 0, 0, "-", "nonparametric"], [92, 0, 0, "-", "proportion"], [101, 0, 0, "-", "rate"], [110, 0, 0, "-", "stddev"], [117, 0, 0, "-", "variance"]], "mqr.inference.confint": [[36, 2, 1, "", "ConfidenceInterval"]], "mqr.inference.confint.ConfidenceInterval": [[37, 4, 1, "", "bounded"], [38, 4, 1, "", "conf"], [39, 4, 1, "", "lower"], [40, 4, 1, "", "method"], [41, 4, 1, "", "name"], [42, 4, 1, "", "upper"], [43, 4, 1, "", "value"]], "mqr.inference.correlation": [[45, 1, 1, "", "confint"], [46, 1, 1, "", "test"], [47, 1, 1, "", "test_diff"]], "mqr.inference.dist": [[49, 1, 1, "", "test_1sample"]], "mqr.inference.hyptest": [[50, 2, 1, "", "HypothesisTest"]], "mqr.inference.hyptest.HypothesisTest": [[51, 4, 1, "", "alt"], [52, 4, 1, "", "alternative"], [53, 4, 1, "", "description"], [54, 4, 1, "", "method"], [55, 4, 1, "", "null"], [56, 4, 1, "", "pvalue"], [57, 4, 1, "", "sample_stat"], [58, 4, 1, "", "sample_stat_target"], [59, 4, 1, "", "sample_stat_value"], [60, 4, 1, "", "stat"]], "mqr.inference.mean": [[62, 1, 1, "", "confint_1sample"], [63, 1, 1, "", "confint_2sample"], [64, 1, 1, "", "confint_paired"], [65, 1, 1, "", "size_1sample"], [66, 1, 1, "", "size_2sample"], [67, 1, 1, "", "size_paired"], [68, 1, 1, "", "test_1sample"], [69, 1, 1, "", "test_2sample"], [70, 1, 1, "", "test_paired"]], "mqr.inference.nonparametric": [[71, 0, 0, "-", "correlation"], [73, 0, 0, "-", "dist"], [76, 0, 0, "-", "median"], [79, 0, 0, "-", "quantile"], [82, 0, 0, "-", "variance"]], "mqr.inference.nonparametric.correlation": [[72, 1, 1, "", "test"]], "mqr.inference.nonparametric.dist": [[74, 1, 1, "", "test_1sample"], [75, 1, 1, "", "test_2sample"]], "mqr.inference.nonparametric.median": [[77, 1, 1, "", "test_1sample"], [78, 1, 1, "", "test_nsample"]], "mqr.inference.nonparametric.quantile": [[80, 1, 1, "", "confint_1sample"], [81, 1, 1, "", "test_1sample"]], "mqr.inference.nonparametric.variance": [[83, 1, 1, "", "test_nsample"]], "mqr.inference.power": [[84, 2, 1, "", "TestPower"]], "mqr.inference.power.TestPower": [[85, 4, 1, "", "alpha"], [86, 4, 1, "", "alternative"], [87, 4, 1, "", "beta"], [88, 4, 1, "", "effect"], [89, 4, 1, "", "method"], [90, 4, 1, "", "name"], [91, 4, 1, "", "sample_size"]], "mqr.inference.proportion": [[93, 1, 1, "", "confint_1sample"], [94, 1, 1, "", "confint_2sample"], [95, 1, 1, "", "power_1sample"], [96, 1, 1, "", "power_2sample"], [97, 1, 1, "", "size_1sample"], [98, 1, 1, "", "size_2sample"], [99, 1, 1, "", "test_1sample"], [100, 1, 1, "", "test_2sample"]], "mqr.inference.rate": [[102, 1, 1, "", "confint_1sample"], [103, 1, 1, "", "confint_2sample"], [104, 1, 1, "", "power_1sample"], [105, 1, 1, "", "power_2sample"], [106, 1, 1, "", "size_1sample"], [107, 1, 1, "", "size_2sample"], [108, 1, 1, "", "test_1sample"], [109, 1, 1, "", "test_2sample"]], "mqr.inference.stddev": [[111, 1, 1, "", "confint_1sample"], [112, 1, 1, "", "confint_2sample"], [113, 1, 1, "", "size_1sample"], [114, 1, 1, "", "size_2sample"], [115, 1, 1, "", "test_1sample"], [116, 1, 1, "", "test_2sample"]], "mqr.inference.variance": [[118, 1, 1, "", "confint_1sample"], [119, 1, 1, "", "confint_2sample"], [120, 1, 1, "", "power_1sample"], [121, 1, 1, "", "power_2sample"], [122, 1, 1, "", "size_1sample"], [123, 1, 1, "", "size_2sample"], [124, 1, 1, "", "test_1sample"], [125, 1, 1, "", "test_2sample"]], "mqr.msa": [[126, 2, 1, "", "GRR"], [137, 2, 1, "", "NameMapping"], [141, 2, 1, "", "VarianceTable"]], "mqr.msa.GRR": [[127, 4, 1, "", "counts"], [128, 4, 1, "", "data"], [129, 4, 1, "", "formula"], [130, 4, 1, "", "include_interaction"], [131, 4, 1, "", "include_intercept"], [132, 4, 1, "", "model"], [133, 4, 1, "", "names"], [134, 4, 1, "", "nsigma"], [135, 4, 1, "", "regression_result"], [136, 4, 1, "", "tolerance"]], "mqr.msa.NameMapping": [[138, 4, 1, "", "measurement"], [139, 4, 1, "", "operator"], [140, 4, 1, "", "part"]], "mqr.msa.VarianceTable": [[142, 4, 1, "", "anova_table"], [143, 4, 1, "", "discrimination"], [144, 4, 1, "", "grr"], [145, 4, 1, "", "num_distinct_cats"], [146, 4, 1, "", "table"]], "mqr.nbtools": [[147, 1, 1, "", "grab_figure"], [148, 1, 1, "", "hstack"], [149, 1, 1, "", "vstack"]], "mqr.plot": [[150, 2, 1, "", "Figure"], [332, 0, 0, "-", "anova"], [151, 1, 1, "", "confint"], [333, 0, 0, "-", "correlation"], [152, 1, 1, "", "ishikawa"], [334, 0, 0, "-", "msa"], [335, 0, 0, "-", "process"], [336, 0, 0, "-", "regression"], [337, 0, 0, "-", "spc"], [338, 0, 0, "-", "tools"]], "mqr.plot.anova": [[305, 1, 1, "", "interactions"], [306, 1, 1, "", "main_effects"], [307, 1, 1, "", "model_means"]], "mqr.plot.correlation": [[308, 1, 1, "", "matrix"]], "mqr.plot.msa": [[309, 1, 1, "", "bar_var_pct"], [310, 1, 1, "", "box_measurement_by_operator"], [311, 1, 1, "", "box_measurement_by_part"], [312, 1, 1, "", "grr"], [313, 1, 1, "", "line_part_operator_intn"], [314, 1, 1, "", "r_operator"], [315, 1, 1, "", "xbar_operator"]], "mqr.plot.process": [[316, 1, 1, "", "capability"], [317, 1, 1, "", "pdf"], [318, 1, 1, "", "summary"], [319, 1, 1, "", "tolerance"]], "mqr.plot.regression": [[320, 1, 1, "", "influence"], [321, 1, 1, "", "res_histogram"], [322, 1, 1, "", "res_probplot"], [323, 1, 1, "", "res_v_factor"], [324, 1, 1, "", "res_v_fit"], [325, 1, 1, "", "res_v_obs"], [326, 1, 1, "", "residuals"]], "mqr.plot.spc": [[327, 1, 1, "", "alarms"], [328, 1, 1, "", "chart"], [329, 1, 1, "", "oc"]], "mqr.plot.tools": [[330, 1, 1, "", "sharex"], [331, 1, 1, "", "sharey"]], "mqr.process": [[153, 2, 1, "", "Capability"], [160, 2, 1, "", "Sample"], [188, 2, 1, "", "Specification"], [192, 2, 1, "", "Summary"]], "mqr.process.Capability": [[154, 4, 1, "", "cp"], [155, 4, 1, "", "cpk"], [156, 4, 1, "", "defects_lt"], [157, 4, 1, "", "defects_st"], [158, 4, 1, "", "sample"], [159, 4, 1, "", "spec"]], "mqr.process.Sample": [[161, 4, 1, "", "ad_pvalue"], [162, 4, 1, "", "ad_stat"], [163, 4, 1, "", "conf"], [164, 4, 1, "", "conf_mean"], [165, 4, 1, "", "conf_median"], [166, 4, 1, "", "conf_quartile1"], [167, 4, 1, "", "conf_quartile3"], [168, 4, 1, "", "conf_std"], [169, 4, 1, "", "conf_var"], [170, 4, 1, "", "data"], [171, 4, 1, "", "iqr"], [172, 4, 1, "", "ks_pvalue"], [173, 4, 1, "", "ks_stat"], [174, 4, 1, "", "kurtosis"], [175, 4, 1, "", "maximum"], [176, 4, 1, "", "mean"], [177, 4, 1, "", "median"], [178, 4, 1, "", "minimum"], [179, 4, 1, "", "name"], [180, 4, 1, "", "nobs"], [181, 4, 1, "", "outliers"], [182, 4, 1, "", "quartile1"], [183, 4, 1, "", "quartile3"], [184, 4, 1, "", "sem"], [185, 4, 1, "", "skewness"], [186, 4, 1, "", "std"], [187, 4, 1, "", "var"]], "mqr.process.Specification": [[189, 4, 1, "", "lsl"], [190, 4, 1, "", "target"], [191, 4, 1, "", "usl"]], "mqr.process.Summary": [[193, 3, 1, "", "__getitem__"], [194, 4, 1, "", "capabilities"], [195, 4, 1, "", "data"], [196, 4, 1, "", "samples"]], "mqr.spc": [[197, 2, 1, "", "ControlParams"], [203, 2, 1, "", "ControlStatistic"], [206, 2, 1, "", "EwmaParams"], [220, 2, 1, "", "MewmaParams"], [232, 2, 1, "", "RParams"], [245, 2, 1, "", "SParams"], [256, 2, 1, "", "ShewhartParams"], [263, 2, 1, "", "XBarParams"], [302, 0, 0, "-", "rules"], [303, 0, 0, "-", "util"]], "mqr.spc.ControlParams": [[198, 3, 1, "", "asdict"], [199, 3, 1, "", "lcl"], [200, 3, 1, "", "statistic"], [201, 3, 1, "", "target"], [202, 3, 1, "", "ucl"]], "mqr.spc.ControlStatistic": [[204, 4, 1, "", "nobs"], [205, 4, 1, "", "stat"]], "mqr.spc.EwmaParams": [[207, 4, 1, "", "L"], [208, 3, 1, "", "asdict"], [209, 3, 1, "", "from_data"], [210, 3, 1, "", "from_stddev"], [211, 3, 1, "", "lcl"], [212, 4, 1, "", "lmda"], [213, 4, 1, "", "mu_0"], [214, 4, 1, "", "name"], [215, 4, 1, "", "sigma"], [216, 3, 1, "", "statistic"], [217, 4, 1, "", "steady_state"], [218, 3, 1, "", "target"], [219, 3, 1, "", "ucl"]], "mqr.spc.MewmaParams": [[221, 3, 1, "", "asdict"], [222, 4, 1, "", "cov"], [223, 3, 1, "", "from_data"], [224, 3, 1, "", "lcl"], [225, 4, 1, "", "limit"], [226, 4, 1, "", "lmda"], [227, 4, 1, "", "mu"], [228, 4, 1, "", "name"], [229, 3, 1, "", "statistic"], [230, 3, 1, "", "target"], [231, 3, 1, "", "ucl"]], "mqr.spc.RParams": [[233, 3, 1, "", "asdict"], [234, 4, 1, "", "centre"], [235, 3, 1, "", "from_data"], [236, 3, 1, "", "from_range"], [237, 3, 1, "", "lcl"], [238, 4, 1, "", "name"], [239, 4, 1, "", "nsigma"], [240, 3, 1, "", "se"], [241, 4, 1, "", "sigma"], [242, 3, 1, "", "statistic"], [243, 3, 1, "", "target"], [244, 3, 1, "", "ucl"]], "mqr.spc.SParams": [[246, 3, 1, "", "asdict"], [247, 4, 1, "", "centre"], [248, 3, 1, "", "from_data"], [249, 3, 1, "", "lcl"], [250, 4, 1, "", "name"], [251, 4, 1, "", "nsigma"], [252, 3, 1, "", "se"], [253, 3, 1, "", "statistic"], [254, 3, 1, "", "target"], [255, 3, 1, "", "ucl"]], "mqr.spc.ShewhartParams": [[257, 3, 1, "", "asdict"], [258, 3, 1, "", "lcl"], [259, 3, 1, "", "se"], [260, 3, 1, "", "statistic"], [261, 3, 1, "", "target"], [262, 3, 1, "", "ucl"]], "mqr.spc.XBarParams": [[264, 3, 1, "", "asdict"], [265, 4, 1, "", "centre"], [266, 3, 1, "", "from_data"], [267, 3, 1, "", "from_range"], [268, 3, 1, "", "from_stddev"], [269, 3, 1, "", "lcl"], [270, 4, 1, "", "name"], [271, 4, 1, "", "nsigma"], [272, 3, 1, "", "se"], [273, 4, 1, "", "sigma"], [274, 3, 1, "", "statistic"], [275, 3, 1, "", "target"], [276, 3, 1, "", "ucl"]], "mqr.spc.rules": [[277, 1, 1, "", "aofb_nsigma"], [278, 1, 1, "", "combine"], [279, 1, 1, "", "limits"], [280, 1, 1, "", "n_1side"], [281, 1, 1, "", "n_trending"]], "mqr.spc.util": [[282, 1, 1, "", "alarm_subsets"], [283, 1, 1, "", "c4"], [284, 1, 1, "", "c4_fn"], [285, 1, 1, "", "d2"], [286, 1, 1, "", "d2_integral"], [287, 1, 1, "", "d3"], [288, 1, 1, "", "d3_integral"], [289, 1, 1, "", "group_consecutives"], [290, 1, 1, "", "solve_arl"], [291, 1, 1, "", "solve_h4"]], "mqr.transforms": [[292, 1, 1, "", "zscore"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "terms": {"": [5, 29, 45, 46, 47, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 83, 103, 116, 125, 148, 149, 192, 198, 208, 221, 233, 245, 246, 250, 253, 256, 257, 264, 266, 283, 285, 287, 288, 290, 295, 312, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349], "0": [6, 7, 12, 15, 20, 25, 35, 36, 45, 46, 47, 50, 62, 63, 64, 68, 69, 72, 77, 80, 81, 84, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 118, 119, 120, 121, 150, 151, 153, 160, 180, 192, 278, 288, 291, 295, 308, 312, 327, 328, 329, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349], "00": 349, "000": [343, 347], "0000": 348, "000000": 341, "000000000000001": 349, "000053750000001": 348, "0001": 348, "0002": 348, "0004": 348, "0005": 348, "0006": 348, "0007": 348, "0008": 348, "0009": 348, "0009999999999998899": 295, "001": [347, 349], "0010": 348, "0011": 348, "0012": 348, "001277": 347, "0013": 348, "00138": 343, "001397": 343, "0014": 348, "0015": 348, "0017": 348, "0018": 348, "001811": 343, "001862": 343, "0018739437029978527": 348, "0019": 348, "002": 348, "0020": 348, "0021": 348, "0023": 348, "0024": 348, "0025": 348, "0026": 348, "0027": 348, "0028": 348, "0029": 348, "003": [192, 349], "00314": 349, "0032": 348, "003208": 343, "0033": 348, "0035": 348, "0036": 348, "0037": 348, "0038": 348, "004": 192, "0040": 348, "0040775": 192, "00408610": 349, "004122": 343, "004160": 349, "0045": 348, "0046": 348, "004760": 349, "008": 347, "01": [84, 343, 346, 347], "011": 349, "01114": 349, "012": 192, "01372": 342, "0137241005969062": 342, "0160": 349, "017": 347, "0189": [192, 349], "02": 192, "02371032779215975": 50, "02473": 343, "025": 349, "03": [160, 192, 343, 347, 348], "030": 349, "031": 349, "0319": 349, "032159": 192, "032887": 349, "0328870": 349, "033": [192, 349], "033160": 349, "03352": 343, "03715": 343, "03738": 343, "03865": 343, "039": 347, "03944": 343, "03984": 343, "04": 153, "040865942695342376": 295, "04256": 343, "04265": 343, "04326": 343, "0489": 192, "04891": 349, "05": [84, 95, 96, 120, 121, 192, 295, 342, 343, 349], "054": 349, "05664": 343, "06": 342, "060156": 192, "060174": 349, "0601740": 349, "065132": 349, "065144": 192, "066667": 348, "06e": 153, "08652": 343, "087295": 192, "087372": 349, "1": [1, 4, 7, 9, 12, 15, 24, 30, 35, 36, 45, 46, 47, 50, 65, 66, 67, 84, 93, 94, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 141, 150, 151, 153, 160, 192, 206, 216, 277, 278, 279, 280, 281, 284, 286, 288, 289, 290, 295, 305, 306, 307, 308, 312, 316, 317, 327, 328, 336, 341, 342, 343, 344, 346, 347, 348, 349], "10": [12, 15, 35, 84, 94, 102, 277, 279, 280, 281, 289, 295, 312, 341, 343, 344, 346, 347, 348, 349], "100": [341, 342, 343, 344], "101": [93, 349], "1087": 343, "10px": [148, 149], "11": [15, 94, 192, 277, 280, 281, 312, 341, 343, 344, 348, 349], "110": 341, "116": 349, "12": [103, 277, 279, 280, 281, 312, 341, 348, 349], "120": [160, 192, 349], "120120120120120": 349, "120550": 349, "12064": 192, "123": 349, "127": 349, "1294194915": 341, "13": [192, 277, 279, 280, 341, 348, 349], "132": 347, "133": 93, "139": 347, "14": [192, 341, 347, 348, 349], "145": 349, "147": [153, 160, 192, 349], "148": 349, "149": [160, 192, 349], "15": [12, 35, 192, 291, 341, 348, 349], "150": [153, 160, 192, 349], "152": 349, "153": [153, 160, 192, 349], "154": 192, "155": [347, 349], "158": 192, "159": 349, "16": [93, 295, 341, 344, 347, 348, 349], "160": [192, 349], "161": 192, "162": 349, "163": 349, "164": 192, "1689": 347, "16908": 192, "16922": 349, "17": [93, 94, 343, 347, 348], "171": 349, "172": 349, "173": 192, "17330": 349, "1734": [160, 192], "174": 349, "17414": 349, "18": [343, 348], "18710": 349, "1874": 192, "18817": 192, "18837": 349, "19": [192, 347, 348, 349], "190": 349, "191910": 349, "192": 343, "19203": 192, "1936": 102, "195": 341, "1957": 341, "197": 343, "1979": 192, "19792": 349, "1986": 343, "1998": [93, 94], "1e00af": 346, "1st": [160, 192, 349], "2": [1, 9, 15, 36, 50, 93, 94, 102, 141, 150, 151, 153, 192, 216, 277, 278, 284, 288, 289, 290, 295, 305, 306, 307, 308, 312, 316, 317, 327, 336, 341, 342, 343, 344, 346, 347, 348, 349], "20": [12, 35, 192, 290, 295, 327, 328, 342, 343, 345, 346, 347, 348, 349], "2000": 94, "2001": 93, "2002": 102, "2006": [45, 46, 47], "2009": [141, 348], "2010": 4, "2012": [7, 102], "2013": 103, "2017": [290, 341], "202": 343, "2024": 2, "2065": 343, "2096641184463826e": 342, "20966e": 342, "21": [348, 349], "211": [102, 343], "214": [343, 349], "2160": 192, "2163": 349, "22": [102, 160, 192], "2219": 349, "2229": 343, "2232": 103, "2243": [103, 343], "23": 343, "230": 343, "234": [192, 349], "23411": 349, "236": 343, "23653": [160, 192], "23671": 349, "23796": 192, "23807": 349, "238071": 349, "239": 343, "24": 347, "241": 341, "24527": 192, "24530": 349, "245300": 349, "247": 343, "25": [295, 312, 342, 344, 349], "2553": 343, "25th": 160, "26": 347, "261": 347, "264": 347, "27": [160, 192, 343], "2720": 349, "276": 343, "277": 347, "28": [102, 347, 349], "280": 94, "2828": 192, "2830": [347, 349], "288": 94, "2881073311024548": 295, "289": 343, "293": 347, "298688524590176": 342, "2987": 342, "2sigma": [277, 278], "2x": 346, "3": [2, 9, 15, 93, 102, 150, 151, 152, 153, 192, 232, 235, 236, 239, 245, 248, 251, 263, 266, 267, 268, 271, 277, 278, 279, 280, 281, 295, 305, 308, 312, 319, 327, 328, 329, 336, 341, 342, 343, 344, 346, 347, 348, 349], "300": 346, "3023": 347, "3172": 349, "31725": 349, "31780": 192, "32": 341, "33": [343, 349], "3398": 343, "34012": [160, 192], "34013": 349, "34261": [160, 192], "342620": 349, "347": 343, "348": 4, "35": [192, 295], "355": 349, "3568": 343, "357": 4, "36": [45, 46, 47, 344], "361": 349, "365": 343, "37": 347, "37200": 349, "37247": 192, "37670": 349, "3768": [160, 192], "37921": 349, "37947": 192, "380": 349, "3823085463760205": 348, "39": [343, 347], "3d": 347, "3rd": [160, 192, 349], "3x": 346, "4": [4, 15, 50, 93, 94, 102, 151, 192, 277, 278, 281, 289, 295, 307, 312, 341, 342, 343, 344, 345, 346, 347, 348, 349], "40": [93, 295, 329], "400": 346, "41": [45, 46, 47, 343], "4109": 347, "411": 349, "414": 347, "414214": 341, "42": 4, "421": 349, "4229": 347, "423": 343, "4263": 347, "43": [343, 347], "431": 347, "437": 102, "44": 343, "442": 102, "444": 343, "4442": 349, "4443": 192, "45": [84, 288], "460": 192, "460164": 349, "475": 343, "48": 343, "481": 192, "481161": 349, "485870": 349, "48588": [160, 192], "49": [290, 344], "496": 347, "5": [12, 15, 35, 80, 81, 84, 102, 141, 150, 151, 152, 153, 160, 192, 277, 278, 295, 306, 308, 312, 316, 317, 327, 328, 336, 341, 343, 344, 345, 346, 347, 348, 349], "50": [312, 349], "505": [192, 349], "50515": 349, "51": 192, "512": 343, "51410": 349, "516": 349, "518": 349, "52": 347, "522": 343, "538": 7, "54": 94, "541": 7, "542": 349, "552": 347, "56": [102, 160, 192], "5620": 349, "5634": [192, 349], "566667": 348, "568": 347, "571": 349, "57219": 192, "572214": 349, "5784": 347, "587576": 342, "5875763737495605": 342, "58e": 349, "59": [45, 46, 47], "5g": 160, "5m": 295, "5px": [148, 149], "5x5": [153, 160, 192, 308, 349], "6": [15, 50, 126, 150, 151, 153, 289, 308, 312, 316, 317, 327, 328, 329, 341, 343, 344, 346, 347, 348, 349], "60": [343, 349], "61": 343, "61769145362398": 348, "619": 349, "62": 349, "620": 349, "62e": 349, "63": [342, 343], "633": 349, "63426": 349, "63437": 192, "639": 192, "639154": 349, "64": [147, 344], "642": 192, "642158": 349, "6495": 347, "65209454185206": 295, "65267806948644": 295, "656": 349, "661": 349, "67": 349, "697": 347, "6983": 347, "699e": 343, "7": [15, 141, 277, 278, 279, 280, 281, 289, 312, 327, 328, 329, 341, 343, 344, 347, 348, 349], "701": 349, "702": 347, "70213": 192, "70216": 349, "706": 347, "7148": 349, "717": 349, "72": [343, 347, 349], "735": 349, "7428299075363056": 295, "75643": 192, "756452": 349, "75th": 160, "77799": 349, "777990": 349, "77835": 192, "78": 290, "784": 349, "7853981633974483": 349, "8": [15, 93, 94, 103, 153, 192, 280, 281, 289, 312, 336, 341, 342, 343, 344, 345, 346, 347, 348, 349], "80": 342, "800000": 348, "806": 349, "81": 344, "8155": 347, "82": 349, "8244": 343, "828427124746192": 50, "83": 103, "833": [192, 349], "83313": 349, "833333": 348, "83e": 153, "84": 347, "844": 153, "8443": 347, "8446": 347, "85": 102, "852": 153, "857": 93, "8598714945002754": 348, "86": 348, "862073540422806": 342, "8621": 342, "863": 347, "87": 192, "872": [93, 349], "8728715609439694": 295, "873": 94, "88": 347, "880": 349, "89": [102, 192, 290, 343, 349], "890": 94, "89417": 192, "894350": 349, "9": [15, 102, 103, 277, 279, 280, 281, 312, 341, 343, 344, 347, 348, 349], "90": [295, 343], "9019": 192, "9020": 349, "914": 349, "9151": 347, "92": 343, "9264": 192, "9265": 349, "932": 347, "93911": 349, "941": 349, "946": 349, "948": 349, "95": [6, 7, 45, 62, 63, 64, 80, 93, 94, 102, 103, 111, 112, 118, 119, 160, 192, 295, 308], "951": 349, "952": 349, "9531": 343, "96": 343, "9684": 343, "97": [160, 192, 349], "9720": 349, "9738": 347, "9750": 347, "979": 349, "98": [36, 151, 342, 345], "99": [343, 347], "9915444093872248": 295, "996": 343, "9961": 348, "9963": 348, "9964": 348, "9965": 348, "9966": 348, "9968": 348, "9972": 348, "9973": 348, "9976": 348, "9977": 348, "9978": 348, "9979": 348, "9980": 348, "9981": 348, "9982": 348, "9983": 348, "9984": 348, "9985": 348, "9986": 348, "9987": 348, "9988": 348, "9989": 348, "9990": 348, "9991": 348, "9992": 348, "9993": 348, "9994": 348, "9995": 348, "9996": 348, "9997": 348, "9998": 348, "9999": 348, "A": [4, 5, 6, 7, 8, 9, 12, 23, 25, 29, 30, 33, 35, 45, 46, 47, 50, 78, 93, 94, 102, 126, 137, 277, 278, 279, 280, 281, 289, 292, 312, 327, 328, 343, 344, 346, 347, 349], "AND": 348, "And": 312, "As": [12, 35, 340, 346, 348], "But": 347, "For": [1, 12, 35, 50, 84, 102, 107, 141, 151, 259, 312, 341, 344, 345, 346, 348, 349], "If": [308, 341, 344, 348, 349], "In": [84, 153, 160, 206, 232, 245, 263, 291, 341, 343, 344, 345, 346, 347, 348], "It": [1, 147, 198, 208, 221, 233, 246, 257, 264, 301, 344, 346, 348], "No": 344, "Not": 33, "OR": 348, "Of": 349, "On": [46, 278, 346], "One": [278, 295], "Or": 341, "That": [192, 220, 278, 347, 348], "The": [0, 1, 4, 5, 6, 7, 9, 10, 12, 17, 23, 25, 29, 30, 32, 35, 36, 45, 46, 47, 74, 93, 94, 102, 147, 148, 149, 151, 153, 198, 199, 200, 202, 206, 208, 211, 219, 221, 233, 246, 257, 258, 259, 260, 262, 264, 277, 278, 280, 281, 283, 284, 285, 287, 288, 290, 291, 292, 295, 301, 308, 312, 317, 327, 328, 329, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "There": [1, 336, 340, 341, 344, 345, 346], "These": [301, 341, 343, 347, 348, 349], "To": [1, 278, 339, 341, 344, 346, 347, 348, 349], "Will": [306, 307, 326], "__repr__": [148, 149], "_repr_html_": [148, 149, 344], "a1": 349, "a_2": 348, "ab": 341, "abc": 15, "about": [1, 266, 340, 341, 346, 347, 348], "abov": [36, 45, 62, 63, 80, 84, 93, 94, 111, 112, 118, 119, 278, 295, 341, 344, 345, 346, 348], "absolut": 47, "abstract": [199, 200, 201, 202, 258, 259, 260, 261, 262], "accept": [329, 345], "access": [5, 6, 7, 8, 9, 344], "accord": [46, 308, 348], "accuraci": 339, "achiev": [1, 84, 295], "action": [301, 344, 348], "activ": [1, 295], "actual": [50, 341, 347, 348], "ad": [19, 23, 49, 94, 345, 347], "ad_pvalu": 160, "ad_stat": 160, "add": [30, 312, 341, 346, 348], "addit": [206, 232, 245, 263, 295, 339, 344, 345, 346, 347], "addition": 341, "adequaci": [343, 347], "adf": 74, "adhesion_forc": [305, 306, 307, 336], "adj": [5, 94, 343, 347], "adjust": [5, 94, 346, 347], "adquaci": 343, "advanc": 1, "affin": [11, 12, 35, 341], "after": [10, 15, 147, 295, 344, 348], "afternoon": 348, "against": [49, 336, 348], "agent": 312, "agresti": [93, 94, 100], "aic": [5, 343, 347], "aim": 1, "akaik": 5, "alarm": [277, 278, 279, 280, 281, 282, 301, 344], "algorithm": [290, 346, 349], "alias": 341, "align": 346, "align_cont": [148, 149], "align_item": [148, 149], "all": [12, 23, 25, 33, 35, 50, 78, 83, 107, 197, 278, 295, 316, 318, 339, 341, 342, 344, 347, 348, 349], "allow": [198, 208, 221, 233, 246, 257, 264, 312, 341, 342], "along": [12, 35, 329, 341, 348], "alongsid": 344, "alpha": [20, 65, 66, 67, 84, 95, 96, 97, 98, 104, 105, 106, 107, 113, 114, 120, 121, 122, 123, 290, 295, 342, 345, 346], "alreadi": [206, 209, 210, 278, 344], "also": [1, 15, 147, 295, 301, 308, 336, 339, 340, 342, 344, 345, 346, 347, 348, 349], "alt": [50, 295], "altern": [46, 47, 50, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 81, 83, 84, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 295, 341, 342, 344], "altogeth": 336, "alwai": [224, 230, 341], "ambient": 349, "american": [94, 102], "amongst": 78, "an": [1, 6, 7, 10, 12, 15, 24, 35, 36, 45, 46, 47, 50, 84, 94, 111, 112, 118, 119, 124, 137, 151, 152, 192, 198, 206, 208, 209, 210, 221, 223, 233, 235, 246, 248, 257, 259, 264, 266, 267, 268, 277, 278, 279, 280, 281, 289, 290, 291, 295, 305, 307, 308, 320, 327, 328, 329, 336, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349], "analys": [1, 340, 341], "analysi": [1, 9, 304, 312, 341, 344, 347], "analyt": [45, 46, 47], "anderson": [49, 160, 192, 349], "ani": [1, 15, 279, 312, 339, 343, 344, 346, 348], "annal": 341, "annot": 7, "anoth": [1, 277, 278, 280, 281, 295, 336, 340, 341, 342], "anova": [0, 5, 6, 7, 8, 9, 78, 126, 141, 305, 306, 307, 336, 339, 341, 342, 343, 344], "anova_lm": 9, "anova_t": 141, "answer": [339, 341], "anywher": 348, "aofb_nsigma": [278, 348], "api": [1, 2, 126, 307, 336, 347, 348], "appear": [1, 50], "append": 341, "appli": [1, 10, 11, 33, 116, 336], "applic": [1, 4, 84, 339, 340], "approach": [7, 341], "appropri": [206, 341], "approx": [95, 96, 97, 98, 104, 106, 342, 348], "approxim": [94, 95, 96, 97, 98, 103, 104, 106, 107], "ar": [1, 4, 10, 15, 19, 23, 32, 36, 46, 47, 69, 74, 84, 107, 141, 152, 153, 160, 198, 200, 206, 208, 209, 220, 221, 223, 233, 235, 246, 248, 257, 260, 264, 266, 277, 278, 282, 289, 292, 295, 301, 305, 308, 312, 327, 328, 336, 339, 340, 341, 342, 344, 345, 346, 347, 348, 349], "arcsin": [97, 98], "arg": [33, 148, 149, 286, 288, 306, 307, 308, 327, 328, 329], "argument": [199, 200, 202, 211, 219, 258, 259, 260, 262, 269, 272, 276, 278, 283, 285, 287, 289, 295, 305, 317, 319, 320, 321, 322, 323, 324, 325, 341, 344, 345, 346, 348, 349], "arl": [220, 290, 291], "arl_0": 291, "around": [80, 147, 344, 347], "arrai": [15, 24, 151, 277, 278, 279, 280, 281, 289, 295, 312, 326, 341, 347, 348], "arrang": [147, 318, 343], "array_lik": [11, 15, 24, 45, 46, 47, 49, 62, 63, 64, 68, 69, 70, 72, 74, 75, 77, 78, 80, 81, 83, 111, 112, 115, 116, 118, 119, 124, 125, 160, 220, 289, 292, 306, 307, 321, 322, 323, 324, 325], "as_block": [15, 341], "asdict": 348, "aspect": 102, "assign": [25, 312, 344], "assist": 341, "associ": [50, 81, 160, 308], "assum": [341, 348], "assumpt": 347, "asuero": [45, 46, 47], "attribut": [10, 15, 36, 50, 84, 126, 137, 141, 148, 149, 153, 160, 188, 192, 206, 220, 232, 245, 263, 348, 349], "author": 93, "auto": [317, 346], "autom": [1, 344, 347, 348], "automat": [50, 126, 141, 192, 339, 343, 344, 346, 348, 349], "avail": [70, 104, 112, 120, 121, 122, 123, 342, 348], "averag": [7, 8, 210, 216, 229, 267, 268, 278, 291, 295, 306, 312, 347], "awar": 348, "ax": [150, 151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 336, 341, 343, 345, 347, 348, 349], "ax_left": 346, "ax_right": 346, "axes_intro": 344, "axhlin": [305, 306, 328, 346], "axi": [216, 305, 320, 323, 329, 341, 344, 346, 347], "axial": [15, 19], "axvlin": 319, "axvspan": [319, 327], "b": [15, 94, 277, 278, 289, 340, 341, 348, 349], "backend": 150, "backslash": [346, 349], "bad": 349, "bar": [277, 279, 309, 312, 320, 325, 327, 328, 344, 346, 348], "bar_kw": [309, 320, 325], "bar_var_pct": 344, "barker": 102, "bartlett": [116, 125], "base": [1, 4, 46, 63, 64, 68, 69, 78, 103, 107, 111, 118, 119, 124, 147, 153, 197, 198, 200, 206, 208, 220, 221, 233, 246, 256, 257, 260, 264, 344, 348], "basic": [339, 340, 341, 346], "batch": 349, "bayesian": [5, 93], "bbdesign": 341, "becaus": [1, 50, 278, 339, 344], "been": [32, 295, 348], "befor": [8, 295, 306, 307, 312, 326, 339, 344, 348], "begin": 290, "behaviour": 301, "behnken": 341, "being": [259, 348], "belong": 308, "below": [36, 45, 62, 63, 80, 93, 94, 111, 112, 118, 119, 153, 278, 339, 341, 343, 344, 345, 346, 347, 348], "benefit": [1, 102], "besid": 346, "bespok": 341, "best": [308, 318], "beta": [65, 66, 67, 84, 97, 98, 105, 106, 107, 113, 114, 122, 123, 295, 342, 346], "between": [8, 45, 63, 64, 69, 70, 72, 78, 93, 94, 100, 103, 105, 107, 109, 126, 295, 305, 308, 329, 339, 340, 344, 347, 348], "beyond": 277, "bi": 347, "bic": [5, 343, 347], "bigger": 278, "bin": [317, 346], "binari": 348, "binom": 99, "binom_test": 99, "binomi": [93, 95, 96, 97, 98, 104], "biometrika": 102, "bit": [312, 342, 349], "black": 347, "block": [15, 17, 30, 32, 341, 344], "block_nam": 29, "blue": [308, 347], "boilerpl": 150, "bold": [308, 349], "bone": [152, 349], "bone_angl": 349, "bone_ris": 349, "bone_run": 349, "bone_spac": 349, "bonferroni": 320, "bool": [5, 6, 7, 8, 9, 23, 63, 69, 126, 130, 131, 147, 206, 209, 210, 217, 277, 278, 279, 280, 281, 282, 289, 308, 316, 317, 321, 323, 327, 348], "both": [4, 36, 45, 47, 62, 63, 64, 80, 93, 94, 102, 103, 111, 112, 118, 119, 278, 295, 340, 341, 342, 344, 346, 348], "bottom": [149, 347], "bound": [36, 45, 62, 63, 64, 80, 84, 93, 94, 102, 103, 111, 112, 118, 119, 295, 319, 342, 345], "boundari": 93, "box": [310, 311, 341, 344, 349], "box_kw": [310, 311, 318], "box_measurement_by_oper": 344, "box_measurement_by_part": 344, "boxplot": [318, 344, 346], "br": 2, "branch": 152, "bring": 1, "brown": 93, "bsd": 2, "build": [344, 348], "built": [1, 346], "burden": 1, "busi": 7, "c": [2, 15, 108, 141, 307, 329, 336, 341, 343, 346, 348], "c0": [344, 346], "c1": [344, 346], "c2": [345, 346], "c3": [345, 346], "c4": [284, 345], "c4_fn": 283, "c_4": 284, "caffo": [94, 100], "cai": 93, "calcaul": [111, 118, 119], "calcul": [4, 5, 6, 7, 8, 9, 36, 45, 46, 50, 63, 64, 65, 66, 67, 80, 84, 95, 96, 97, 98, 104, 105, 106, 107, 112, 113, 114, 120, 121, 122, 123, 141, 199, 200, 202, 206, 210, 211, 219, 220, 223, 224, 231, 237, 244, 249, 255, 258, 259, 260, 262, 267, 268, 269, 276, 278, 284, 286, 288, 292, 295, 308, 327, 328, 339, 340, 342, 343, 347, 348, 349], "calibr": 349, "call": [1, 5, 6, 9, 15, 49, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 80, 81, 83, 99, 105, 108, 109, 116, 125, 126, 291, 295, 307, 316, 320, 321, 322, 341, 342, 344, 346, 347, 348], "callabl": [33, 277, 278, 279, 280, 281, 288, 289, 292, 327, 341, 348], "can": [1, 4, 15, 141, 147, 148, 149, 198, 206, 208, 221, 232, 233, 245, 246, 257, 263, 264, 266, 267, 277, 278, 279, 280, 281, 292, 301, 305, 317, 327, 340, 341, 343, 344, 345, 346, 347, 348, 349], "cannot": 339, "capabl": [126, 192, 339, 341, 344], "captur": [147, 344], "care": [341, 347], "case": [341, 344, 347, 348], "categor": [7, 126, 137, 305, 307, 339, 340, 341], "categori": [7, 8, 305, 341, 343], "catplot": 347, "caus": [152, 281, 349], "cause1a": 152, "cause1b": 152, "cause1c": 152, "cause2a": 152, "cause2b": 152, "cause3a": 152, "cause3b": 152, "cause3c": 152, "cause4a": 152, "cause4b": 152, "cause4c": 152, "cause4d": 152, "cause5a": 152, "cause5b": 152, "cause5c": 152, "cause6a": 152, "cause6b": 152, "cause6c": 152, "cause_font_dict": 349, "cause_length": 349, "cause_spac": 349, "cc": [93, 94, 102, 342], "ccdesign": [20, 341], "cdf": 75, "cell": [147, 339], "center": [20, 148], "centr": [15, 23, 153, 232, 245, 263, 267, 268, 277, 278, 279, 280, 281, 327, 328, 341, 348], "centrelin": [232, 245, 263, 280, 319], "centrepoint": 21, "chang": [97, 122, 123, 290, 340, 341], "charact": [312, 349], "characteris": 341, "characterist": [74, 340, 341, 344], "chart": [1, 4, 206, 232, 245, 259, 263, 266, 277, 278, 279, 280, 281, 290, 291, 301, 312, 314, 315, 327, 344, 345], "check": [277, 291, 295, 347], "chemistri": [45, 46, 47], "chi": [106, 118, 120, 124], "chi2": [99, 102, 106, 111, 118, 120, 122, 124], "choos": 46, "ci": [36, 151, 342, 345], "ci_kw": 307, "circumscrib": 20, "class": [1, 10, 15, 34, 36, 50, 84, 126, 137, 141, 150, 153, 160, 188, 192, 197, 198, 203, 206, 208, 220, 221, 232, 233, 245, 246, 256, 257, 263, 264, 294, 300, 301, 341, 344, 348], "claus": 2, "clear": [347, 348], "close": [45, 62, 63, 64, 80, 93, 94, 111, 112, 118, 119, 150, 344, 346], "cm": 312, "cmap": 308, "cn": 346, "co": 346, "code": [0, 1, 151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 312, 327, 328, 329, 336, 339, 341, 344], "coeff": 347, "coeffici": [5, 6, 45, 46, 47, 72, 295, 308, 341, 347, 349], "cohen": [65, 66, 67, 295], "collect": [1, 17, 339, 341, 347], "color": [344, 345, 346, 349], "colormap": 308, "colour": [308, 327, 345, 349], "column": [5, 7, 8, 11, 15, 19, 23, 24, 25, 32, 126, 137, 153, 160, 192, 200, 209, 216, 220, 223, 229, 260, 266, 274, 292, 305, 308, 312, 327, 341, 343, 346, 347, 348], "combin": [277, 279, 280, 281, 307, 341, 344], "combine_rul": 278, "combn_fn": 278, "come": [1, 341], "commerc": 295, "common": [1, 344, 348, 349], "commonli": [1, 346], "compar": [75, 105, 107, 109, 295, 341, 348], "comparison": [93, 94, 102, 103, 295, 339, 340], "compat": 349, "complement": 84, "complex": 348, "compon": [141, 312, 344, 347], "compos": [1, 15], "comprehens": 344, "comput": [103, 347], "concaten": [15, 341], "conclud": 295, "conclus": 341, "condit": [301, 348, 349], "conduct": 341, "conf": [6, 7, 36, 45, 62, 63, 64, 80, 93, 94, 102, 103, 111, 112, 118, 119, 151, 160, 192, 295, 308, 342, 345], "conf_kw": 318, "conf_mean": 160, "conf_median": 160, "conf_quartile1": 160, "conf_quartile3": 160, "conf_var": 160, "confid": [1, 6, 7, 36, 45, 62, 63, 64, 80, 93, 94, 102, 103, 111, 112, 118, 119, 141, 151, 160, 295, 307, 308, 318, 339, 344, 345, 347, 349], "confidenceinterv": [45, 62, 63, 64, 80, 93, 94, 102, 103, 109, 111, 112, 118, 119, 151, 160, 164, 165, 166, 167, 168, 169, 295, 342, 345], "configur": [343, 347], "confint": [0, 36, 62, 63, 64, 80, 93, 94, 102, 103, 109, 111, 112, 118, 119, 295, 342, 344, 345], "confint_1sampl": [151, 342], "confint_poisson": 102, "confint_poisson_2indep": 103, "confint_proportions_2indep": 94, "confus": [278, 348], "consecut": [280, 282, 289, 348], "consecutive_rul": 289, "consid": 348, "consist": 340, "constant": [283, 284, 285, 286, 287, 288, 301, 348], "constrain": [305, 306, 307, 312, 336], "constraint": 341, "construct": [1, 7, 12, 15, 19, 20, 21, 22, 23, 24, 32, 35, 50, 126, 151, 153, 160, 192, 199, 202, 203, 206, 209, 210, 211, 219, 223, 232, 235, 236, 245, 248, 258, 259, 262, 263, 266, 267, 268, 297, 341, 343, 344, 345, 347, 348, 349], "constructor": [198, 208, 221, 233, 246, 257, 264, 348, 349], "consumpt": 349, "contain": [15, 25, 148, 149, 220, 295, 305, 316, 319, 341, 342, 348, 349], "context": [150, 345, 346], "continu": [93, 94, 102, 340, 343], "contour": 347, "contrast": [343, 347], "contribut": [309, 312, 339, 340, 343, 344, 348], "control": [1, 4, 141, 147, 197, 198, 199, 200, 202, 203, 206, 208, 209, 210, 211, 219, 220, 221, 223, 224, 231, 232, 233, 235, 236, 237, 244, 245, 246, 248, 249, 255, 256, 257, 258, 260, 262, 263, 264, 266, 267, 268, 269, 276, 277, 278, 279, 280, 281, 282, 290, 291, 302, 327, 328, 341, 344, 345], "control_kw": [314, 315, 328], "control_param": [327, 328, 348], "control_rul": 327, "control_statist": [327, 328, 348], "controlparam": [198, 199, 200, 201, 202, 258, 259, 262, 274, 277, 278, 279, 280, 281, 301, 327, 328], "controlparamet": 348, "controlstatist": [200, 260, 274, 277, 278, 279, 280, 281, 327, 328, 348], "conveni": [1, 150, 198, 208, 221, 233, 246, 257, 264, 341, 344, 349], "convent": 348, "converg": 291, "convers": [148, 149], "convert": [148, 149], "cook": 336, "cooks_dist": [320, 336], "cool": 349, "copi": [29, 33, 347], "copyright": 2, "corner": [15, 341, 347], "corr": [46, 47, 72], "correct": [93, 94, 102, 348], "correl": [0, 45, 46, 47, 72, 295, 308, 342, 344], "correspond": [12, 32, 33, 35, 203, 269, 272, 276, 278, 308, 317, 327, 339, 341, 342, 346, 348], "cost": 349, "could": [200, 260, 346, 348], "coull": 93, "counfound": 341, "count": [21, 23, 24, 30, 93, 99, 102, 103, 108, 109, 126, 280, 281, 342, 343, 347], "count1": [94, 100, 103, 109], "count2": [94, 100, 103, 109], "cov": 220, "covari": 220, "cover": [1, 339, 340], "cp": [153, 316, 317, 349], "cpk": [153, 349], "creat": [1, 25, 30, 141, 150, 206, 277, 278, 279, 280, 281, 292, 295, 312, 320, 336, 340, 341, 344, 345, 346, 347, 348, 349], "creation": [341, 344], "criterion": 5, "critic": [45, 46, 47], "cross": [1, 343], "crossan": 2, "css": 346, "csv": [153, 160, 192, 305, 306, 307, 308, 312, 336, 341, 343, 348, 349], "ctrl_stat": 348, "cumsum": 346, "current": [12, 35, 45, 70, 83, 345], "cursor": 344, "curv": [329, 344], "custom": [126, 345], "customis": [344, 346], "cutoff": 74, "cycl": 346, "cycler": 346, "d": [93, 141, 341, 348], "d1": 15, "d2": [15, 286, 288], "d2_fn": 288, "d2_integr": 285, "d3": 288, "d3_integr": 287, "d_2": [286, 288, 348], "d_3": 288, "dai": [312, 348], "darl": [49, 160, 192, 349], "dasgupta": 93, "dashboard": 348, "dat": 312, "data": [1, 62, 126, 153, 160, 192, 198, 206, 208, 221, 232, 233, 245, 246, 257, 263, 264, 277, 278, 279, 280, 281, 292, 295, 305, 306, 307, 308, 312, 323, 327, 328, 336, 339, 341, 343, 344, 346, 349], "databas": 341, "datafram": [5, 6, 7, 8, 9, 15, 18, 25, 26, 32, 126, 128, 141, 142, 146, 160, 192, 195, 200, 209, 216, 220, 223, 229, 235, 248, 260, 266, 274, 277, 278, 279, 280, 281, 292, 305, 306, 308, 312, 327, 328, 341, 343, 344, 346, 347, 348, 349], "dataplot": 312, "date": [339, 341], "david": 7, "dblquad": 288, "dblquad_kw": 288, "ddof": [160, 192], "decai": [206, 209, 210, 290, 291], "decim": [6, 7], "decreas": [295, 348], "dedic": 339, "def": 278, "default": [19, 24, 29, 81, 105, 107, 109, 137, 147, 148, 149, 152, 288, 292, 309, 316, 317, 327, 346, 348, 349], "defect": [153, 295, 329, 339, 349], "defect_font_dict": 349, "defect_rang": 329, "defects_lt": 153, "defects_st": 153, "defectslt": [153, 349], "defectsst": [153, 349], "defin": [12, 32, 35, 126, 301, 328, 341, 343, 348], "definit": 137, "degre": [5, 288], "deliber": 341, "demonstr": [278, 341, 343, 346, 348], "densiti": [316, 317, 321, 344, 349], "density_kw": 321, "dep": 295, "depart": 2, "depend": [46, 200, 260, 288, 348], "deriv": [341, 348], "describ": [339, 340], "descript": [1, 50, 84, 160, 295, 344, 349], "design": [1, 2, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 33, 35, 188, 301, 339, 340, 348], "desir": [206, 218, 220, 230, 341], "destroi": [147, 344], "detail": [1, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 340, 341, 342, 343, 344, 346, 347, 348, 349], "detect": [301, 341, 348], "determin": [5, 36, 45, 62, 63, 64, 80, 93, 94, 102, 103, 111, 112, 118, 119, 288, 347], "develop": 348, "deviat": [3, 111, 112, 113, 114, 115, 116, 153, 160, 206, 232, 245, 252, 253, 254, 256, 259, 263, 266, 267, 277, 278, 292, 316, 317, 327, 328, 339, 348], "df": [7, 8, 343, 347, 348], "diagon": [308, 349], "diagram": [152, 344], "dict": [12, 33, 35, 152, 192, 194, 196, 198, 208, 221, 233, 246, 257, 264, 288, 305, 306, 307, 308, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 341, 345, 348], "dictionari": [12, 33, 35, 152, 198, 208, 221, 233, 246, 257, 264, 345, 348], "diff": [105, 107, 109, 295], "differ": [46, 47, 63, 64, 66, 67, 69, 70, 78, 94, 96, 100, 103, 105, 107, 109, 220, 278, 295, 341, 346, 349], "difficult": 1, "dimens": [220, 223, 229, 283, 285, 287, 290, 291, 341, 344, 348, 349], "dimension": [15, 24], "direct": 284, "directli": [1, 15, 22, 23, 120, 121, 148, 149, 279, 341, 344, 346, 347, 348], "disadvantag": 102, "discern": 141, "discrimin": 141, "discuss": [102, 339], "disk": 348, "displai": [36, 50, 147, 148, 149, 336, 339, 341, 343, 344, 348], "dist": [49, 74, 75, 295, 342], "distanc": [230, 232, 245, 263, 336], "distinct": 343, "distribut": [49, 50, 62, 63, 64, 68, 69, 74, 75, 95, 96, 97, 98, 102, 104, 106, 111, 118, 119, 120, 121, 124, 125, 151, 153, 256, 259, 263, 295, 316, 321, 341, 347], "div": [148, 149], "div898": [295, 312], "divid": 292, "dmaic": 341, "do": [312, 340, 344, 348], "doc": [108, 109, 295, 300, 341], "docstr": [1, 342], "document": [2, 105, 344, 346], "doe": [10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 33, 34, 35, 340, 341, 344, 346, 348], "doesn": 1, "don": [346, 347], "dot": [327, 347], "down": [281, 341], "draw": [4, 151, 152, 312, 321, 344, 348], "drawn": [327, 346, 348], "drew": 327, "dtype": [278, 312, 348], "du": 290, "due": 347, "dump": 348, "dx": [286, 288], "dy": 288, "dye": 349, "e": [4, 341], "each": [1, 15, 22, 30, 32, 33, 152, 192, 199, 202, 209, 211, 216, 219, 220, 229, 258, 259, 262, 269, 272, 274, 276, 278, 292, 305, 307, 308, 317, 320, 336, 341, 344, 346, 347, 348], "earlier": 341, "eas": 1, "easi": [1, 341, 348], "easier": [4, 344], "easili": [1, 341, 342], "effect": [1, 65, 66, 67, 84, 94, 95, 97, 98, 104, 106, 113, 114, 120, 121, 122, 123, 295, 306, 340, 341, 342, 344], "effici": [4, 266, 278, 341, 348], "efficieni": [3, 232, 266, 267], "eg": [1, 50, 149, 200, 260, 340, 341, 344, 345, 347], "eight": 348, "either": [15, 206, 278, 295, 327, 344, 348], "element": [29, 99, 148, 149, 278, 289, 306, 307, 326, 344, 345, 348], "eleven": 94, "els": [93, 94, 102, 103], "email": 348, "embed": 344, "emwa": 220, "encod": [147, 348], "end": [290, 348], "engin": [1, 2], "enough": [295, 341, 348], "ensur": [317, 339], "enter": 341, "entri": 308, "environ": [152, 349], "epprecht": 4, "equal": [4, 46, 72, 78, 83, 97, 98, 106, 107, 109, 122, 123, 125, 206, 288, 342], "equat": [103, 341, 346, 347], "equip": 349, "equival": 220, "error": [5, 160, 206, 232, 240, 245, 252, 259, 263, 272, 277, 278, 327, 341, 347, 348], "errorbar": 307, "escap": 346, "especi": 1, "estim": [3, 93, 94, 206, 232, 236, 266, 267, 341, 344, 347, 348], "eta": 290, "etc": [1, 192, 312, 340, 341, 344, 348], "evalu": [278, 284, 286, 288, 290], "even": 348, "evenli": 346, "event": [102, 103, 104, 105, 106, 107, 108, 109, 295, 342], "eventu": 347, "everi": 341, "everyth": [93, 94, 102, 103], "evid": 295, "ewma": [200, 206, 214, 220, 228, 260, 290, 291], "ewmaparam": [208, 209, 210, 211, 216, 218, 219, 348], "exact": [102, 108, 118, 119, 124], "exactli": [4, 12, 35, 341, 344], "exampl": [1, 10, 12, 15, 35, 36, 50, 84, 141, 150, 151, 152, 153, 160, 192, 200, 259, 260, 277, 278, 279, 280, 281, 289, 293, 294, 296, 297, 299, 300, 301, 302, 304, 305, 306, 307, 308, 312, 316, 317, 318, 319, 320, 326, 327, 328, 329, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "excel": [341, 344, 347], "except": 348, "exclud": [19, 148, 149, 344, 346], "execut": [339, 344], "exercis": 341, "exist": [1, 12, 19, 35, 341], "exp": 346, "expand": 341, "expect": [102, 232, 236, 243, 245, 254, 275, 347, 348, 349], "experi": [1, 10, 12, 15, 35, 126, 137, 339, 340, 346, 347], "experiment": [1, 15, 306, 344, 347], "explain": [340, 344], "explicit": 344, "explicitli": [344, 346], "explor": 341, "exponenti": [216, 229], "expos": [1, 341], "express": [12, 35, 50, 147, 152, 256, 341, 346], "extend": 1, "extent": [102, 103, 104, 108, 109], "extra": [1, 341], "extract": 347, "extrapol": [12, 35], "f": [5, 65, 66, 67, 102, 112, 116, 119, 121, 123, 125, 290, 295, 341, 342, 343, 346, 347, 349], "f_2": 286, "f_3": 288, "f_interact": 347, "fabric": 295, "face": 20, "factor": [7, 23, 25, 33, 209, 210, 220, 223, 290, 291, 305, 306, 307, 323, 336, 340, 341, 344, 347, 348], "factor_nam": [29, 323], "factor_tick": 323, "factori": [340, 347], "failur": 94, "fall": [160, 280], "fals": [5, 6, 7, 8, 9, 23, 63, 69, 206, 209, 210, 217, 308, 316, 317, 344, 348], "fast": 1, "faulti": 349, "featur": [1, 341, 344], "few": [1, 339, 341, 344], "fiduci": 102, "field": [1, 342], "fig": [150, 151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 312, 327, 328, 329, 330, 331, 336, 343, 344, 345, 346, 347, 348, 349], "fig_kw": 150, "figsiz": [151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 312, 327, 328, 329, 336, 344, 346], "figur": [147, 308, 319, 339, 343, 345, 346, 347, 348, 349], "file": [312, 348], "filenam": 150, "fill_between": 317, "fillstyl": 344, "final": [312, 336, 341], "find": [106, 290, 291, 344], "finder": 291, "first": [10, 29, 47, 94, 96, 98, 100, 103, 105, 107, 109, 152, 216, 278, 295, 308, 312, 336, 341, 346, 347, 348], "fishbon": [152, 344], "fisher": [36, 45, 46, 47, 295], "fit": [5, 6, 9, 126, 153, 160, 307, 308, 316, 320, 321, 322, 323, 324, 326, 336, 341, 343, 344, 347, 349], "fittedvalu": [336, 343, 347], "five": 141, "fix": [148, 149, 200, 210, 260, 267, 268, 344], "flatten": [306, 307, 312, 326, 344], "flexbox": [148, 149], "fligner": 83, "float": [6, 7, 10, 12, 13, 14, 19, 25, 35, 36, 45, 46, 47, 50, 62, 63, 64, 65, 66, 67, 68, 69, 77, 80, 81, 84, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 126, 141, 148, 151, 153, 154, 155, 156, 157, 160, 161, 162, 163, 172, 173, 188, 189, 190, 191, 201, 206, 207, 209, 210, 212, 213, 215, 220, 223, 225, 226, 232, 234, 235, 236, 239, 241, 245, 247, 248, 261, 263, 265, 266, 267, 268, 271, 273, 275, 277, 284, 286, 288, 290, 291, 292, 308, 316, 317, 318, 329], "float64": [36, 38, 39, 42, 43, 50, 56, 59, 60, 84, 85, 87, 88, 126, 136, 143, 145, 171, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 348], "fmea": 341, "focus": 341, "follow": [0, 93, 290, 339, 341, 343, 344, 345, 346, 347, 348, 349], "fontsiz": 349, "forc": 349, "form": [6, 7, 47, 95, 97, 98, 104, 106, 289, 349], "format": [5, 6, 7, 8, 9, 148, 149, 348], "formula": [126, 307, 336, 343, 347], "forward": 348, "found": 291, "four": [1, 278, 326, 336, 347, 348], "frac": [284, 288], "fracfact": 22, "freedom": 5, "from": [1, 4, 5, 6, 7, 11, 12, 15, 19, 20, 21, 22, 23, 24, 30, 35, 47, 49, 50, 62, 69, 94, 112, 120, 121, 125, 141, 148, 149, 152, 160, 192, 200, 206, 209, 210, 223, 230, 232, 235, 236, 245, 248, 260, 263, 266, 267, 268, 278, 283, 284, 285, 287, 291, 292, 295, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 320, 321, 322, 323, 324, 325, 326, 327, 328, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349], "from_": [15, 341], "from_axi": 341, "from_ccdesign": 341, "from_centrepoint": [15, 341], "from_data": 348, "from_fracfact": [15, 341], "from_full_fact": 15, "from_fullfact": 341, "from_level": 341, "from_map": 341, "from_rang": 348, "frozen_design": 341, "full": 347, "fullfact": [23, 341], "fulli": 29, "function": [1, 33, 44, 48, 61, 71, 73, 76, 79, 82, 92, 101, 107, 110, 117, 147, 197, 230, 256, 259, 277, 278, 279, 280, 281, 284, 288, 289, 292, 293, 295, 298, 299, 302, 303, 304, 332, 333, 334, 335, 337, 338, 341, 342, 344, 346, 347, 348, 349], "further": [160, 295, 339, 341, 348], "g": [4, 45, 46, 47, 93, 94, 341], "galleri": 346, "gamma": 284, "garwood": 102, "gate": 349, "gather": 290, "gaug": [126, 297, 339, 340, 343, 349], "gauss": 290, "gaussian": [46, 316, 317, 347], "gen": 22, "gener": [1, 22, 50, 277, 280, 281, 283, 285, 287, 341, 346, 349], "geometr": 7, "get": [2, 291, 341], "github": 312, "give": [1, 149, 341, 344, 347], "given": [33, 206, 284, 292, 295, 317, 341, 344, 349], "global": 345, "glue": [305, 306, 307, 336], "go": [341, 344], "goal": [1, 295, 340, 341], "goe": 278, "gonz\u00e1lez": [45, 46, 47], "good": [1, 160, 348], "gov": [295, 312], "grab": 344, "grab_figur": [339, 343, 344, 347], "graham": 7, "graph": [309, 312, 320, 344], "graphic": [151, 343], "greater": [4, 46, 47, 50, 64, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 81, 84, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 295, 348], "grid": [308, 312], "gridspec_kw": 150, "group": [8, 29, 74, 141, 282, 289, 305, 347], "groups_i": 347, "groups_x": 347, "grr": [1, 137, 141, 309, 310, 311, 313, 314, 315, 343, 344], "grr_tabl": 309, "guess": 291, "guid": [1, 2, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "h": [4, 50, 102, 290], "h0": 342, "h0_corr": 46, "h0_corr1": 47, "h0_corr2": 47, "h0_diff": [69, 100], "h0_mean": 68, "h0_median": 77, "h0_prop": [95, 97, 99], "h0_quant": 81, "h0_rate": [104, 106, 108], "h0_std": 115, "h0_valu": [105, 107, 109, 295], "h0_var": [115, 124], "h1": 342, "h4": [220, 290, 291], "h_4": 290, "h_kw": 345, "ha": [1, 12, 32, 35, 74, 148, 149, 153, 199, 200, 202, 206, 209, 210, 258, 259, 260, 262, 278, 288, 295, 339, 341, 342, 344, 346, 347, 348, 349], "hand": [4, 46, 278, 348, 349], "handbook": 295, "handl": [340, 346], "have": [23, 32, 63, 148, 149, 278, 295, 306, 307, 326, 340, 341, 342, 343, 345, 346, 348], "haven": [1, 348], "head": [343, 349], "head_spac": 349, "header": 312, "heavi": 347, "height": [150, 343, 344], "height_ratio": 349, "help": [1, 341, 347], "henderson": 4, "here": [50, 278, 295, 340, 341, 344, 346, 348], "hexadecim": 346, "high": [341, 347], "highlight": 348, "hist": 346, "hist_kw": [308, 318, 321], "histogram": [308, 316, 317, 318, 321, 326, 344, 347, 349], "histogram_bin_edg": 317, "histor": [198, 206, 208, 209, 221, 223, 232, 233, 235, 245, 246, 248, 257, 263, 264, 266, 327, 328], "histplot": [150, 308, 321, 344, 346], "histrogram": 344, "hold": [344, 349], "homogen": 83, "hopper": 349, "horizont": [148, 346, 347], "how": [126, 147, 295, 316, 317, 339, 340, 341, 344, 346, 347, 348], "howev": 1, "hstack": [147, 339, 344, 347], "htm": 295, "html": [36, 50, 84, 147, 148, 149, 153, 160, 192, 344], "http": [295, 312, 344], "humid": 349, "hunter": 341, "hyp_kw": [151, 345], "hyp_mean": 318, "hyp_valu": [151, 345], "hypercub": 341, "hypothes": [74, 341], "hypothesi": [1, 46, 47, 49, 50, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 81, 83, 84, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 151, 295, 339, 341], "hypothesis": [50, 151, 318, 344], "hypothesistest": [46, 47, 49, 68, 69, 70, 72, 74, 75, 77, 78, 81, 83, 99, 100, 108, 115, 116, 124, 125, 295, 342], "hyptest": [46, 47, 49, 50, 68, 69, 70, 72, 74, 75, 77, 78, 81, 83, 99, 100, 108, 115, 116, 124, 125, 342], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 17, 19, 23, 29, 30, 32, 35, 36, 45, 46, 47, 50, 70, 74, 78, 81, 83, 93, 94, 95, 96, 102, 103, 104, 107, 109, 111, 112, 120, 121, 122, 123, 141, 147, 148, 149, 151, 192, 198, 200, 206, 208, 209, 216, 220, 221, 224, 229, 233, 246, 257, 259, 260, 264, 277, 278, 279, 280, 281, 288, 292, 295, 301, 305, 308, 312, 316, 317, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "i_kw": 345, "id": [1, 137, 192, 274], "ideal": 348, "ident": [74, 198, 208, 221, 233, 246, 257, 264], "identifi": [339, 341, 343], "ie": [4, 17, 153, 160, 259, 316, 317, 342, 348], "ignor": 343, "ii": 9, "iii": 9, "illustr": 346, "iloc": 346, "imag": 344, "img": 147, "implement": [1, 45, 47, 95, 96, 102, 111, 197, 256, 295, 341, 344, 348], "import": [1, 4, 36, 50, 151, 152, 295, 307, 336, 341, 344, 345, 346, 348], "improv": [1, 290, 295, 340, 341], "in_kw": 328, "includ": [1, 15, 102, 126, 192, 301, 308, 309, 312, 339, 340, 341, 343, 346, 347, 348, 349], "include_interact": [126, 312, 343], "include_intercept": 126, "increas": [341, 348, 349], "independ": [50, 74, 94, 301, 344, 348], "index": [6, 15, 30, 31, 32, 193, 199, 200, 202, 203, 211, 219, 258, 259, 260, 262, 269, 272, 274, 276, 278, 283, 285, 287, 289, 327, 341, 344, 346, 347, 348, 349], "index_col": [305, 306, 307, 336], "index_label": 341, "indic": [282, 348], "ineffici": [232, 266, 267, 349], "inf": 345, "infer": [0, 1, 36, 44, 45, 46, 47, 48, 49, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 151, 339, 340, 341, 345], "inflat": 347, "influenc": [336, 344], "influence_stat": 320, "info": [291, 344], "inform": [1, 5, 295, 341, 348], "infti": [286, 288], "init_h4": 291, "initi": [291, 347], "initialis": [192, 344], "inject": 349, "inner": 347, "input": [32, 192, 278, 292, 339, 343], "insert": 349, "instanc": [209, 348], "instead": [295, 341, 344, 346, 348], "institut": 295, "int": [17, 21, 23, 30, 84, 91, 93, 94, 95, 96, 99, 100, 102, 103, 104, 105, 108, 109, 126, 127, 134, 160, 180, 210, 236, 245, 251, 267, 268, 277, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 312, 319, 329], "int_": [286, 288], "int_0": 290, "integ": 23, "integr": [286, 288], "intend": 160, "intens": 277, "inter": 160, "interact": [1, 126, 312, 313, 341, 343, 344], "interaction_t": 347, "intercept": [126, 347], "interest": 341, "interfac": [278, 295, 341, 342, 346, 347], "intern": 347, "internet": 344, "interpol": [12, 35], "interpret": [4, 293], "interv": [1, 6, 7, 36, 45, 62, 63, 64, 80, 93, 94, 102, 103, 111, 112, 118, 119, 141, 151, 160, 295, 307, 308, 318, 339, 344, 345, 346, 347, 349], "interval_kw": [151, 345], "invers": [97, 98, 341], "involv": 341, "io": [5, 6, 7, 8, 9], "ipython": [148, 149], "iqr": 160, "is_consecut": 289, "ishikawa": [344, 349], "ishikawa_kw": [152, 349], "isol": 25, "iter": [19, 36, 50, 153, 342], "itl": [295, 312], "its": [1, 147, 148, 149, 278, 289, 290, 292, 344, 348, 349], "itself": 340, "j": [7, 78, 83, 341], "jacobian": 288, "jeffrei": 93, "john": 341, "journal": [4, 102, 103, 290], "json": 348, "json_str": 348, "jupyt": [1, 36, 50, 84, 148, 149, 150, 153, 160, 344], "justify_cont": [148, 149], "justify_item": [148, 149], "k": [4, 49, 75, 103, 295, 349], "keep": [29, 340, 344], "kei": [12, 33, 35, 152], "kendal": 72, "kendalltau": 72, "kept": 341, "kevin": 2, "keyword": [33, 286, 288, 305, 306, 307, 308, 317, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 345], "killeen": 83, "knoth": 290, "know": 348, "known": [341, 348], "kolmogoroc": 49, "kolmogorov": [75, 160, 295], "kpi": [137, 160, 192, 348], "kpi1": [153, 160, 192, 308, 349], "kpi1kpi2kpi3kpo1kpo2": 349, "kpi2": [192, 349], "kpi3": [192, 349], "kpo1": [192, 349], "kpo2": [192, 308, 349], "krishnamoorthi": 103, "kruskal": [50, 78, 342], "ks_pvalu": 160, "ks_stat": 160, "kstest": 75, "kstest_norm": 49, "kulkarni": 102, "kurtosi": [160, 192, 349], "l": [93, 102, 206, 209, 210, 290], "label": [15, 17, 22, 24, 29, 30, 152, 278, 323, 341, 348], "labl": 192, "labor": 349, "lack": 349, "lambda": [289, 290, 341, 347], "larg": [74, 93, 342], "larger": [93, 153], "largest": 160, "last": [147, 277, 278, 347, 348], "later": [198, 208, 221, 233, 246, 257, 264], "latex": 346, "latin": 341, "layout": [305, 306, 307, 312, 336], "lcl": 348, "learn": 4, "least": [197, 256, 295, 340, 347, 349], "leav": 152, "lee": 103, "left": [148, 149, 278, 284, 288, 305, 316, 317, 341], "left_result": 278, "legendr": 290, "len": [19, 278, 341, 347, 348], "length": [46, 47, 72, 291, 305], "less": [4, 46, 47, 50, 64, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 81, 84, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 295, 308, 342, 348], "level": [6, 7, 10, 11, 12, 15, 17, 23, 24, 25, 32, 33, 35, 45, 62, 63, 64, 80, 84, 93, 94, 102, 103, 111, 112, 118, 119, 120, 121, 126, 151, 152, 160, 295, 307, 308, 323, 341, 347, 349], "leven": 83, "lib": 348, "librari": [1, 2, 15, 126, 339, 341, 342, 344, 346, 348], "lifetim": 1, "like": [1, 36, 50, 84, 148, 149, 192, 340, 341, 342, 344, 346, 347, 348, 349], "limit": [1, 36, 102, 188, 199, 202, 206, 209, 210, 211, 219, 220, 223, 224, 231, 232, 235, 236, 237, 244, 245, 248, 249, 255, 258, 259, 262, 263, 266, 267, 268, 269, 276, 278, 288, 290, 291, 319, 327, 345, 348, 349], "line": [1, 12, 35, 47, 148, 149, 305, 306, 308, 319, 328, 329, 344, 345, 347, 349], "line_i": 344, "line_kw": [305, 306, 308, 310, 311, 313, 314, 315, 319, 328, 329], "line_kwarg": 349, "line_part_operator_intn": 344, "line_x": 344, "linear": [5, 6, 9, 126, 307, 312, 320, 336, 339, 340, 341], "linear_model": [5, 6, 9, 126, 307, 320, 347], "linestyl": [345, 346], "linewidth": [344, 345, 346, 349], "linspac": [344, 346], "list": [5, 8, 15, 19, 20, 21, 22, 23, 24, 27, 33, 152, 160, 192, 278, 282, 289, 295, 305, 306, 307, 309, 312, 344, 347, 348], "literatur": 1, "lmda": [206, 209, 210, 220, 223, 290, 291], "load": [305, 306, 308, 312, 341, 348], "loc": [308, 348, 349], "locat": [348, 349], "log": 346, "logic": [278, 348], "logical_and": [278, 348], "logical_or": [278, 348], "long": [153, 317, 349], "long_kw": 317, "look": [1, 278, 341, 344, 347], "lookup": 348, "loss": 4, "lot": [1, 341, 344, 346], "low": [341, 347], "lower": [36, 84, 188, 199, 211, 224, 232, 237, 245, 249, 258, 263, 269, 279, 295, 308, 342, 345, 347, 348, 349], "lsl": [153, 188, 343, 349], "ly": 341, "m": [4, 103, 150, 343, 346], "m_kw": 345, "machin": [152, 349], "made": 340, "magenta": 346, "magnitud": [19, 259, 341], "mahmoud": 4, "main": [152, 295, 306, 341, 344, 345, 348], "main_effect": [344, 347], "make": [1, 151, 278, 290, 341, 344, 346, 347, 348], "manag": [150, 341, 345, 346, 349], "mani": [295, 316, 317, 340, 341, 345, 346, 348], "mann": 78, "mannwhitneyu": 78, "manual": [15, 341, 345, 349], "manufactur": [1, 2], "map": [12, 35, 126, 137, 152, 308, 312, 327, 341, 343], "maplotlib": 346, "margin": [148, 149], "mark": [277, 279, 280, 281, 327, 347, 348], "markdown": [148, 149], "marker": [327, 344, 345], "markers": 345, "marshal": 312, "match": [199, 202, 206, 258, 259, 262, 305, 348], "materi": [152, 349], "math": 346, "mathbf": 349, "mathemat": [340, 341], "mathrm": 348, "matplotlib": [1, 147, 150, 151, 152, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 345, 346, 349], "matrix": [344, 347, 349], "maximum": [160, 192, 349], "mea": [102, 104, 106, 108, 342], "mean": [1, 5, 47, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 102, 103, 151, 160, 192, 206, 209, 210, 216, 218, 220, 259, 263, 267, 268, 272, 274, 275, 278, 292, 295, 305, 307, 315, 318, 327, 328, 341, 342, 344, 348, 349], "mean_hist": 348, "mean_kw": [151, 305, 306, 345], "mean_sq": [343, 347], "meas1": [103, 105, 109], "meas2": [103, 105, 109], "measur": [7, 8, 72, 126, 137, 141, 152, 160, 192, 220, 312, 336, 341, 344, 346, 348, 349], "mechan": [2, 348], "media": 7, "median": [74, 77, 78, 160, 192, 342, 349], "medicin": [93, 94], "melbourn": 2, "menu": 342, "mesh": 347, "metadata": [312, 348], "method": [1, 7, 10, 15, 34, 36, 45, 46, 47, 50, 62, 63, 64, 68, 69, 70, 72, 74, 75, 77, 78, 83, 84, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 116, 118, 119, 120, 121, 122, 123, 124, 125, 141, 152, 197, 198, 200, 201, 206, 208, 220, 221, 232, 233, 245, 246, 256, 257, 260, 261, 263, 264, 266, 290, 295, 341, 342, 345, 348, 349], "metr": 295, "mewma": [220, 224, 290, 291], "mewmaparam": [221, 223, 224, 229, 230, 231, 348], "might": [4, 50, 341, 347, 349], "minimum": [160, 192, 349], "minor": 346, "miss": 346, "mix": 1, "modal": 347, "model": [1, 5, 6, 9, 126, 141, 307, 312, 320, 321, 322, 326, 336, 339, 340, 341, 346], "model_mean": [344, 347], "modifi": 290, "modul": [1, 295, 299, 301, 339, 340, 341, 343, 344, 347, 348, 349], "mold": 349, "moment": 103, "monitor": [1, 197, 199, 200, 201, 202, 203, 206, 256, 258, 259, 260, 261, 262, 277, 279, 280, 281, 290, 291, 327, 328, 339, 344, 348], "monoton": 348, "montgomeri": [141, 341, 348], "month": 312, "more": [1, 4, 17, 29, 216, 278, 291, 300, 312, 316, 317, 340, 341, 344, 346, 347, 348, 349], "morn": 348, "most": [1, 341, 344, 345, 346], "mostli": 344, "mould": 349, "mpc61": 312, "mqr": [0, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 50, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 137, 141, 147, 148, 149, 150, 151, 152, 153, 160, 188, 192, 193, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 211, 216, 218, 219, 220, 221, 223, 224, 229, 230, 231, 232, 233, 235, 236, 237, 240, 242, 243, 244, 245, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 339, 340, 341, 342, 343, 346, 347, 348, 349], "mqrpy": [293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 341, 342, 343, 344, 347, 348, 349], "msa": [0, 126, 137, 141, 309, 310, 311, 312, 313, 314, 315, 339, 341, 343, 344], "mu": [220, 230], "mu_0": [206, 210], "mu_o": 206, "much": [278, 339, 347], "multi": 341, "multipl": [83, 153, 206, 209, 210, 277, 339, 340, 341, 344], "multipli": [10, 344], "multivarait": 220, "multivari": [220, 228], "must": [33, 107, 199, 202, 211, 219, 258, 259, 262, 305, 306, 307, 326, 344, 348, 349], "n": [5, 21, 30, 93, 102, 108, 122, 123, 150, 160, 192, 277, 278, 280, 281, 283, 284, 285, 286, 287, 288, 290, 308, 329, 342, 343, 344, 346, 347, 348, 349], "n1": [103, 109], "n2": [103, 109], "n_1side": 348, "n_trend": 348, "name": [1, 6, 7, 8, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 33, 36, 50, 84, 126, 137, 152, 160, 206, 220, 232, 245, 263, 292, 295, 305, 307, 308, 312, 316, 323, 341, 342, 343, 344, 345, 347, 348, 349], "name_map": 343, "namemap": [126, 133, 144, 312, 343], "nan": [161, 162, 163, 171, 172, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 343, 346, 347], "nation": 295, "navig": 1, "nbatch": 349, "nbsp": [343, 347], "nbtool": [147, 148, 149, 339, 343, 344, 347], "ndarrai": [15, 181, 220, 222, 227, 283, 285, 287, 312, 326], "necessari": 348, "need": [1, 12, 33, 35, 206, 346, 348], "neg": [224, 308], "nest": 17, "new": [12, 30, 33, 35, 102, 103, 141, 278, 301, 341, 347, 348, 349], "newcomb": [93, 94], "next": [152, 343, 344, 348], "nice": 344, "nikola": 2, "nine": 102, "nist": [295, 312], "nklsxn": [293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 312, 341, 342, 343, 344, 347, 348, 349], "nob": [93, 95, 96, 97, 98, 99, 104, 105, 106, 107, 120, 121, 160, 199, 202, 203, 206, 210, 211, 219, 224, 231, 236, 237, 240, 244, 249, 252, 255, 258, 259, 262, 267, 268, 269, 272, 276, 348], "nobs1": [94, 100], "nobs2": [94, 100], "nois": 347, "non": [46, 50, 74, 224, 295, 296, 340, 341, 342], "none": [19, 24, 29, 30, 50, 51, 55, 81, 105, 107, 109, 126, 137, 150, 151, 152, 160, 164, 165, 166, 167, 168, 169, 170, 179, 181, 192, 224, 288, 289, 292, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 344], "nonparametr": [71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 295, 342], "norm": [49, 95, 96, 97, 98, 104, 106, 224, 230, 295, 327, 328, 342, 346, 347], "normal": [15, 49, 94, 95, 96, 97, 98, 103, 104, 106, 107, 153, 160, 192, 295, 316, 321, 344, 347, 348, 349], "normal_ad": 49, "normalis": 153, "note": [2, 23, 30, 36, 46, 47, 50, 102, 206, 211, 219, 220, 259, 266, 283, 285, 287, 288, 341, 346, 348], "notebook": [1, 36, 50, 84, 150, 153, 160, 192, 341, 342, 343, 347], "now": [336, 347, 348], "np": [15, 126, 151, 277, 278, 279, 280, 281, 289, 295, 312, 326, 327, 328, 339, 341, 342, 344, 345, 346, 347, 348], "nsensor": 349, "nsigma": [126, 232, 235, 236, 245, 248, 263, 266, 267, 268, 316, 317, 327, 343, 348], "null": [46, 47, 49, 50, 68, 69, 70, 72, 74, 75, 77, 78, 81, 83, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 151, 295, 341, 342], "num_display_fmt": 160, "num_distinct_cat": 141, "number": [5, 30, 47, 93, 94, 95, 96, 99, 100, 102, 103, 104, 105, 108, 109, 120, 121, 126, 141, 153, 160, 200, 203, 235, 236, 248, 260, 266, 267, 268, 269, 272, 274, 276, 277, 278, 280, 281, 290, 305, 306, 307, 308, 312, 329, 341, 343, 348], "numer": [15, 50, 98, 106, 107, 122, 123, 286, 288, 290], "numpi": [1, 15, 278, 295, 312, 317, 339, 341, 346], "o": [344, 346], "ob": 305, "obj": 348, "object": [141, 147, 153, 160, 192, 198, 208, 221, 233, 246, 257, 264, 305, 312, 341, 342, 344, 346, 348], "observ": [5, 74, 93, 94, 95, 96, 99, 100, 102, 103, 104, 105, 108, 109, 120, 121, 137, 160, 200, 203, 206, 209, 216, 220, 260, 266, 269, 272, 274, 276, 278, 305, 325, 326, 327, 328, 339, 340, 341, 344, 347, 348], "obsev": 160, "obviou": 347, "oc": 344, "off": [327, 341], "offset": 10, "often": [348, 349], "ohm": 312, "ol": [5, 126, 132, 307, 336, 340, 344, 347], "older": 4, "omit": [346, 347], "one": [17, 29, 30, 78, 102, 103, 104, 108, 109, 216, 259, 278, 280, 292, 295, 305, 312, 340, 341, 344], "onli": [23, 45, 47, 70, 74, 83, 95, 96, 99, 102, 103, 104, 111, 112, 118, 119, 120, 121, 122, 123, 124, 277, 278, 295, 312, 329, 346, 348, 349], "onlin": 312, "onto": [320, 344, 346, 347], "op": 349, "oper": [15, 126, 137, 192, 310, 312, 313, 314, 315, 339, 341, 343, 344, 348, 349], "optim": 291, "option": [5, 6, 7, 8, 9, 19, 20, 23, 24, 25, 29, 30, 45, 46, 47, 49, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 80, 81, 83, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 137, 147, 148, 149, 151, 152, 192, 206, 209, 210, 220, 232, 245, 263, 266, 288, 290, 291, 292, 305, 306, 307, 308, 309, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 341, 345, 346, 349], "orang": 347, "order": [29, 36, 50, 148, 149, 341, 346, 347, 348], "ordinari": [340, 347], "org": 344, "organis": [0, 1, 295, 340, 342, 349], "orient": 348, "origin": [1, 23, 292, 348], "orthogon": [20, 346], "other": [1, 12, 15, 25, 35, 46, 93, 94, 102, 103, 107, 147, 152, 192, 197, 256, 278, 301, 339, 342, 343, 344, 345, 347, 348, 349], "otherwis": [5, 6, 7, 8, 63, 69, 148, 149], "otto": 2, "out": [277, 292, 344, 348], "out_kw": 328, "outlier": [160, 192, 349], "output": [1, 23, 147, 148, 149, 220, 278, 339, 340, 344, 348], "outsid": [1, 151, 277, 278, 279, 346], "over": [7, 8, 29, 36, 50, 98, 102, 103, 108, 109, 216, 288, 319, 321, 327, 346, 347, 348], "overal": 306, "overali": 344, "overdetermin": 347, "overlai": [277, 278, 279, 336, 344, 346, 348], "overlap": [141, 340, 348], "overlin": 348, "overrid": 152, "overview": [45, 46, 47], "own": 348, "p": [5, 50, 160, 192, 290, 291, 308, 342, 347, 349], "p0": 97, "p1": [96, 98, 342], "p2": [96, 98, 342], "pa": [95, 97], "packag": [1, 2, 295], "pad": 349, "page": [339, 344, 345, 346], "pair": [8, 12, 35, 47, 64, 70], "palett": 346, "panda": [1, 5, 6, 7, 8, 9, 25, 32, 141, 160, 199, 200, 202, 203, 209, 211, 216, 219, 223, 229, 235, 248, 258, 259, 260, 262, 266, 269, 272, 274, 276, 277, 278, 279, 280, 281, 282, 292, 306, 308, 327, 339, 341, 346, 348], "parabola": 344, "param": [277, 278, 279, 280, 281, 327, 328, 348], "paramert": 152, "paramet": [5, 6, 7, 8, 9, 11, 12, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 33, 35, 45, 46, 47, 49, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 80, 81, 83, 84, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 147, 148, 149, 151, 152, 198, 199, 200, 202, 203, 206, 208, 209, 210, 211, 216, 219, 220, 221, 223, 229, 232, 233, 235, 236, 245, 246, 248, 257, 258, 259, 260, 262, 263, 264, 266, 267, 268, 269, 272, 274, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 341, 343], "parameteris": 348, "parametr": [295, 296, 340, 342], "params_bin": 348, "params_dict": 348, "parenthes": [344, 348], "part": [126, 137, 141, 311, 312, 313, 341, 343, 344, 349], "particular": [339, 340, 341, 348], "particularli": 1, "partli": 341, "pass": [9, 20, 22, 23, 93, 94, 100, 102, 103, 107, 122, 123, 126, 147, 198, 199, 202, 208, 221, 233, 246, 257, 258, 259, 262, 264, 269, 272, 276, 277, 279, 280, 281, 286, 288, 305, 306, 307, 308, 317, 319, 320, 321, 322, 323, 324, 325, 327, 329, 341, 343, 344, 345, 346, 347, 348, 349], "patil": 102, "pattern": 347, "pd": [126, 153, 160, 192, 277, 278, 279, 280, 281, 305, 306, 307, 308, 312, 327, 328, 336, 339, 341, 343, 344, 346, 347, 348, 349], "pdf": [151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 312, 316, 327, 328, 329, 336, 344, 347], "pearson": [45, 46, 47, 295, 308], "pellet": 349, "peopl": [152, 349], "per": [7, 8, 223, 292, 295, 348], "percent": [309, 344], "percentil": 160, "perform": [50, 290, 307, 340, 343, 349], "period": [102, 103, 104, 108, 109, 277], "phi": [286, 288], "physic": [339, 341], "pi": 346, "pickl": [341, 348], "pip": 1, "place": [344, 345], "plan": 1, "plane": [288, 347], "plastic": 349, "plot": [1, 147, 150, 151, 152, 277, 278, 279, 280, 281, 301, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 340, 341, 342, 343, 347, 348, 349], "plot_kw": [323, 324, 325], "plt": [151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 312, 327, 328, 329, 336, 344, 345, 346], "plu": 341, "png": [147, 151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 312, 327, 328, 329, 336, 344], "point": [12, 15, 19, 23, 32, 35, 160, 281, 282, 290, 327, 344, 346, 347, 348], "point_i": 344, "point_kw": 327, "point_x": 344, "poisson": [102, 103], "pool": [63, 69], "poor": 347, "popul": [62, 69, 292, 340], "posit": 308, "possibl": [289, 341], "possibli": [192, 341], "potenti": [153, 349], "power": [65, 66, 67, 84, 95, 96, 97, 98, 104, 105, 106, 107, 113, 114, 120, 121, 122, 123, 295, 341, 342], "power_1sampl": [97, 106, 122], "power_2sampl": [107, 123], "power_poisson_diff_2indep": 105, "power_poisson_ratio_2indep": 105, "powernam": 84, "pp": 7, "ppm": [153, 349], "pr": [5, 343, 347], "practic": [1, 348], "practis": [278, 341, 347, 348], "prc": 295, "pre": [148, 149, 348], "prec": 319, "precis": [339, 340], "predict": 341, "prefer": 4, "present": [94, 297, 298, 340, 349], "pressur": 349, "previou": 341, "primary_font_dict": 349, "primer": [305, 306, 307, 336, 344, 345], "print": [36, 308, 323, 341, 342], "probabl": [322, 326, 344, 347], "probe": 312, "problem": [152, 340, 341, 344, 347, 349], "probplot": 322, "probplot_kw": 322, "probscal": 322, "procedur": 349, "process": [0, 1, 3, 126, 153, 160, 188, 192, 193, 201, 203, 206, 209, 210, 218, 220, 223, 229, 230, 232, 235, 236, 245, 248, 261, 263, 266, 267, 268, 278, 279, 295, 302, 316, 317, 318, 319, 327, 328, 340, 341, 344], "produc": [1, 84, 106, 153, 160, 266, 346, 347, 348], "product": [1, 295, 339, 340, 348, 349], "project": 347, "properti": [50, 341], "proport": [1, 93, 94, 95, 96, 97, 98, 99, 100, 277, 341, 342], "proportion_confint": 93, "proportions_chisquar": 99, "proportions_ztest": 99, "propot": 98, "provid": [1, 2, 192, 220, 301, 308, 339, 340, 341, 344, 347, 348], "pttype": [15, 23, 29, 341], "publish": 1, "purpos": [1, 295], "put": 341, "pvalu": [50, 295, 342], "pydata": 344, "pydoe3": [1, 15, 20, 22, 23, 341], "pyplot": [305, 306, 308, 317, 319, 320, 321, 323, 324, 325, 327, 328, 329, 344, 345, 346], "python": [1, 2, 340, 341, 344, 348], "q": [80, 81], "quad": 286, "quad_kw": 286, "quadrat": 341, "quadratur": 290, "qualiti": [1, 4, 141, 290, 348], "quantifi": [339, 340, 341], "quantil": [80, 81, 342], "quantile_test": 81, "quantit": [339, 340], "quartil": [160, 192, 349], "quartile1": 160, "quartile3": 160, "queri": 312, "question": [339, 341], "quick": 344, "quicker": 288, "quickli": 339, "quit": 1, "r": [4, 5, 7, 93, 94, 232, 238, 242, 266, 312, 314, 343, 344, 347, 348], "r1": [105, 107], "r2": [105, 107], "r_bar": [236, 266, 267], "r_oper": 344, "ra": [104, 106], "rais": [46, 47], "randint": 341, "random": [74, 153, 160, 192, 295, 308, 327, 328, 341, 342, 347, 349], "randomis": [15, 29], "randomise_run": 341, "randomli": 341, "rang": [4, 160, 232, 236, 240, 242, 243, 263, 266, 267, 278, 314, 327, 329, 346, 348], "rank": [77, 78, 347], "rare": 348, "rate": [1, 102, 103, 104, 105, 106, 107, 108, 109, 153, 206, 295, 329, 342, 349], "rate1": 295, "rate2": 295, "rather": 220, "ratio": [105, 107, 109, 112, 114, 116, 119, 121, 123, 125, 141, 295, 344, 349], "raw": [327, 328, 336, 349], "rc_param": 150, "rcparam": 345, "rdbu": 308, "re": 343, "read": [341, 342, 344, 346], "read_csv": [153, 160, 192, 305, 306, 307, 308, 312, 336, 343, 348, 349], "readi": [198, 208, 221, 233, 246, 257, 264, 340, 341], "real": [47, 305, 347], "reason": 341, "recent": 344, "recommend": [93, 102], "reconstruct": 348, "recreat": 348, "red": [308, 327, 348], "redefin": 346, "reduc": [1, 150], "ref_level": 25, "refeject": 151, "refer": [1, 2, 7, 25, 45, 46, 47, 93, 94, 102, 103, 137, 141, 209, 210, 223, 235, 248, 266, 267, 268, 290, 327, 328], "reflect": [339, 341], "reg_kw": 308, "region": [316, 319, 327, 344, 348, 349], "regplot": 308, "regress": [0, 5, 6, 9, 126, 293, 307, 308, 320, 321, 322, 323, 324, 325, 326, 339, 341, 342, 344], "regression_result": [126, 343], "regressionresult": [5, 6, 9, 307, 320], "regressionresultswrapp": [126, 135], "relat": [1, 339, 341, 342, 343, 344, 347, 348, 349], "relationship": [151, 348], "reli": [340, 347], "reliabl": [1, 126, 343], "remov": [288, 349], "remove_spac": [330, 331], "render": [84, 147, 344, 345], "rep": 341, "repeat": [126, 297, 312, 341, 343], "repetit": 1, "replac": [33, 345], "replic": [126, 137, 343, 347, 349], "report": 1, "repres": [151, 216, 220, 266, 344, 347, 348], "represent": [32, 50, 148, 149, 151, 198, 208, 221, 233, 246, 257, 264, 343, 348], "reproduc": [4, 198, 208, 221, 233, 246, 257, 264, 297, 343], "request": [97, 106, 107], "requir": [17, 65, 66, 67, 84, 95, 96, 97, 98, 104, 105, 106, 107, 113, 114, 122, 123, 277, 280, 281, 295, 344, 345, 346, 348], "res_histogram": [336, 344], "res_probplot": [336, 344], "res_v_factor": [336, 344, 347], "res_v_fit": [336, 344], "res_v_ob": [336, 344], "reset": 30, "resid": [321, 322, 323, 324, 325, 326, 336, 343, 347], "residu": [320, 321, 322, 323, 324, 325, 336, 343, 344], "resist": 312, "resourc": 344, "respons": [305, 306, 307, 340, 341, 347], "restrict": 341, "result": [5, 6, 7, 9, 12, 24, 32, 35, 36, 50, 84, 94, 126, 147, 198, 208, 221, 233, 246, 257, 264, 277, 278, 280, 281, 291, 293, 295, 297, 298, 307, 308, 309, 310, 311, 313, 314, 315, 320, 321, 322, 336, 339, 340, 341, 344, 347, 348, 349], "retriev": [283, 285, 287, 349], "return": [5, 6, 7, 8, 9, 11, 12, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 32, 33, 35, 36, 45, 46, 47, 49, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 80, 81, 83, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 148, 149, 198, 199, 200, 201, 202, 208, 221, 233, 246, 257, 258, 259, 260, 261, 262, 264, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 295, 344, 348], "revert": 345, "review": [45, 46, 47, 343, 347], "revstat": 102, "rgb": 346, "right": [148, 149, 278, 284, 288, 308, 316, 317, 339, 347], "right_result": 278, "rightarrow": 290, "root": [5, 74, 291], "root_scalar": 291, "rootresult": 291, "rotat": 288, "routin": [1, 4, 277, 279, 295, 300, 301, 312, 340, 342, 344, 347, 348, 349], "row": [15, 24, 25, 32, 209, 216, 220, 223, 229, 266, 277, 280, 281, 308, 312, 341, 342, 347, 348], "rparam": [4, 233, 235, 236, 237, 240, 242, 243, 244, 348], "rr": 343, "rule": [0, 197, 256, 277, 278, 279, 280, 281, 301, 327], "rule1": 278, "rule2": 278, "run": [1, 15, 17, 19, 21, 24, 29, 30, 32, 74, 75, 126, 192, 291, 305, 306, 307, 312, 336, 339, 341, 343, 349], "runid": 312, "runstest_1samp": 74, "runstest_2samp": 75, "rv": [295, 327, 328, 342, 346, 347], "s_bar": [210, 266, 268], "sai": [348, 349], "sale": 349, "same": [1, 17, 29, 63, 69, 126, 153, 199, 200, 202, 220, 258, 259, 260, 262, 278, 283, 285, 287, 292, 295, 306, 307, 317, 327, 345, 347, 348], "sampl": [4, 45, 46, 47, 49, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 75, 77, 78, 80, 81, 83, 84, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 151, 153, 192, 199, 200, 202, 203, 206, 209, 210, 211, 216, 219, 220, 223, 224, 229, 231, 232, 235, 236, 237, 242, 243, 244, 245, 248, 249, 253, 255, 256, 258, 259, 260, 262, 263, 266, 267, 268, 269, 272, 274, 275, 276, 277, 278, 281, 283, 284, 285, 286, 287, 288, 290, 295, 305, 306, 307, 308, 316, 317, 318, 327, 328, 329, 339, 340, 341, 344, 347, 348, 349], "sample_data": [153, 160, 192, 305, 306, 307, 308, 336, 343, 348, 349], "sample_s": [84, 295, 342], "sample_stat": [50, 295], "sample_stat_target": [50, 295], "sample_stat_valu": [50, 295], "satisfi": 348, "satur": 308, "savil": 7, "sayago": [45, 46, 47], "scale": [10, 23, 206, 348], "scale_origin": 23, "scatter": [308, 344, 349], "scatter_kw": 308, "scienc": [7, 93], "scipi": [1, 68, 70, 72, 75, 77, 78, 80, 81, 83, 116, 125, 286, 288, 291, 295, 327, 328, 339], "score": [50, 62, 63, 64, 68, 69, 105, 107, 109, 151, 292, 295], "script": [1, 301, 348], "sd": 343, "seaborn": [150, 308, 321, 344, 345, 346, 347], "search": [98, 106, 344], "second": [29, 47, 94, 96, 98, 100, 103, 105, 107, 109, 341, 346, 348], "secondari": 152, "section": [339, 340, 344, 346, 348], "section6": 341, "see": [1, 4, 5, 7, 10, 12, 15, 35, 45, 46, 47, 93, 94, 102, 105, 108, 109, 126, 141, 223, 232, 266, 267, 274, 278, 291, 295, 300, 316, 317, 318, 319, 320, 326, 339, 341, 344, 345, 346, 347, 348], "seed": [295, 327, 328, 341, 342, 347], "seem": 347, "seen": 348, "sem": 160, "send": 348, "sens": [46, 47, 50, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 81, 83, 84, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 151], "sensor": 349, "sep": 312, "separ": [22, 305, 312, 341, 347, 348], "seri": [15, 28, 74, 160, 170, 199, 202, 203, 204, 205, 211, 219, 258, 259, 262, 269, 272, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 292, 327, 346, 348], "serialis": [198, 208, 221, 233, 246, 257, 264, 341, 348], "series1": 278, "series2": 278, "serlias": 348, "servic": 349, "set": [1, 5, 6, 7, 8, 9, 17, 19, 23, 29, 30, 148, 149, 192, 235, 236, 248, 266, 267, 268, 289, 336, 341, 345, 346, 348, 349], "set_titl": 346, "set_xlabel": [344, 346], "set_xlim": 346, "set_xscal": 346, "set_xtick": 346, "set_xticklabel": 346, "set_ylabel": [344, 346], "set_ylim": 346, "set_yscal": 346, "set_ytick": 346, "setup": [1, 312, 340], "seven": 93, "sever": [340, 345], "shade": [308, 319, 344, 348], "shape": 216, "share": 344, "sharei": [306, 307, 346, 347], "sharex": 346, "shear": 349, "sheet": 345, "shewhart": 256, "shewhartparam": [257, 258, 259, 260, 261, 262, 301, 348], "shift": [316, 317, 344], "short": [153, 317], "short_kw": 317, "shortag": 349, "shortcut": 346, "should": [1, 15, 197, 256, 327, 343, 347, 348], "show": [150, 151, 152, 278, 295, 305, 306, 307, 308, 310, 311, 312, 313, 327, 329, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349], "show_conf": [308, 349], "show_dens": 321, "show_long_term": [316, 317], "shown": [36, 50, 153, 160, 192, 305, 308, 316, 327, 328, 336, 339, 340, 342, 343, 347, 348, 349], "side": [36, 45, 46, 47, 50, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 80, 81, 83, 84, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 280, 295, 317, 342], "sigma": [113, 153, 206, 232, 256, 263, 277, 278, 279, 280, 281, 317, 327, 328, 348], "sigma0": 113, "sigma_1": 114, "sigma_2": 114, "sigma_i": 349, "sign": 77, "sign_test": 77, "signatur": [278, 348], "signific": [65, 66, 67, 84, 95, 96, 97, 98, 104, 105, 106, 107, 113, 114, 120, 121, 122, 123, 308, 319, 343, 347, 349], "silicon": 312, "similar": [295, 341, 346], "simpl": [94, 278, 340, 346, 348], "simplic": 4, "simul": 103, "sin": 346, "sinc": [147, 224, 278, 305, 347, 348, 349], "sine": [97, 98, 346], "singl": [93, 160, 278, 339, 340, 341, 349], "six": [317, 336, 344], "size": [4, 65, 66, 67, 84, 93, 95, 97, 98, 104, 106, 107, 113, 114, 120, 121, 122, 123, 199, 200, 202, 206, 210, 211, 219, 224, 231, 236, 237, 244, 249, 255, 258, 259, 260, 262, 267, 268, 269, 272, 276, 278, 283, 284, 285, 286, 287, 288, 295, 327, 328, 329, 339, 340, 344, 348], "size_1sampl": [295, 342], "size_2sampl": 342, "size_pair": 342, "skew": [160, 192, 349], "skip": 312, "skiprow": 312, "slightli": 288, "sm": [49, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 77, 93, 94, 99, 100, 102, 103, 105, 108, 109], "small": [74, 93, 102, 103], "smaller": 1, "smallest": 160, "smirnov": [49, 75, 160, 295], "smooth": [206, 209, 210, 220, 223], "sn": [344, 345, 346], "so": [1, 29, 216, 288, 312, 341, 344, 346, 348, 349], "softwar": 312, "solv": [84, 97, 98, 106, 107, 122, 123], "solve_arl": [220, 223], "solve_h4": [220, 223], "solve_pow": 67, "some": [1, 50, 102, 200, 260, 301, 340, 341, 344, 345, 348], "someth": 341, "somewher": 344, "son": 341, "sophist": 344, "sort": 29, "sourc": [151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 309, 312, 327, 328, 329, 336, 340], "space": [22, 292, 346, 347, 349], "span": [141, 327], "span_kw": 327, "sparam": [4, 246, 248, 249, 252, 253, 254, 255, 348], "spc": [0, 4, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 211, 216, 218, 219, 220, 221, 223, 224, 229, 230, 231, 232, 233, 235, 236, 237, 240, 242, 243, 244, 245, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 327, 328, 329, 341, 344, 348], "spearman": 72, "spearmanr": 72, "spec": [153, 192, 319, 349], "special": 348, "specif": [153, 159, 192, 319, 345], "specifi": [29, 344, 346, 349], "spine": [152, 349], "split": [340, 341, 349], "spread": [310, 311], "springer": 7, "sq": [5, 343, 347], "sqheric": 341, "sqrt": [19, 284, 288, 341, 348], "squar": [5, 106, 116, 118, 120, 124, 295, 340, 347], "squqr": 295, "st": [295, 339, 342, 346, 347], "stabl": [339, 340, 344], "stack": [148, 149], "standard": [3, 111, 112, 113, 114, 115, 116, 126, 137, 153, 160, 206, 232, 240, 245, 252, 253, 254, 256, 259, 263, 266, 267, 272, 277, 278, 292, 295, 316, 317, 327, 328, 341, 346, 348], "standardis": 295, "start": [2, 148, 149, 346], "stat": [50, 160, 192, 203, 277, 278, 279, 280, 281, 292, 295, 327, 328, 339, 342, 348, 349], "state": [206, 209, 210, 220], "statement": 340, "static": [12, 19, 20, 21, 22, 23, 24, 35, 209, 210, 223, 235, 236, 248, 266, 267, 268], "stationari": 74, "statist": [1, 2, 5, 7, 36, 45, 46, 47, 50, 93, 94, 102, 103, 141, 151, 160, 192, 199, 202, 203, 206, 211, 219, 220, 258, 259, 262, 269, 272, 276, 277, 278, 279, 280, 281, 290, 291, 302, 308, 320, 327, 328, 336, 339, 340, 341, 344, 347], "statistician": [94, 102], "statsmodel": [1, 5, 6, 9, 105, 108, 109, 126, 295, 307, 320, 321, 322, 326, 336, 340, 343, 347], "std": 160, "std_hist": 348, "std_ratio": [113, 114], "stddev": [111, 112, 113, 114, 115, 116, 153, 160, 192, 209, 210, 245, 268, 292, 312, 316, 317, 342, 343, 348, 349], "stderr": [235, 236, 248, 266, 267, 268, 348], "steadi": [206, 209, 210, 220], "steady_st": [206, 209, 210], "step": [341, 343], "still": 19, "stood": 1, "storage_opt": 312, "store": [198, 208, 221, 233, 246, 257, 264, 344, 348, 349], "str": [7, 8, 15, 17, 19, 20, 21, 22, 23, 24, 25, 27, 30, 36, 37, 40, 41, 50, 51, 52, 53, 54, 55, 57, 58, 74, 84, 86, 89, 90, 100, 103, 105, 107, 108, 109, 126, 129, 137, 138, 139, 140, 148, 149, 152, 160, 179, 192, 194, 196, 206, 214, 220, 228, 232, 238, 245, 250, 263, 270, 305, 306, 307, 308, 309, 312, 316, 317, 323], "straight": [12, 35, 348], "strategi": [206, 348, 349], "strength": 349, "stretch": 148, "string": [50, 148, 149, 152, 346], "stroke": 346, "structu": 340, "structur": [339, 341], "sttdev": 292, "student": [50, 62, 63, 64, 68, 69, 70], "studi": [1, 126, 137, 141, 153, 160, 192, 297, 308, 309, 310, 311, 312, 313, 314, 315, 343, 349], "studyvar": [309, 343], "style": [5, 6, 7, 8, 9, 148, 149, 345], "styler": [5, 6, 7, 8, 9], "subclass": [301, 348], "submodul": [301, 339], "subplot": [150, 151, 152, 277, 278, 279, 280, 281, 305, 306, 307, 308, 312, 327, 328, 329, 336, 344, 346], "subplot_kw": 150, "subset": [282, 292, 341, 348], "substitut": 288, "subtract": [47, 292], "success": 94, "suffici": 340, "suggest": 344, "sum_sq": [343, 347], "summari": [141, 153, 160, 193, 312, 316, 339, 343, 344, 347], "summaris": [300, 343], "superclass": [301, 348], "suppli": [336, 344], "supplier": 349, "support": [2, 83, 99, 102, 103, 348], "suppos": 342, "suppress": [147, 344], "surfac": [341, 349], "sv": 343, "switch": 327, "syntax": 349, "system": [141, 339, 341, 344], "t": [1, 7, 46, 50, 62, 63, 64, 65, 68, 69, 70, 84, 93, 278, 288, 289, 295, 346, 347, 348], "tab": 344, "tabl": [1, 5, 8, 9, 36, 50, 84, 141, 153, 160, 192, 283, 285, 287, 305, 342, 343, 348], "table_data": 344, "tableau": 344, "tabul": [283, 285, 287, 342, 348], "tag": 147, "tail": [347, 348, 349], "take": [1, 277, 278, 279, 280, 281, 292, 301, 348], "taken": [69, 209, 220, 223, 235, 248, 266, 278, 295, 308, 345], "target": [50, 126, 153, 188, 210, 267, 268, 280, 328, 345, 348, 349], "target_color": 345, "target_kw": [314, 315, 328], "tau": 72, "tconfint_diff": 63, "tconfint_mean": [62, 64], "teach": 4, "techniqu": [340, 341, 346, 349], "technologi": [4, 290, 295], "tediou": 349, "tell": 341, "temp": [312, 349], "ten": 346, "term": [126, 137, 153, 256, 317, 341, 347, 348], "terminologi": 348, "test": [1, 36, 47, 49, 50, 65, 66, 67, 68, 69, 70, 74, 75, 77, 78, 81, 83, 84, 95, 96, 97, 98, 99, 100, 104, 105, 106, 108, 109, 113, 114, 115, 116, 120, 121, 122, 123, 124, 125, 151, 160, 295, 312, 339, 341, 345], "test_1sampl": [295, 342], "test_2sampl": [295, 341, 342], "test_diff": 342, "test_nsampl": 342, "test_pair": 342, "test_poisson": 108, "test_poisson_2indep": 109, "test_proportions_2indep": 100, "test_siz": 342, "testmethod": 84, "testpow": [65, 66, 67, 95, 96, 97, 98, 104, 105, 106, 107, 113, 114, 120, 121, 122, 123, 295, 342], "text": [1, 290, 308], "text_kw": [308, 314, 315], "textur": 349, "th": [81, 336], "than": [4, 17, 29, 153, 160, 220, 278, 308, 347, 348], "thei": [1, 10, 32, 200, 260, 295, 339, 341, 342, 347, 348, 349], "them": [277, 279, 280, 281, 312, 344], "therefor": [4, 341, 348], "thi": [2, 5, 6, 7, 8, 9, 11, 17, 25, 29, 30, 33, 36, 50, 62, 68, 77, 80, 81, 84, 107, 111, 115, 118, 124, 126, 147, 148, 149, 151, 152, 153, 192, 198, 199, 200, 201, 202, 206, 208, 220, 221, 223, 232, 233, 245, 246, 257, 258, 259, 260, 261, 262, 263, 264, 277, 278, 279, 280, 281, 295, 301, 305, 306, 307, 308, 312, 320, 327, 328, 329, 336, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349], "thing": [1, 344], "those": [1, 4, 152, 206, 312, 341, 344, 348, 349], "though": [312, 341, 347, 348, 349], "three": [1, 278, 316, 318, 341, 344, 345, 347, 348], "threshold": 277, "through": [288, 345, 346], "tick": 323, "tidi": 349, "tile": 347, "time": [4, 30, 74, 220, 279, 341, 345, 348, 349], "to_csv": 341, "to_df": 341, "to_excel": 341, "togeth": [1, 347, 348], "tol": [312, 343], "tol_kw": 319, "toler": [126, 309, 312, 316, 343, 344, 349], "too": 343, "tool": [1, 220, 223, 293, 306, 307, 330, 331, 340, 341, 343, 347, 348, 349], "toolkit": [1, 2], "top": [149, 295, 339, 349], "topic": [1, 339], "total": [93, 94, 99, 100, 316, 317, 327, 328, 339, 343, 347], "tr": 349, "track": [15, 206, 216, 224, 344, 348], "tradit": [1, 232, 245, 263, 266, 348], "tradition": 348, "train": 349, "transform": [10, 11, 12, 35, 45, 46, 47, 278, 288, 292], "translat": [10, 126], "transorm": 341, "treat": [148, 149, 312, 341, 347, 348], "treatment": [341, 344], "trend": 281, "triangl": [308, 349], "trigger": [277, 279, 280, 348], "tripl": [316, 317], "true": [5, 6, 7, 8, 9, 23, 63, 69, 93, 94, 99, 100, 126, 147, 277, 279, 280, 281, 289, 308, 312, 321, 323, 327, 330, 331, 343, 346, 348, 349], "truncat": [317, 349], "tt_ind_solve_pow": 66, "tt_solve_pow": 65, "ttest_1samp": 68, "ttest_ind": 69, "ttest_rel": 70, "tupl": [20, 126, 127, 329], "turn": 1, "twice": 348, "twin": 320, "twinx": 346, "two": [4, 12, 15, 23, 24, 35, 46, 47, 50, 63, 64, 65, 66, 67, 68, 69, 70, 72, 75, 77, 78, 81, 83, 84, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 152, 278, 289, 295, 305, 306, 316, 317, 327, 336, 340, 341, 342, 344, 346, 347, 348, 349], "typ": [9, 141], "type": [1, 9, 15, 23, 32, 36, 45, 47, 50, 84, 197, 256, 278, 283, 285, 287, 295, 301, 341, 343, 344, 346, 348, 349], "u": [78, 290, 295], "ucl": [278, 279, 291, 348], "unbias": [283, 284, 285, 286, 287, 288, 301, 348], "uncertain": 340, "under": 2, "underli": 340, "understand": 1, "uniform": [1, 342], "uniqu": [25, 126, 323], "unit": [74, 126, 341, 348], "univers": 2, "unknown": 347, "unless": [339, 344], "unpack": 342, "unpair": [63, 66, 67, 69], "up": [1, 281, 336, 339, 341, 349], "upper": [36, 188, 202, 219, 223, 231, 232, 244, 245, 255, 262, 263, 276, 279, 290, 291, 295, 308, 342, 345, 347, 348, 349], "us": [1, 4, 6, 7, 15, 17, 33, 47, 50, 74, 93, 103, 106, 126, 141, 147, 148, 149, 151, 160, 192, 198, 199, 202, 203, 206, 208, 210, 211, 219, 220, 221, 232, 233, 236, 245, 246, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 277, 278, 279, 280, 281, 283, 285, 287, 288, 291, 295, 301, 305, 306, 307, 312, 317, 318, 323, 326, 327, 328, 336, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349], "user": [1, 2, 198, 208, 221, 233, 246, 257, 264, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 312, 344, 345, 346], "usl": [153, 188, 343, 349], "usual": [11, 209, 223, 235, 248, 266, 327, 328, 344, 346, 348], "util": [282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 301, 348], "v": [102, 340, 344], "valid": 99, "valu": [5, 6, 7, 8, 9, 11, 23, 33, 36, 47, 49, 50, 74, 81, 109, 149, 151, 152, 153, 160, 188, 192, 201, 232, 236, 243, 245, 254, 261, 275, 283, 284, 285, 287, 289, 291, 292, 295, 305, 308, 323, 324, 326, 327, 341, 342, 344, 345, 346, 347, 348, 349], "valueerror": [46, 47], "var": [83, 115, 116, 120, 122, 124, 125, 160, 349], "var_0": [120, 122], "var_1": [121, 123], "var_2": [121, 123], "var_ratio": [121, 123], "varcomp": 343, "vari": 107, "variabl": [15, 19, 20, 21, 22, 23, 24, 25, 126, 137, 141, 288, 290, 307, 308, 339, 340, 341, 343, 344, 349], "varianc": [63, 83, 112, 115, 116, 118, 119, 120, 121, 122, 123, 124, 125, 141, 160, 192, 312, 339, 340, 341, 342, 343, 344, 347, 349], "variancet": [309, 343], "varianv": [115, 124], "variat": [153, 312, 343], "variou": [1, 102, 341, 344, 346], "varous": 1, "vector": [33, 290, 291], "verifi": [340, 341], "version": [30, 94, 341], "versu": [323, 324, 325, 326, 347], "vertic": [149, 318, 319, 347], "view": [340, 349], "vif": 347, "violat": [278, 279, 348], "visualis": [344, 347], "vol": [141, 348], "vstack": [147, 339, 343, 344, 347, 348, 349], "w": 4, "wa": [36, 49, 62, 153, 291, 340, 341, 347, 348, 349], "wafer": 312, "waferid": 312, "wai": [78, 327, 340, 341, 344, 345, 348], "wald": [75, 94, 102, 103, 342], "wall": 349, "wallac": 50, "walli": [78, 342], "warm": 349, "warrant": 348, "wave": 346, "we": [1, 344, 346], "websit": 344, "weight": [216, 229, 349], "well": [340, 347], "were": [4, 102, 103, 108, 109, 220, 283, 285, 287, 295, 348], "what": 346, "when": [1, 4, 5, 6, 7, 8, 9, 23, 29, 36, 46, 50, 63, 69, 102, 109, 126, 151, 192, 206, 216, 277, 278, 279, 280, 281, 308, 316, 317, 323, 341, 344, 345, 347, 348, 349], "whenev": [308, 345, 346], "where": [209, 282, 286, 288, 290, 292, 308, 327, 342, 346, 347, 348], "wherea": 347, "whether": [206, 209, 210, 341], "which": [1, 15, 36, 45, 50, 62, 63, 64, 80, 93, 94, 102, 103, 108, 109, 111, 112, 118, 119, 148, 149, 152, 153, 200, 223, 224, 260, 278, 288, 290, 295, 301, 308, 312, 320, 327, 336, 340, 341, 342, 343, 344, 346, 347, 348, 349], "while": [107, 295, 308, 341, 344, 348], "whitespac": 312, "whitnei": 78, "whole": [5, 346], "whose": [47, 278, 292, 305, 316, 336, 348], "width": [36, 45, 62, 63, 64, 80, 93, 94, 102, 103, 111, 112, 118, 119, 126, 150, 206, 209, 210, 316, 317, 344, 346, 348], "wilcoxon": 77, "wilei": [141, 341, 348], "wilson": 93, "within": [29, 220, 341], "without": [93, 141, 343], "wolfowitz": 75, "wood": 7, "woodal": 4, "word": 278, "work": [1, 4, 344, 348], "would": [341, 344, 348], "wrap": [15, 148, 149, 344], "wrapper": [295, 344], "write": 341, "written": [4, 278, 344, 348], "www": [295, 312], "x": [45, 46, 49, 50, 62, 63, 64, 68, 69, 70, 72, 74, 75, 77, 78, 80, 81, 83, 111, 112, 115, 116, 118, 119, 124, 125, 277, 279, 286, 288, 295, 323, 327, 328, 329, 341, 344, 346, 347, 348], "x00": 348, "x01r": 348, "x02": 348, "x03": 348, "x03c3": 343, "x04": 348, "x04name": 348, "x05sigma": 348, "x06centr": 348, "x06nsigma": 348, "x07rparam": 348, "x1": [15, 47, 341, 348], "x13mqr": 348, "x1e": 348, "x2": [15, 47, 341, 348], "x3": [15, 341, 348], "x4": [15, 341, 348], "x5": 348, "x6": 348, "x7": 348, "x8": 348, "x80": 348, "x81": 348, "x85": 348, "x8c": 348, "x93": 348, "x94": 348, "x94g": 348, "x94k": 348, "x94ub": 348, "x95": 348, "x_i": 342, "x_j": 342, "xb8q": 348, "xbar": [4, 259, 263, 266, 270, 272, 274, 277, 279, 280, 281, 312, 315, 344, 348], "xbar_oper": 344, "xbarparam": [4, 264, 266, 267, 268, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 327, 328, 348], "xeb": 348, "xlsx": 341, "y": [45, 46, 63, 64, 69, 70, 72, 75, 112, 116, 119, 125, 288, 295, 341, 344, 346, 347], "y1": [47, 346], "y2": [47, 346], "y3": 346, "yate": [22, 341], "yet": 1, "yield": [344, 349], "york": [141, 348], "you": [1, 341, 344, 345, 346, 348], "ys_a": 346, "ys_b": 346, "ys_c": 346, "z": [36, 45, 46, 47, 62, 63, 64, 68, 69, 99, 107, 151, 292, 295, 347], "z_inv": 292, "zconfint_diff": 63, "zconfint_mean": [62, 64], "zero": [46, 103, 230, 341, 347], "zip": 349, "zorder": 345, "zscore": 278, "ztest": [68, 69]}, "titles": ["API Reference", "Getting Started", "MQR", "Notes", "Efficieny of estimates of process standard deviation", "adequacy", "coeffs", "groups", "interactions", "summary", "Affine", "__call__", "from_map", "mqr.doe.Affine.scale", "mqr.doe.Affine.translate", "Design", "__len__", "as_block", "mqr.doe.Design.blocks", "from_axial", "from_ccdesign", "from_centrepoints", "from_fracfact", "from_fullfact", "from_levels", "get_factor_df", "mqr.doe.Design.levels", "mqr.doe.Design.names", "mqr.doe.Design.pttypes", "randomise_runs", "replicate", "mqr.doe.Design.runs", "to_df", "transform", "Transform", "from_map", "ConfidenceInterval", "mqr.inference.confint.ConfidenceInterval.bounded", "mqr.inference.confint.ConfidenceInterval.conf", "mqr.inference.confint.ConfidenceInterval.lower", "mqr.inference.confint.ConfidenceInterval.method", "mqr.inference.confint.ConfidenceInterval.name", "mqr.inference.confint.ConfidenceInterval.upper", "mqr.inference.confint.ConfidenceInterval.value", "correlation", "confint", "test", "test_diff", "dist", "test_1sample", "HypothesisTest", "mqr.inference.hyptest.HypothesisTest.alt", "mqr.inference.hyptest.HypothesisTest.alternative", "mqr.inference.hyptest.HypothesisTest.description", "mqr.inference.hyptest.HypothesisTest.method", "mqr.inference.hyptest.HypothesisTest.null", "mqr.inference.hyptest.HypothesisTest.pvalue", "mqr.inference.hyptest.HypothesisTest.sample_stat", "mqr.inference.hyptest.HypothesisTest.sample_stat_target", "mqr.inference.hyptest.HypothesisTest.sample_stat_value", "mqr.inference.hyptest.HypothesisTest.stat", "mean", "confint_1sample", "confint_2sample", "confint_paired", "size_1sample", "size_2sample", "size_paired", "test_1sample", "test_2sample", "test_paired", "correlation", "test", "dist", "test_1sample", "test_2sample", "median", "test_1sample", "test_nsample", "quantile", "confint_1sample", "test_1sample", "variance", "test_nsample", "TestPower", "mqr.inference.power.TestPower.alpha", "mqr.inference.power.TestPower.alternative", "mqr.inference.power.TestPower.beta", "mqr.inference.power.TestPower.effect", "mqr.inference.power.TestPower.method", "mqr.inference.power.TestPower.name", "mqr.inference.power.TestPower.sample_size", "proportion", "confint_1sample", "confint_2sample", "power_1sample", "power_2sample", "size_1sample", "size_2sample", "test_1sample", "test_2sample", "rate", "confint_1sample", "confint_2sample", "power_1sample", "power_2sample", "size_1sample", "size_2sample", "test_1sample", "test_2sample", "stddev", "confint_1sample", "confint_2sample", "size_1sample", "size_2sample", "test_1sample", "test_2sample", "variance", "confint_1sample", "confint_2sample", "power_1sample", "power_2sample", "size_1sample", "size_2sample", "test_1sample", "test_2sample", "GRR", "mqr.msa.GRR.counts", "mqr.msa.GRR.data", "mqr.msa.GRR.formula", "mqr.msa.GRR.include_interaction", "mqr.msa.GRR.include_intercept", "mqr.msa.GRR.model", "mqr.msa.GRR.names", "mqr.msa.GRR.nsigma", "mqr.msa.GRR.regression_result", "mqr.msa.GRR.tolerance", "NameMapping", "mqr.msa.NameMapping.measurement", "mqr.msa.NameMapping.operator", "mqr.msa.NameMapping.part", "VarianceTable", "mqr.msa.VarianceTable.anova_table", "mqr.msa.VarianceTable.discrimination", "mqr.msa.VarianceTable.grr", "mqr.msa.VarianceTable.num_distinct_cats", "mqr.msa.VarianceTable.table", "grab_figure", "hstack", "vstack", "Figure", "confint", "ishikawa", "Capability", "mqr.process.Capability.cp", "mqr.process.Capability.cpk", "mqr.process.Capability.defects_lt", "mqr.process.Capability.defects_st", "mqr.process.Capability.sample", "mqr.process.Capability.spec", "Sample", "mqr.process.Sample.ad_pvalue", "mqr.process.Sample.ad_stat", "mqr.process.Sample.conf", "mqr.process.Sample.conf_mean", "mqr.process.Sample.conf_median", "mqr.process.Sample.conf_quartile1", "mqr.process.Sample.conf_quartile3", "mqr.process.Sample.conf_std", "mqr.process.Sample.conf_var", "mqr.process.Sample.data", "mqr.process.Sample.iqr", "mqr.process.Sample.ks_pvalue", "mqr.process.Sample.ks_stat", "mqr.process.Sample.kurtosis", "mqr.process.Sample.maximum", "mqr.process.Sample.mean", "mqr.process.Sample.median", "mqr.process.Sample.minimum", "mqr.process.Sample.name", "mqr.process.Sample.nobs", "mqr.process.Sample.outliers", "mqr.process.Sample.quartile1", "mqr.process.Sample.quartile3", "mqr.process.Sample.sem", "mqr.process.Sample.skewness", "mqr.process.Sample.std", "mqr.process.Sample.var", "Specification", "mqr.process.Specification.lsl", "mqr.process.Specification.target", "mqr.process.Specification.usl", "Summary", "__getitem__", "mqr.process.Summary.capabilities", "mqr.process.Summary.data", "mqr.process.Summary.samples", "ControlParams", "asdict", "lcl", "statistic", "target", "ucl", "ControlStatistic", "mqr.spc.ControlStatistic.nobs", "mqr.spc.ControlStatistic.stat", "EwmaParams", "mqr.spc.EwmaParams.L", "asdict", "from_data", "from_stddev", "lcl", "mqr.spc.EwmaParams.lmda", "mqr.spc.EwmaParams.mu_0", "mqr.spc.EwmaParams.name", "mqr.spc.EwmaParams.sigma", "statistic", "mqr.spc.EwmaParams.steady_state", "target", "ucl", "MewmaParams", "asdict", "mqr.spc.MewmaParams.cov", "from_data", "lcl", "mqr.spc.MewmaParams.limit", "mqr.spc.MewmaParams.lmda", "mqr.spc.MewmaParams.mu", "mqr.spc.MewmaParams.name", "statistic", "target", "ucl", "RParams", "asdict", "mqr.spc.RParams.centre", "from_data", "from_range", "lcl", "mqr.spc.RParams.name", "mqr.spc.RParams.nsigma", "se", "mqr.spc.RParams.sigma", "statistic", "target", "ucl", "SParams", "asdict", "mqr.spc.SParams.centre", "from_data", "lcl", "mqr.spc.SParams.name", "mqr.spc.SParams.nsigma", "se", "statistic", "target", "ucl", "ShewhartParams", "asdict", "lcl", "se", "statistic", "target", "ucl", "XBarParams", "asdict", "mqr.spc.XBarParams.centre", "from_data", "from_range", "from_stddev", "lcl", "mqr.spc.XBarParams.name", "mqr.spc.XBarParams.nsigma", "se", "mqr.spc.XBarParams.sigma", "statistic", "target", "ucl", "aofb_nsigma", "combine", "limits", "n_1side", "n_trending", "alarm_subsets", "c4", "c4_fn", "d2", "d2_integral", "d3", "d3_integral", "group_consecutives", "solve_arl", "solve_h4", "zscore", "Analysis of Variance (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.anova</span></code>)", "Design of Experiments (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.doe</span></code>)", "Basic statistical inference (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.inference</span></code>)", "Basic statistical inference (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.inference.nonparametric</span></code>)", "Measurement system analysis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.msa</span></code>)", "Notebook tools (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.nbtools</span></code>)", "Plots (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.plot</span></code>)", "Process summary and capability (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.process</span></code>)", "Statistical Process Control (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.spc</span></code>)", "SPC alarm rules (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.spc.rules</span></code>)", "SPC utilities (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.spc.util</span></code>)", "Data transforms (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.transforms</span></code>)", "interactions", "main_effects", "model_means", "matrix", "bar_var_pct", "box_measurement_by_operator", "box_measurement_by_part", "grr", "line_part_operator_intn", "r_operator", "xbar_operator", "capability", "pdf", "summary", "tolerance", "influence", "res_histogram", "res_probplot", "res_v_factor", "res_v_fit", "res_v_obs", "residuals", "alarms", "chart", "oc", "sharex", "sharey", "Analysis of variance (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.plot.anova</span></code>)", "Correlation matrix (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.plot.correlation</span></code>)", "Measurement system analysis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.plot.msa</span></code>)", "Process and capability (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.plot.process</span></code>)", "Regression analysis (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.plot.regression</span></code>)", "Statistical process control (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.plot.spc</span></code>)", "Plotting tools (<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">mqr.plot.tools</span></code>)", "User Guide", "Data Analysis", "Design of Experiments", "Basic Statistical Inference", "Measurement System Analysis", "Plots", "Customising MQR plots", "Plotting primer", "Regression and ANOVA", "Statistical Process Control", "Process Summary and Capability"], "titleterms": {"": 1, "1": 345, "2": 345, "3": 345, "A": [1, 341], "__call__": 11, "__getitem__": 193, "__len__": 16, "ad_pvalu": 161, "ad_stat": 162, "adequaci": 5, "affin": [10, 13, 14], "alarm": [302, 327, 348], "alarm_subset": 282, "alpha": 85, "alt": 51, "altern": [52, 86], "analys": [343, 347], "analysi": [293, 297, 332, 334, 336, 339, 340, 343], "anova": [293, 332, 340, 347], "anova_t": 142, "aofb_nsigma": 277, "api": 0, "as_block": 17, "asdict": [198, 208, 221, 233, 246, 257, 264], "ax": [344, 346], "axial": 341, "background": 348, "bar_var_pct": 309, "basic": [295, 296, 342, 344], "beta": 87, "block": 18, "bound": 37, "box": 346, "box_measurement_by_oper": 310, "box_measurement_by_part": 311, "c4": 283, "c4_fn": 284, "capabl": [153, 154, 155, 156, 157, 158, 159, 194, 300, 316, 335, 349], "categor": 347, "centr": [234, 247, 265], "central": 341, "chang": 345, "chart": [328, 348], "check": [341, 343], "class": 4, "coeff": 6, "colour": 346, "combin": [278, 346, 348], "composit": 341, "conf": [38, 163], "conf_mean": 164, "conf_median": 165, "conf_quartile1": 166, "conf_quartile3": 167, "conf_std": 168, "conf_var": 169, "confid": [340, 342], "confidenceinterv": [36, 37, 38, 39, 40, 41, 42, 43], "confint": [37, 38, 39, 40, 41, 42, 43, 45, 151], "confint_1sampl": [62, 80, 93, 102, 111, 118], "confint_2sampl": [63, 94, 103, 112, 119], "confint_pair": 64, "context": 344, "control": [301, 337, 339, 348], "controlparam": [197, 348], "controlstatist": [203, 204, 205], "correl": [44, 71, 333, 349], "count": 127, "cov": 222, "cp": 154, "cpk": 155, "credit": 2, "curvatur": 341, "custom": [341, 348], "customis": 345, "d2": 285, "d2_integr": 286, "d3": 287, "d3_integr": 288, "data": [128, 170, 195, 304, 340, 347, 348], "default": 345, "defects_lt": 156, "defects_st": 157, "defin": 339, "descript": 53, "design": [15, 18, 26, 27, 28, 31, 294, 341], "deviat": 4, "diagram": 349, "directori": 344, "discrimin": 143, "dist": [48, 73], "doe": [1, 13, 14, 18, 26, 27, 28, 31, 294], "effect": [88, 347], "efficieni": 4, "element": 346, "estim": 4, "ewmaparam": [206, 207, 212, 213, 214, 215, 217], "exampl": [295, 336], "experi": [294, 341], "experiment": 341, "factori": 341, "figur": [150, 344], "file": 341, "fishbon": 349, "formula": 129, "fraction": 341, "from_axi": 19, "from_ccdesign": 20, "from_centrepoint": 21, "from_data": [209, 223, 235, 248, 266], "from_fracfact": 22, "from_fullfact": 23, "from_level": 24, "from_map": [12, 35], "from_rang": [236, 267], "from_stddev": [210, 268], "full": 341, "get": [1, 344], "get_factor_df": 25, "grab_figur": 147, "graphic": 349, "grid": 346, "group": 7, "group_consecut": 289, "grr": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 312], "guid": 339, "handl": 348, "help": 344, "histogram": 346, "histor": 348, "hstack": 148, "hypothesi": [340, 342], "hypothesistest": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "hyptest": [51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "import": 339, "improv": 339, "include_interact": 130, "include_intercept": 131, "infer": [37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 85, 86, 87, 88, 89, 90, 91, 295, 296, 342], "influenc": 320, "instal": 1, "interact": [8, 305, 347], "interfac": 1, "interv": [340, 342], "introduct": 341, "iqr": 171, "ishikawa": 152, "ks_pvalu": 172, "ks_stat": 173, "kurtosi": 174, "kwarg": 345, "l": 207, "label": 346, "lcl": [199, 211, 224, 237, 249, 258, 269], "legend": 346, "level": 26, "licens": 2, "limit": [225, 279, 346], "line": 346, "line_part_operator_intn": 313, "live": 348, "lmda": [212, 226], "lower": 39, "lsl": 189, "main": 347, "main_effect": 306, "make": 339, "manag": 344, "marker": 346, "matplotlib": 344, "matrix": [308, 333], "maximum": 175, "mean": [61, 176, 347], "measur": [138, 297, 334, 339, 340, 343], "median": [76, 177], "method": [40, 54, 89], "mewmaparam": [220, 222, 225, 226, 227, 228], "minimum": 178, "model": [132, 343, 347], "model_mean": 307, "modul": 342, "mqr": [1, 2, 13, 14, 18, 26, 27, 28, 31, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 85, 86, 87, 88, 89, 90, 91, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 204, 205, 207, 212, 213, 214, 215, 217, 222, 225, 226, 227, 228, 234, 238, 239, 241, 247, 250, 251, 265, 270, 271, 273, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 332, 333, 334, 335, 336, 337, 338, 344, 345], "msa": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 297, 334], "mu": 227, "mu_0": 213, "multipl": 346, "n_1side": 280, "n_trend": 281, "name": [27, 41, 90, 133, 179, 214, 228, 238, 250, 270], "namemap": [137, 138, 139, 140], "namespac": 0, "nbtool": 298, "nob": [180, 204], "nonparametr": 296, "note": [1, 3, 295], "notebook": [298, 339, 344], "nsigma": [134, 239, 251, 271], "null": 55, "num_distinct_cat": 145, "oc": 329, "oper": 139, "other": 346, "outlier": 181, "overrid": 345, "paramet": 348, "part": 140, "pdf": 317, "plot": [0, 299, 332, 333, 334, 335, 336, 337, 338, 339, 344, 345, 346], "point": 341, "power": [85, 86, 87, 88, 89, 90, 91], "power_1sampl": [95, 104, 120], "power_2sampl": [96, 105, 121], "practic": 341, "predefin": 348, "primer": 346, "problem": [339, 343], "process": [4, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 300, 301, 335, 337, 339, 348, 349], "proport": 92, "pttype": 28, "pvalu": 56, "quantil": 79, "quartile1": 182, "quartile3": 183, "r_oper": 314, "randomis": 341, "randomise_run": 29, "rate": 101, "rc_param": 345, "refer": [0, 4, 295, 341, 348], "regress": [336, 340, 343, 347], "regression_result": 135, "relat": [0, 4], "replic": [30, 341], "res_histogram": 321, "res_probplot": 322, "res_v_factor": 323, "res_v_fit": 324, "res_v_ob": 325, "residu": [326, 347], "result": [342, 343], "rparam": [232, 234, 238, 239, 241], "rule": [302, 348], "run": 31, "same": 346, "sampl": [158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 196, 342], "sample_s": 91, "sample_stat": 57, "sample_stat_target": 58, "sample_stat_valu": 59, "save": [341, 348], "scale": [13, 346], "screen": 341, "se": [240, 252, 259, 272], "sem": 184, "set": 343, "sharei": 331, "sharex": 330, "shewhartparam": 256, "sigma": [215, 241, 273], "size": 342, "size_1sampl": [65, 97, 106, 113, 122], "size_2sampl": [66, 98, 107, 114, 123], "size_pair": 67, "skew": 185, "solve_arl": 290, "solve_h4": 291, "sparam": [245, 247, 250, 251], "spc": [204, 205, 207, 212, 213, 214, 215, 217, 222, 225, 226, 227, 228, 234, 238, 239, 241, 247, 250, 251, 265, 270, 271, 273, 301, 302, 303, 337], "spec": 159, "specif": [188, 189, 190, 191, 349], "standard": 4, "start": 1, "stat": [60, 205], "statist": [200, 216, 229, 242, 253, 260, 274, 295, 296, 301, 337, 342, 348, 349], "std": 186, "stddev": 110, "steady_st": 217, "structur": 342, "style": 346, "stylesheet": 345, "summari": [9, 192, 194, 195, 196, 300, 318, 349], "system": [297, 334, 340, 343], "tabl": [146, 347], "target": [190, 201, 218, 230, 243, 254, 261, 275], "test": [46, 72, 340, 342], "test_1sampl": [49, 68, 74, 77, 81, 99, 108, 115, 124], "test_2sampl": [69, 75, 100, 109, 116, 125], "test_diff": 47, "test_nsampl": [78, 83], "test_pair": 70, "testpow": [84, 85, 86, 87, 88, 89, 90, 91], "tick": 346, "titl": 346, "to_df": 32, "toler": [136, 319], "tool": [0, 298, 338, 339, 344], "transform": [33, 34, 304, 341], "translat": 14, "tt": 342, "type": 342, "ucl": [202, 219, 231, 244, 255, 262, 276], "up": 343, "upper": 42, "user": 339, "usl": 191, "util": 303, "v": 348, "valu": 43, "var": 187, "varianc": [82, 117, 293, 332], "variancet": [141, 142, 143, 144, 145, 146], "vstack": 149, "what": 1, "workflow": 341, "wrap": 1, "xbar_oper": 315, "xbarparam": [263, 265, 270, 271, 273], "zscore": 292}})